{"ast":null,"code":"var _a, _b, _c, _d, _e;\n\nimport { __assign } from \"tslib\";\nimport { PanelType } from './Panel.types';\nimport { AnimationClassNames, AnimationVariables, getGlobalClassNames, HighContrastSelector, ScreenWidthMinMedium, ScreenWidthMinLarge, ScreenWidthMinXLarge, ScreenWidthMinXXLarge, ScreenWidthMinUhfMobile, IconFontSizes } from '../../Styling';\nvar GlobalClassNames = {\n  root: 'ms-Panel',\n  main: 'ms-Panel-main',\n  commands: 'ms-Panel-commands',\n  contentInner: 'ms-Panel-contentInner',\n  scrollableContent: 'ms-Panel-scrollableContent',\n  navigation: 'ms-Panel-navigation',\n  closeButton: 'ms-Panel-closeButton ms-PanelAction-close',\n  header: 'ms-Panel-header',\n  headerText: 'ms-Panel-headerText',\n  content: 'ms-Panel-content',\n  footer: 'ms-Panel-footer',\n  footerInner: 'ms-Panel-footerInner',\n  isOpen: 'is-open',\n  hasCloseButton: 'ms-Panel--hasCloseButton',\n  smallFluid: 'ms-Panel--smFluid',\n  smallFixedNear: 'ms-Panel--smLeft',\n  smallFixedFar: 'ms-Panel--sm',\n  medium: 'ms-Panel--md',\n  large: 'ms-Panel--lg',\n  largeFixed: 'ms-Panel--fixed',\n  extraLarge: 'ms-Panel--xl',\n  custom: 'ms-Panel--custom',\n  customNear: 'ms-Panel--customLeft'\n};\nvar panelWidth = {\n  full: '100%',\n  auto: 'auto',\n  xs: 272,\n  sm: 340,\n  md1: 592,\n  md2: 644,\n  lg: 940\n};\nvar panelMargin = {\n  auto: 'auto',\n  none: 0,\n  md: 48,\n  lg: 428,\n  xl: 176\n}; // Following consts are used below in `getPanelBreakpoints()` function to provide\n// necessary fallbacks for different types of Panel in different breakpoints.\n\nvar smallPanelSelectors = (_a = {}, _a[\"@media (min-width: \" + ScreenWidthMinMedium + \"px)\"] = {\n  width: panelWidth.sm\n}, _a);\nvar mediumPanelSelectors = (_b = {}, _b[\"@media (min-width: \" + ScreenWidthMinLarge + \"px)\"] = {\n  width: panelWidth.md1\n}, _b[\"@media (min-width: \" + ScreenWidthMinXLarge + \"px)\"] = {\n  width: panelWidth.md2\n}, _b);\nvar largePanelSelectors = (_c = {}, _c[\"@media (min-width: \" + ScreenWidthMinUhfMobile + \"px)\"] = {\n  left: panelMargin.md,\n  width: panelWidth.auto\n}, _c[\"@media (min-width: \" + ScreenWidthMinXXLarge + \"px)\"] = {\n  left: panelMargin.lg\n}, _c);\nvar largeFixedPanelSelectors = (_d = {}, _d[\"@media (min-width: \" + ScreenWidthMinXXLarge + \"px)\"] = {\n  left: panelMargin.auto,\n  width: panelWidth.lg\n}, _d);\nvar extraLargePanelSelectors = (_e = {}, _e[\"@media (min-width: \" + ScreenWidthMinXXLarge + \"px)\"] = {\n  left: panelMargin.xl\n}, _e); // Make sure Panels have fallbacks to different breakpoints by reusing same selectors.\n// This is done in the effort to follow design redlines.\n\nvar getPanelBreakpoints = function (type) {\n  var selectors; // Panel types `smallFluid`, `smallFixedNear`, `custom` and `customNear`\n  // are not checked in here because they render the same in all the breakpoints\n  // and have the checks done separately in the `getStyles` function below.\n\n  switch (type) {\n    case PanelType.smallFixedFar:\n      selectors = __assign({}, smallPanelSelectors);\n      break;\n\n    case PanelType.medium:\n      selectors = __assign(__assign({}, smallPanelSelectors), mediumPanelSelectors);\n      break;\n\n    case PanelType.large:\n      selectors = __assign(__assign(__assign({}, smallPanelSelectors), mediumPanelSelectors), largePanelSelectors);\n      break;\n\n    case PanelType.largeFixed:\n      selectors = __assign(__assign(__assign(__assign({}, smallPanelSelectors), mediumPanelSelectors), largePanelSelectors), largeFixedPanelSelectors);\n      break;\n\n    case PanelType.extraLarge:\n      selectors = __assign(__assign(__assign(__assign({}, smallPanelSelectors), mediumPanelSelectors), largePanelSelectors), extraLargePanelSelectors);\n      break;\n\n    default:\n      break;\n  }\n\n  return selectors;\n};\n\nvar commandBarHeight = '44px';\nvar sharedPaddingStyles = {\n  paddingLeft: '24px',\n  paddingRight: '24px'\n};\nexport var getStyles = function (props) {\n  var _a, _b, _c, _d;\n\n  var className = props.className,\n      focusTrapZoneClassName = props.focusTrapZoneClassName,\n      hasCloseButton = props.hasCloseButton,\n      headerClassName = props.headerClassName,\n      isAnimating = props.isAnimating,\n      isFooterSticky = props.isFooterSticky,\n      isFooterAtBottom = props.isFooterAtBottom,\n      isOnRightSide = props.isOnRightSide,\n      isOpen = props.isOpen,\n      isHiddenOnDismiss = props.isHiddenOnDismiss,\n      hasCustomNavigation = props.hasCustomNavigation,\n      theme = props.theme,\n      _e = props.type,\n      type = _e === void 0 ? PanelType.smallFixedFar : _e;\n  var effects = theme.effects,\n      fonts = theme.fonts,\n      semanticColors = theme.semanticColors;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  var isCustomPanel = type === PanelType.custom || type === PanelType.customNear;\n  return {\n    root: [classNames.root, theme.fonts.medium, isOpen && classNames.isOpen, hasCloseButton && classNames.hasCloseButton, {\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    }, isCustomPanel && isOnRightSide && classNames.custom, isCustomPanel && !isOnRightSide && classNames.customNear, className],\n    overlay: [{\n      pointerEvents: 'auto',\n      cursor: 'pointer'\n    }, isOpen && isAnimating && AnimationClassNames.fadeIn100, !isOpen && isAnimating && AnimationClassNames.fadeOut100],\n    hiddenPanel: [!isOpen && !isAnimating && isHiddenOnDismiss && {\n      visibility: 'hidden'\n    }],\n    main: [classNames.main, {\n      backgroundColor: semanticColors.bodyBackground,\n      boxShadow: effects.elevation64,\n      pointerEvents: 'auto',\n      position: 'absolute',\n      display: 'flex',\n      flexDirection: 'column',\n      overflowX: 'hidden',\n      overflowY: 'auto',\n      WebkitOverflowScrolling: 'touch',\n      bottom: 0,\n      top: 0,\n      // left, right, width are overridden depending on the type of the Panel and the screen breakpoint.\n      left: panelMargin.auto,\n      right: panelMargin.none,\n      width: panelWidth.full,\n      selectors: __assign((_a = {}, _a[HighContrastSelector] = {\n        borderLeft: \"3px solid \" + semanticColors.variantBorder,\n        borderRight: \"3px solid \" + semanticColors.variantBorder\n      }, _a), getPanelBreakpoints(type))\n    }, type === PanelType.smallFluid && {\n      left: panelMargin.none\n    }, type === PanelType.smallFixedNear && {\n      left: panelMargin.none,\n      right: panelMargin.auto,\n      width: panelWidth.xs\n    }, type === PanelType.customNear && {\n      right: 'auto',\n      left: 0\n    }, isCustomPanel && {\n      maxWidth: '100vw'\n    }, isOpen && isAnimating && !isOnRightSide && AnimationClassNames.slideRightIn40, isOpen && isAnimating && isOnRightSide && AnimationClassNames.slideLeftIn40, !isOpen && isAnimating && !isOnRightSide && AnimationClassNames.slideLeftOut40, !isOpen && isAnimating && isOnRightSide && AnimationClassNames.slideRightOut40, focusTrapZoneClassName],\n    commands: [classNames.commands, {\n      paddingTop: 18,\n      selectors: (_b = {}, _b[\"@media (min-height: \" + ScreenWidthMinMedium + \"px)\"] = {\n        position: 'sticky',\n        top: 0,\n        zIndex: 1\n      }, _b)\n    }, hasCustomNavigation && {\n      paddingTop: 'inherit'\n    }, // - Ensures that the sticky header always has a background to prevent overlaps on scroll.\n    // - Adds consistent behavior with how Footer is being handled\n    isFooterSticky && {\n      backgroundColor: semanticColors.bodyBackground\n    }],\n    navigation: [classNames.navigation, {\n      display: 'flex',\n      justifyContent: 'flex-end'\n    }, hasCustomNavigation && {\n      height: commandBarHeight\n    }],\n    contentInner: [classNames.contentInner, {\n      display: 'flex',\n      flexDirection: 'column',\n      flexGrow: 1,\n      overflowY: 'hidden'\n    }],\n    header: [classNames.header, sharedPaddingStyles, {\n      alignSelf: 'flex-start'\n    }, hasCloseButton && !hasCustomNavigation && {\n      flexGrow: 1\n    }, hasCustomNavigation && {\n      // Ensure that title doesn't shrink if screen is too small\n      flexShrink: 0\n    }],\n    headerText: [classNames.headerText, fonts.xLarge, {\n      color: semanticColors.bodyText,\n      lineHeight: '27px',\n      overflowWrap: 'break-word',\n      wordWrap: 'break-word',\n      wordBreak: 'break-word',\n      hyphens: 'auto'\n    }, headerClassName],\n    scrollableContent: [classNames.scrollableContent, {\n      overflowY: 'auto'\n    }, isFooterAtBottom && {\n      flexGrow: 1,\n      display: 'inherit',\n      flexDirection: 'inherit'\n    }],\n    content: [classNames.content, sharedPaddingStyles, {\n      paddingBottom: 20\n    }, isFooterAtBottom && {\n      selectors: (_c = {}, _c[\"@media (min-height: \" + ScreenWidthMinMedium + \"px)\"] = {\n        flexGrow: 1\n      }, _c)\n    }],\n    footer: [classNames.footer, {\n      // Ensure that footer doesn't shrink if screen is too small\n      flexShrink: 0,\n      borderTop: '1px solid transparent',\n      transition: \"opacity \" + AnimationVariables.durationValue3 + \" \" + AnimationVariables.easeFunction2,\n      selectors: (_d = {}, _d[\"@media (min-height: \" + ScreenWidthMinMedium + \"px)\"] = {\n        position: 'sticky',\n        bottom: 0\n      }, _d)\n    }, isFooterSticky && {\n      backgroundColor: semanticColors.bodyBackground,\n      borderTopColor: semanticColors.variantBorder\n    }],\n    footerInner: [classNames.footerInner, sharedPaddingStyles, {\n      paddingBottom: 16,\n      paddingTop: 16\n    }],\n    subComponentStyles: {\n      closeButton: {\n        root: [classNames.closeButton, {\n          marginRight: 14,\n          color: theme.palette.neutralSecondary,\n          fontSize: IconFontSizes.large\n        }, hasCustomNavigation && {\n          marginRight: 0,\n          height: 'auto',\n          width: '44px'\n        }],\n        rootHovered: {\n          color: theme.palette.neutralPrimary\n        }\n      }\n    }\n  };\n};","map":{"version":3,"sources":["components/Panel/Panel.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { PanelType } from './Panel.types';\nimport {\n  AnimationClassNames,\n  AnimationVariables,\n  getGlobalClassNames,\n  HighContrastSelector,\n  ScreenWidthMinMedium,\n  ScreenWidthMinLarge,\n  ScreenWidthMinXLarge,\n  ScreenWidthMinXXLarge,\n  ScreenWidthMinUhfMobile,\n  IconFontSizes,\n} from '../../Styling';\nimport type { IPanelStyleProps, IPanelStyles } from './Panel.types';\nimport type { IStyle } from '../../Styling';\n\nconst GlobalClassNames = {\n  root: 'ms-Panel',\n  main: 'ms-Panel-main',\n  commands: 'ms-Panel-commands',\n  contentInner: 'ms-Panel-contentInner',\n  scrollableContent: 'ms-Panel-scrollableContent',\n  navigation: 'ms-Panel-navigation',\n  closeButton: 'ms-Panel-closeButton ms-PanelAction-close',\n  header: 'ms-Panel-header',\n  headerText: 'ms-Panel-headerText',\n  content: 'ms-Panel-content',\n  footer: 'ms-Panel-footer',\n  footerInner: 'ms-Panel-footerInner',\n  isOpen: 'is-open',\n  hasCloseButton: 'ms-Panel--hasCloseButton',\n  smallFluid: 'ms-Panel--smFluid',\n  smallFixedNear: 'ms-Panel--smLeft',\n  smallFixedFar: 'ms-Panel--sm',\n  medium: 'ms-Panel--md',\n  large: 'ms-Panel--lg',\n  largeFixed: 'ms-Panel--fixed',\n  extraLarge: 'ms-Panel--xl',\n  custom: 'ms-Panel--custom',\n  customNear: 'ms-Panel--customLeft',\n};\n\nconst panelWidth = {\n  full: '100%',\n  auto: 'auto',\n  xs: 272,\n  sm: 340,\n  md1: 592,\n  md2: 644,\n  lg: 940,\n};\n\nconst panelMargin = {\n  auto: 'auto',\n  none: 0,\n  md: 48,\n  lg: 428,\n  xl: 176,\n};\n\n// Following consts are used below in `getPanelBreakpoints()` function to provide\n// necessary fallbacks for different types of Panel in different breakpoints.\nconst smallPanelSelectors = {\n  [`@media (min-width: ${ScreenWidthMinMedium}px)`]: {\n    width: panelWidth.sm,\n  },\n};\n\nconst mediumPanelSelectors = {\n  [`@media (min-width: ${ScreenWidthMinLarge}px)`]: {\n    width: panelWidth.md1,\n  },\n  [`@media (min-width: ${ScreenWidthMinXLarge}px)`]: {\n    width: panelWidth.md2,\n  },\n};\n\nconst largePanelSelectors = {\n  [`@media (min-width: ${ScreenWidthMinUhfMobile}px)`]: {\n    left: panelMargin.md,\n    width: panelWidth.auto,\n  },\n  [`@media (min-width: ${ScreenWidthMinXXLarge}px)`]: {\n    left: panelMargin.lg,\n  },\n};\n\nconst largeFixedPanelSelectors = {\n  [`@media (min-width: ${ScreenWidthMinXXLarge}px)`]: {\n    left: panelMargin.auto,\n    width: panelWidth.lg,\n  },\n};\n\nconst extraLargePanelSelectors = {\n  [`@media (min-width: ${ScreenWidthMinXXLarge}px)`]: {\n    left: panelMargin.xl,\n  },\n};\n\n// Make sure Panels have fallbacks to different breakpoints by reusing same selectors.\n// This is done in the effort to follow design redlines.\nconst getPanelBreakpoints = (type: PanelType): { [x: string]: IStyle } | undefined => {\n  let selectors;\n\n  // Panel types `smallFluid`, `smallFixedNear`, `custom` and `customNear`\n  // are not checked in here because they render the same in all the breakpoints\n  // and have the checks done separately in the `getStyles` function below.\n  switch (type) {\n    case PanelType.smallFixedFar:\n      selectors = {\n        ...smallPanelSelectors,\n      };\n      break;\n    case PanelType.medium:\n      selectors = {\n        ...smallPanelSelectors,\n        ...mediumPanelSelectors,\n      };\n      break;\n    case PanelType.large:\n      selectors = {\n        ...smallPanelSelectors,\n        ...mediumPanelSelectors,\n        ...largePanelSelectors,\n      };\n      break;\n    case PanelType.largeFixed:\n      selectors = {\n        ...smallPanelSelectors,\n        ...mediumPanelSelectors,\n        ...largePanelSelectors,\n        ...largeFixedPanelSelectors,\n      };\n      break;\n    case PanelType.extraLarge:\n      selectors = {\n        ...smallPanelSelectors,\n        ...mediumPanelSelectors,\n        ...largePanelSelectors,\n        ...extraLargePanelSelectors,\n      };\n      break;\n    default:\n      break;\n  }\n\n  return selectors;\n};\n\nconst commandBarHeight = '44px';\n\nconst sharedPaddingStyles = {\n  paddingLeft: '24px',\n  paddingRight: '24px',\n};\n\nexport const getStyles = (props: IPanelStyleProps): IPanelStyles => {\n  const {\n    className,\n    focusTrapZoneClassName,\n    hasCloseButton,\n    headerClassName,\n    isAnimating,\n    isFooterSticky,\n    isFooterAtBottom,\n    isOnRightSide,\n    isOpen,\n    isHiddenOnDismiss,\n    hasCustomNavigation,\n    theme,\n    type = PanelType.smallFixedFar,\n  } = props;\n  const { effects, fonts, semanticColors } = theme;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n  const isCustomPanel = type === PanelType.custom || type === PanelType.customNear;\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      isOpen && classNames.isOpen,\n      hasCloseButton && classNames.hasCloseButton,\n      {\n        pointerEvents: 'none',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n      },\n      isCustomPanel && isOnRightSide && classNames.custom,\n      isCustomPanel && !isOnRightSide && classNames.customNear,\n      className,\n    ],\n    overlay: [\n      {\n        pointerEvents: 'auto',\n        cursor: 'pointer',\n      },\n      isOpen && isAnimating && AnimationClassNames.fadeIn100,\n      !isOpen && isAnimating && AnimationClassNames.fadeOut100,\n    ],\n    hiddenPanel: [\n      !isOpen &&\n        !isAnimating &&\n        isHiddenOnDismiss && {\n          visibility: 'hidden',\n        },\n    ],\n    main: [\n      classNames.main,\n      {\n        backgroundColor: semanticColors.bodyBackground,\n        boxShadow: effects.elevation64,\n        pointerEvents: 'auto',\n        position: 'absolute',\n        display: 'flex',\n        flexDirection: 'column',\n        overflowX: 'hidden',\n        overflowY: 'auto',\n        WebkitOverflowScrolling: 'touch',\n        bottom: 0,\n        top: 0,\n        // left, right, width are overridden depending on the type of the Panel and the screen breakpoint.\n        left: panelMargin.auto,\n        right: panelMargin.none,\n        width: panelWidth.full,\n        selectors: {\n          [HighContrastSelector]: {\n            borderLeft: `3px solid ${semanticColors.variantBorder}`,\n            borderRight: `3px solid ${semanticColors.variantBorder}`,\n          },\n          ...getPanelBreakpoints(type),\n        },\n      },\n      type === PanelType.smallFluid && {\n        left: panelMargin.none,\n      },\n      type === PanelType.smallFixedNear && {\n        left: panelMargin.none,\n        right: panelMargin.auto,\n        width: panelWidth.xs,\n      },\n      type === PanelType.customNear && {\n        right: 'auto',\n        left: 0,\n      },\n      isCustomPanel && {\n        maxWidth: '100vw',\n      },\n      isOpen && isAnimating && !isOnRightSide && AnimationClassNames.slideRightIn40,\n      isOpen && isAnimating && isOnRightSide && AnimationClassNames.slideLeftIn40,\n      !isOpen && isAnimating && !isOnRightSide && AnimationClassNames.slideLeftOut40,\n      !isOpen && isAnimating && isOnRightSide && AnimationClassNames.slideRightOut40,\n      focusTrapZoneClassName,\n    ],\n    commands: [\n      classNames.commands,\n      {\n        paddingTop: 18,\n        selectors: {\n          [`@media (min-height: ${ScreenWidthMinMedium}px)`]: {\n            position: 'sticky',\n            top: 0,\n            zIndex: 1,\n          },\n        },\n      },\n      hasCustomNavigation && {\n        paddingTop: 'inherit',\n      },\n      // - Ensures that the sticky header always has a background to prevent overlaps on scroll.\n      // - Adds consistent behavior with how Footer is being handled\n      isFooterSticky && {\n        backgroundColor: semanticColors.bodyBackground,\n      },\n    ],\n    navigation: [\n      classNames.navigation,\n      {\n        display: 'flex',\n        justifyContent: 'flex-end',\n      },\n      hasCustomNavigation && {\n        height: commandBarHeight,\n      },\n    ],\n    contentInner: [\n      classNames.contentInner,\n      {\n        display: 'flex',\n        flexDirection: 'column',\n        flexGrow: 1,\n        overflowY: 'hidden',\n      },\n    ],\n    header: [\n      classNames.header,\n      sharedPaddingStyles,\n      {\n        alignSelf: 'flex-start',\n      },\n      hasCloseButton &&\n        !hasCustomNavigation && {\n          flexGrow: 1,\n        },\n      hasCustomNavigation && {\n        // Ensure that title doesn't shrink if screen is too small\n        flexShrink: 0,\n      },\n    ],\n    headerText: [\n      classNames.headerText,\n      fonts.xLarge,\n      {\n        color: semanticColors.bodyText,\n        lineHeight: '27px',\n        overflowWrap: 'break-word',\n        wordWrap: 'break-word',\n        wordBreak: 'break-word',\n        hyphens: 'auto',\n      },\n      headerClassName,\n    ],\n    scrollableContent: [\n      classNames.scrollableContent,\n      {\n        overflowY: 'auto',\n      },\n      isFooterAtBottom && {\n        flexGrow: 1,\n        display: 'inherit',\n        flexDirection: 'inherit',\n      },\n    ],\n    content: [\n      classNames.content,\n      sharedPaddingStyles,\n      {\n        paddingBottom: 20,\n      },\n      isFooterAtBottom && {\n        selectors: {\n          [`@media (min-height: ${ScreenWidthMinMedium}px)`]: {\n            flexGrow: 1,\n          },\n        },\n      },\n    ],\n    footer: [\n      classNames.footer,\n      {\n        // Ensure that footer doesn't shrink if screen is too small\n        flexShrink: 0,\n        borderTop: '1px solid transparent',\n        transition: `opacity ${AnimationVariables.durationValue3} ${AnimationVariables.easeFunction2}`,\n        selectors: {\n          [`@media (min-height: ${ScreenWidthMinMedium}px)`]: {\n            position: 'sticky',\n            bottom: 0,\n          },\n        },\n      },\n      isFooterSticky && {\n        backgroundColor: semanticColors.bodyBackground,\n        borderTopColor: semanticColors.variantBorder,\n      },\n    ],\n    footerInner: [\n      classNames.footerInner,\n      sharedPaddingStyles,\n      {\n        paddingBottom: 16,\n        paddingTop: 16,\n      },\n    ],\n    subComponentStyles: {\n      closeButton: {\n        root: [\n          classNames.closeButton,\n          {\n            marginRight: 14,\n            color: theme.palette.neutralSecondary,\n            fontSize: IconFontSizes.large,\n          },\n          hasCustomNavigation && {\n            marginRight: 0,\n            height: 'auto',\n            width: '44px',\n          },\n        ],\n        rootHovered: {\n          color: theme.palette.neutralPrimary,\n        },\n      },\n    },\n  };\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}