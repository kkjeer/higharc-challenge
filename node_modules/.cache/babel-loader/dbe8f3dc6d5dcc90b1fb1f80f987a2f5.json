{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { HighContrastSelector, getGlobalClassNames, IconFontSizes, getHighContrastNoAdjustStyle } from '../../Styling';\nimport { getRTL } from '../../Utilities';\nexport var CheckGlobalClassNames = {\n  root: 'ms-Check',\n  circle: 'ms-Check-circle',\n  check: 'ms-Check-check',\n\n  /** Must be manually applied to the parent element of the check. */\n  checkHost: 'ms-Check-checkHost'\n};\nexport var getStyles = function (props) {\n  var _a, _b, _c, _d, _e; // eslint-disable-next-line deprecation/deprecation\n\n\n  var _f = props.height,\n      height = _f === void 0 ? props.checkBoxHeight || '18px' : _f,\n      checked = props.checked,\n      className = props.className,\n      theme = props.theme;\n  var palette = theme.palette,\n      semanticColors = theme.semanticColors,\n      fonts = theme.fonts;\n  var isRTL = getRTL(theme);\n  var classNames = getGlobalClassNames(CheckGlobalClassNames, theme);\n  var sharedCircleCheck = {\n    fontSize: height,\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    width: height,\n    height: height,\n    textAlign: 'center',\n    // inline-flex prevents the check from shifting with custom line height styles\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    verticalAlign: 'middle'\n  };\n  return {\n    root: [classNames.root, fonts.medium, {\n      // lineHeight currently needs to be a string to output without 'px'\n      lineHeight: '1',\n      width: height,\n      height: height,\n      verticalAlign: 'top',\n      position: 'relative',\n      userSelect: 'none',\n      selectors: (_a = {\n        ':before': {\n          content: '\"\"',\n          position: 'absolute',\n          top: '1px',\n          right: '1px',\n          bottom: '1px',\n          left: '1px',\n          borderRadius: '50%',\n          opacity: 1,\n          background: semanticColors.bodyBackground\n        }\n      }, _a[\".\" + classNames.checkHost + \":hover &, .\" + classNames.checkHost + \":focus &, &:hover, &:focus\"] = {\n        opacity: 1\n      }, _a)\n    }, checked && ['is-checked', {\n      selectors: {\n        ':before': {\n          background: palette.themePrimary,\n          opacity: 1,\n          selectors: (_b = {}, _b[HighContrastSelector] = {\n            background: 'Window'\n          }, _b)\n        }\n      }\n    }], className],\n    circle: [classNames.circle, sharedCircleCheck, {\n      color: palette.neutralSecondary,\n      selectors: (_c = {}, _c[HighContrastSelector] = {\n        color: 'WindowText'\n      }, _c)\n    }, checked && {\n      color: palette.white\n    }],\n    check: [classNames.check, sharedCircleCheck, {\n      opacity: 0,\n      color: palette.neutralSecondary,\n      fontSize: IconFontSizes.medium,\n      left: isRTL ? '-0.5px' : '.5px',\n      top: '-1px',\n      selectors: (_d = {\n        ':hover': {\n          opacity: 1\n        }\n      }, _d[HighContrastSelector] = __assign({}, getHighContrastNoAdjustStyle()), _d)\n    }, checked && {\n      opacity: 1,\n      color: palette.white,\n      fontWeight: 900,\n      selectors: (_e = {}, _e[HighContrastSelector] = {\n        border: 'none',\n        color: 'WindowText'\n      }, _e)\n    }],\n    checkHost: classNames.checkHost\n  };\n};","map":{"version":3,"sources":["components/Check/Check.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { HighContrastSelector, getGlobalClassNames, IconFontSizes, getHighContrastNoAdjustStyle } from '../../Styling';\nimport { getRTL } from '../../Utilities';\nimport type { ICheckStyleProps, ICheckStyles } from './Check.types';\nimport type { IStyle } from '../../Styling';\n\nexport const CheckGlobalClassNames = {\n  root: 'ms-Check',\n  circle: 'ms-Check-circle',\n  check: 'ms-Check-check',\n  /** Must be manually applied to the parent element of the check. */\n  checkHost: 'ms-Check-checkHost',\n};\n\nexport const getStyles = (props: ICheckStyleProps): ICheckStyles => {\n  // eslint-disable-next-line deprecation/deprecation\n  const { height = props.checkBoxHeight || '18px', checked, className, theme } = props;\n\n  const { palette, semanticColors, fonts } = theme;\n  const isRTL = getRTL(theme);\n\n  const classNames = getGlobalClassNames(CheckGlobalClassNames, theme);\n\n  const sharedCircleCheck: IStyle = {\n    fontSize: height,\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    width: height,\n    height: height,\n    textAlign: 'center',\n    // inline-flex prevents the check from shifting with custom line height styles\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    verticalAlign: 'middle',\n  };\n\n  return {\n    root: [\n      classNames.root,\n      fonts.medium,\n      {\n        // lineHeight currently needs to be a string to output without 'px'\n        lineHeight: '1',\n        width: height,\n        height: height,\n        verticalAlign: 'top',\n        position: 'relative',\n        userSelect: 'none',\n\n        selectors: {\n          ':before': {\n            content: '\"\"',\n            position: 'absolute',\n            top: '1px',\n            right: '1px',\n            bottom: '1px',\n            left: '1px',\n            borderRadius: '50%',\n            opacity: 1,\n            background: semanticColors.bodyBackground,\n          },\n\n          [`.${classNames.checkHost}:hover &, .${classNames.checkHost}:focus &, &:hover, &:focus`]: {\n            opacity: 1,\n          },\n        },\n      },\n\n      checked && [\n        'is-checked',\n        {\n          selectors: {\n            ':before': {\n              background: palette.themePrimary,\n              opacity: 1,\n              selectors: {\n                [HighContrastSelector]: {\n                  background: 'Window',\n                },\n              },\n            },\n          },\n        },\n      ],\n      className,\n    ],\n\n    circle: [\n      classNames.circle,\n      sharedCircleCheck,\n\n      {\n        color: palette.neutralSecondary,\n\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'WindowText',\n          },\n        },\n      },\n\n      checked && {\n        color: palette.white,\n      },\n    ],\n\n    check: [\n      classNames.check,\n      sharedCircleCheck,\n\n      {\n        opacity: 0,\n        color: palette.neutralSecondary,\n        fontSize: IconFontSizes.medium,\n        left: isRTL ? '-0.5px' : '.5px', // for centering the check icon inside the circle.\n        top: '-1px', // the check is slightly lower than center compared to the circle.\n\n        selectors: {\n          ':hover': {\n            opacity: 1,\n          },\n\n          [HighContrastSelector]: {\n            ...getHighContrastNoAdjustStyle(),\n          },\n        },\n      },\n\n      checked && {\n        opacity: 1,\n        color: palette.white,\n        fontWeight: 900,\n\n        selectors: {\n          [HighContrastSelector]: {\n            border: 'none',\n            color: 'WindowText',\n          },\n        },\n      },\n    ],\n\n    checkHost: classNames.checkHost,\n  };\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}