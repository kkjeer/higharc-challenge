{"ast":null,"code":"import * as React from 'react';\nimport { Customizations } from './Customizations';\nimport { CustomizerContext } from './CustomizerContext';\n/**\n * Hook to get Customizations settings from Customizations singleton or CustomizerContext.\n * It will trigger component state update on settings change observed.\n */\n\nexport function useCustomizationSettings(properties, scopeName) {\n  var forceUpdate = useForceUpdate();\n  var customizations = React.useContext(CustomizerContext).customizations;\n  var inCustomizerContext = customizations.inCustomizerContext;\n  React.useEffect(function () {\n    if (!inCustomizerContext) {\n      Customizations.observe(forceUpdate);\n    }\n\n    return function () {\n      if (!inCustomizerContext) {\n        Customizations.unobserve(forceUpdate);\n      }\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps -- exclude forceUpdate\n  }, [inCustomizerContext]);\n  return Customizations.getSettings(properties, scopeName, customizations);\n}\n\nfunction useForceUpdate() {\n  var _a = React.useState(0),\n      setValue = _a[1];\n\n  return function () {\n    return setValue(function (value) {\n      return ++value;\n    });\n  };\n}","map":{"version":3,"sources":["customizations/useCustomizationSettings.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,cAAT,QAA+B,kBAA/B;AACA,SAAS,iBAAT,QAAkC,qBAAlC;AAGA;;;AAGG;;AACH,OAAM,SAAU,wBAAV,CAAmC,UAAnC,EAAyD,SAAzD,EAA2E;EAC/E,IAAM,WAAW,GAAG,cAAc,EAAlC;EACQ,IAAA,cAAc,GAAK,KAAK,CAAC,UAAN,CAAiB,iBAAjB,EAAL,cAAd;EACA,IAAA,mBAAmB,GAAK,cAAc,CAAnB,mBAAnB;EACR,KAAK,CAAC,SAAN,CAAgB,YAAA;IACd,IAAI,CAAC,mBAAL,EAA0B;MACxB,cAAc,CAAC,OAAf,CAAuB,WAAvB;IACD;;IACD,OAAO,YAAA;MACL,IAAI,CAAC,mBAAL,EAA0B;QACxB,cAAc,CAAC,SAAf,CAAyB,WAAzB;MACD;IACF,CAJD,CAJc,CASd;EACD,CAVD,EAUG,CAAC,mBAAD,CAVH;EAYA,OAAO,cAAc,CAAC,WAAf,CAA2B,UAA3B,EAAuC,SAAvC,EAAkD,cAAlD,CAAP;AACD;;AAED,SAAS,cAAT,GAAuB;EACf,IAAA,EAAA,GAAe,KAAK,CAAC,QAAN,CAAe,CAAf,CAAf;EAAA,IAAG,QAAQ,GAAA,EAAA,CAAA,CAAA,CAAX;;EACN,OAAO,YAAA;IAAM,OAAA,QAAQ,CAAC,UAAA,KAAA,EAAK;MAAI,OAAA,EAAA,KAAA;IAAlB,CAAQ,CAAR;EAA0B,CAAvC;AACD","sourcesContent":["import * as React from 'react';\nimport { Customizations } from './Customizations';\nimport { CustomizerContext } from './CustomizerContext';\nimport type { ISettings } from './Customizations';\n\n/**\n * Hook to get Customizations settings from Customizations singleton or CustomizerContext.\n * It will trigger component state update on settings change observed.\n */\nexport function useCustomizationSettings(properties: string[], scopeName?: string): ISettings {\n  const forceUpdate = useForceUpdate();\n  const { customizations } = React.useContext(CustomizerContext);\n  const { inCustomizerContext } = customizations;\n  React.useEffect(() => {\n    if (!inCustomizerContext) {\n      Customizations.observe(forceUpdate);\n    }\n    return () => {\n      if (!inCustomizerContext) {\n        Customizations.unobserve(forceUpdate);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps -- exclude forceUpdate\n  }, [inCustomizerContext]);\n\n  return Customizations.getSettings(properties, scopeName, customizations);\n}\n\nfunction useForceUpdate() {\n  const [, setValue] = React.useState(0);\n  return () => setValue(value => ++value);\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}