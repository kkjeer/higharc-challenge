{"ast":null,"code":"import { __spreadArray } from \"tslib\";\nimport { getGlobalClassNames, HighContrastSelector, AnimationVariables, getFocusStyle } from '@fluentui/style-utilities';\nimport { getRTL } from '@fluentui/utilities';\nvar GlobalClassNames = {\n  root: 'ms-Slider',\n  enabled: 'ms-Slider-enabled',\n  disabled: 'ms-Slider-disabled',\n  row: 'ms-Slider-row',\n  column: 'ms-Slider-column',\n  container: 'ms-Slider-container',\n  slideBox: 'ms-Slider-slideBox',\n  line: 'ms-Slider-line',\n  thumb: 'ms-Slider-thumb',\n  activeSection: 'ms-Slider-active',\n  inactiveSection: 'ms-Slider-inactive',\n  valueLabel: 'ms-Slider-value',\n  showValue: 'ms-Slider-showValue',\n  showTransitions: 'ms-Slider-showTransitions',\n  zeroTick: 'ms-Slider-zeroTick'\n};\nexport var getStyles = function (props) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n\n  var className = props.className,\n      titleLabelClassName = props.titleLabelClassName,\n      theme = props.theme,\n      vertical = props.vertical,\n      disabled = props.disabled,\n      showTransitions = props.showTransitions,\n      showValue = props.showValue,\n      ranged = props.ranged;\n  var semanticColors = theme.semanticColors,\n      palette = theme.palette;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  /** Tokens:\n   *   The word \"active\" in the token refers to the selected section of the slider\n   *   The word \"inactive\" in the token refers to the unselected section of the slider */\n\n  var pressedActiveSectionColor = semanticColors.inputBackgroundCheckedHovered;\n  var hoveredActiveSectionColor = semanticColors.inputBackgroundChecked;\n  var hoveredPressedinactiveSectionColor = palette.neutralSecondaryAlt;\n  var restActiveSectionColor = palette.neutralPrimary;\n  var restInactiveSectionColor = palette.neutralSecondaryAlt;\n  var disabledActiveSectionColor = semanticColors.disabledText;\n  var disabledInactiveSectionColor = semanticColors.disabledBackground;\n  var thumbBackgroundColor = semanticColors.inputBackground;\n  var thumbBorderColor = semanticColors.smallInputBorder;\n  var thumbDisabledBorderColor = semanticColors.disabledBorder;\n  var slideBoxActiveSectionStyles = !disabled && {\n    backgroundColor: pressedActiveSectionColor,\n    selectors: (_a = {}, _a[HighContrastSelector] = {\n      backgroundColor: 'Highlight'\n    }, _a)\n  };\n  var slideBoxInactiveSectionStyles = !disabled && {\n    backgroundColor: hoveredPressedinactiveSectionColor,\n    selectors: (_b = {}, _b[HighContrastSelector] = {\n      borderColor: 'Highlight'\n    }, _b)\n  };\n  var slideHoverSectionStyles = !disabled && {\n    backgroundColor: hoveredActiveSectionColor,\n    selectors: (_c = {}, _c[HighContrastSelector] = {\n      backgroundColor: 'Highlight'\n    }, _c)\n  };\n  var slideBoxActiveThumbStyles = !disabled && {\n    border: \"2px solid \" + pressedActiveSectionColor,\n    selectors: (_d = {}, _d[HighContrastSelector] = {\n      borderColor: 'Highlight'\n    }, _d)\n  };\n  var slideBoxActiveZeroTickStyles = !props.disabled && {\n    backgroundColor: semanticColors.inputPlaceholderBackgroundChecked,\n    selectors: (_e = {}, _e[HighContrastSelector] = {\n      backgroundColor: 'Highlight'\n    }, _e)\n  };\n  return {\n    root: __spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray([classNames.root, theme.fonts.medium, {\n      userSelect: 'none'\n    }, vertical && {\n      marginRight: 8\n    }], [!disabled ? classNames.enabled : undefined]), [disabled ? classNames.disabled : undefined]), [!vertical ? classNames.row : undefined]), [vertical ? classNames.column : undefined]), [className]),\n    titleLabel: [{\n      padding: 0\n    }, titleLabelClassName],\n    container: [classNames.container, {\n      display: 'flex',\n      flexWrap: 'nowrap',\n      alignItems: 'center'\n    }, vertical && {\n      flexDirection: 'column',\n      height: '100%',\n      textAlign: 'center',\n      margin: '8px 0'\n    }],\n    slideBox: __spreadArray(__spreadArray([classNames.slideBox, !ranged && getFocusStyle(theme), {\n      background: 'transparent',\n      border: 'none',\n      flexGrow: 1,\n      lineHeight: 28,\n      display: 'flex',\n      alignItems: 'center',\n      selectors: (_f = {}, _f[\":active .\" + classNames.activeSection] = slideBoxActiveSectionStyles, _f[\":hover .\" + classNames.activeSection] = slideHoverSectionStyles, _f[\":active .\" + classNames.inactiveSection] = slideBoxInactiveSectionStyles, _f[\":hover .\" + classNames.inactiveSection] = slideBoxInactiveSectionStyles, _f[\":active .\" + classNames.thumb] = slideBoxActiveThumbStyles, _f[\":hover .\" + classNames.thumb] = slideBoxActiveThumbStyles, _f[\":active .\" + classNames.zeroTick] = slideBoxActiveZeroTickStyles, _f[\":hover .\" + classNames.zeroTick] = slideBoxActiveZeroTickStyles, _f[HighContrastSelector] = {\n        forcedColorAdjust: 'none'\n      }, _f)\n    }, vertical ? {\n      height: '100%',\n      width: 28,\n      padding: '8px 0' // Make room for thumb at bottom of line\n\n    } : {\n      height: 28,\n      width: 'auto',\n      padding: '0 8px' // Make room for thumb at ends of line\n\n    }], [showValue ? classNames.showValue : undefined]), [showTransitions ? classNames.showTransitions : undefined]),\n    thumb: [classNames.thumb, ranged && getFocusStyle(theme, {\n      inset: -4\n    }), {\n      borderWidth: 2,\n      borderStyle: 'solid',\n      borderColor: thumbBorderColor,\n      borderRadius: 10,\n      boxSizing: 'border-box',\n      background: thumbBackgroundColor,\n      display: 'block',\n      width: 16,\n      height: 16,\n      position: 'absolute'\n    }, vertical ? {\n      left: -6,\n      margin: '0 auto',\n      transform: 'translateY(8px)'\n    } : {\n      top: -6,\n      transform: getRTL(theme) ? 'translateX(50%)' : 'translateX(-50%)'\n    }, showTransitions && {\n      transition: \"left \" + AnimationVariables.durationValue3 + \" \" + AnimationVariables.easeFunction1\n    }, disabled && {\n      borderColor: thumbDisabledBorderColor,\n      selectors: (_g = {}, _g[HighContrastSelector] = {\n        borderColor: 'GrayText'\n      }, _g)\n    }],\n    line: [classNames.line, {\n      display: 'flex',\n      position: 'relative'\n    }, vertical ? {\n      height: '100%',\n      width: 4,\n      margin: '0 auto',\n      flexDirection: 'column-reverse'\n    } : {\n      width: '100%'\n    }],\n    lineContainer: [{\n      borderRadius: 4,\n      boxSizing: 'border-box'\n    }, vertical ? {\n      width: 4,\n      height: '100%'\n    } : {\n      height: 4,\n      width: '100%'\n    }],\n    activeSection: [classNames.activeSection, {\n      background: restActiveSectionColor,\n      selectors: (_h = {}, _h[HighContrastSelector] = {\n        backgroundColor: 'WindowText'\n      }, _h)\n    }, showTransitions && {\n      transition: \"width \" + AnimationVariables.durationValue3 + \" \" + AnimationVariables.easeFunction1\n    }, disabled && {\n      background: disabledActiveSectionColor,\n      selectors: (_j = {}, _j[HighContrastSelector] = {\n        backgroundColor: 'GrayText',\n        borderColor: 'GrayText'\n      }, _j)\n    }],\n    inactiveSection: [classNames.inactiveSection, {\n      background: restInactiveSectionColor,\n      selectors: (_k = {}, _k[HighContrastSelector] = {\n        border: '1px solid WindowText'\n      }, _k)\n    }, showTransitions && {\n      transition: \"width \" + AnimationVariables.durationValue3 + \" \" + AnimationVariables.easeFunction1\n    }, disabled && {\n      background: disabledInactiveSectionColor,\n      selectors: (_l = {}, _l[HighContrastSelector] = {\n        borderColor: 'GrayText'\n      }, _l)\n    }],\n    zeroTick: [classNames.zeroTick, {\n      position: 'absolute',\n      background: semanticColors.disabledBorder,\n      selectors: (_m = {}, _m[HighContrastSelector] = {\n        backgroundColor: 'WindowText'\n      }, _m)\n    }, props.disabled && {\n      background: semanticColors.disabledBackground,\n      selectors: (_o = {}, _o[HighContrastSelector] = {\n        backgroundColor: 'GrayText'\n      }, _o)\n    }, props.vertical ? {\n      width: '16px',\n      height: '1px',\n      transform: getRTL(theme) ? 'translateX(6px)' : 'translateX(-6px)'\n    } : {\n      width: '1px',\n      height: '16px',\n      transform: 'translateY(-6px)'\n    }],\n    valueLabel: [classNames.valueLabel, {\n      flexShrink: 1,\n      width: 30,\n      lineHeight: '1' // using a string here meaning it's relative to the size of the font\n\n    }, vertical ? {\n      margin: '0 auto',\n      whiteSpace: 'nowrap',\n      width: 40\n    } : {\n      margin: '0 8px',\n      whiteSpace: 'nowrap',\n      width: 40\n    }]\n  };\n};","map":{"version":3,"sources":["components/Slider/Slider.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  getGlobalClassNames,\n  HighContrastSelector,\n  AnimationVariables,\n  getFocusStyle,\n} from '@fluentui/style-utilities';\nimport { getRTL } from '@fluentui/utilities';\nimport type { ISliderStyleProps, ISliderStyles } from './Slider.types';\n\nconst GlobalClassNames = {\n  root: 'ms-Slider',\n  enabled: 'ms-Slider-enabled',\n  disabled: 'ms-Slider-disabled',\n  row: 'ms-Slider-row',\n  column: 'ms-Slider-column',\n  container: 'ms-Slider-container',\n  slideBox: 'ms-Slider-slideBox',\n  line: 'ms-Slider-line',\n  thumb: 'ms-Slider-thumb',\n  activeSection: 'ms-Slider-active',\n  inactiveSection: 'ms-Slider-inactive',\n  valueLabel: 'ms-Slider-value',\n  showValue: 'ms-Slider-showValue',\n  showTransitions: 'ms-Slider-showTransitions',\n  zeroTick: 'ms-Slider-zeroTick',\n};\n\nexport const getStyles = (props: ISliderStyleProps): ISliderStyles => {\n  const { className, titleLabelClassName, theme, vertical, disabled, showTransitions, showValue, ranged } = props;\n  const { semanticColors, palette } = theme;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  /** Tokens:\n   *   The word \"active\" in the token refers to the selected section of the slider\n   *   The word \"inactive\" in the token refers to the unselected section of the slider */\n  const pressedActiveSectionColor = semanticColors.inputBackgroundCheckedHovered;\n  const hoveredActiveSectionColor = semanticColors.inputBackgroundChecked;\n  const hoveredPressedinactiveSectionColor = palette.neutralSecondaryAlt;\n  const restActiveSectionColor = palette.neutralPrimary;\n  const restInactiveSectionColor = palette.neutralSecondaryAlt;\n\n  const disabledActiveSectionColor = semanticColors.disabledText;\n  const disabledInactiveSectionColor = semanticColors.disabledBackground;\n\n  const thumbBackgroundColor = semanticColors.inputBackground;\n  const thumbBorderColor = semanticColors.smallInputBorder;\n  const thumbDisabledBorderColor = semanticColors.disabledBorder;\n\n  const slideBoxActiveSectionStyles = !disabled && {\n    backgroundColor: pressedActiveSectionColor,\n    selectors: {\n      [HighContrastSelector]: {\n        backgroundColor: 'Highlight',\n      },\n    },\n  };\n\n  const slideBoxInactiveSectionStyles = !disabled && {\n    backgroundColor: hoveredPressedinactiveSectionColor,\n    selectors: {\n      [HighContrastSelector]: {\n        borderColor: 'Highlight',\n      },\n    },\n  };\n\n  const slideHoverSectionStyles = !disabled && {\n    backgroundColor: hoveredActiveSectionColor,\n    selectors: {\n      [HighContrastSelector]: {\n        backgroundColor: 'Highlight',\n      },\n    },\n  };\n\n  const slideBoxActiveThumbStyles = !disabled && {\n    border: `2px solid ${pressedActiveSectionColor}`,\n    selectors: {\n      [HighContrastSelector]: {\n        borderColor: 'Highlight',\n      },\n    },\n  };\n\n  const slideBoxActiveZeroTickStyles = !props.disabled && {\n    backgroundColor: semanticColors.inputPlaceholderBackgroundChecked,\n    selectors: {\n      [HighContrastSelector]: {\n        backgroundColor: 'Highlight',\n      },\n    },\n  };\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      {\n        userSelect: 'none',\n      },\n      vertical && {\n        marginRight: 8,\n      },\n      ...[!disabled ? classNames.enabled : undefined],\n      ...[disabled ? classNames.disabled : undefined],\n      ...[!vertical ? classNames.row : undefined],\n      ...[vertical ? classNames.column : undefined],\n      className,\n    ],\n    titleLabel: [\n      {\n        padding: 0,\n      },\n      titleLabelClassName,\n    ],\n    container: [\n      classNames.container,\n      {\n        display: 'flex',\n        flexWrap: 'nowrap',\n        alignItems: 'center',\n      },\n      vertical && {\n        flexDirection: 'column',\n        height: '100%',\n        textAlign: 'center',\n        margin: '8px 0',\n      },\n    ],\n    slideBox: [\n      classNames.slideBox,\n      !ranged && getFocusStyle(theme),\n      {\n        background: 'transparent',\n        border: 'none',\n        flexGrow: 1,\n        lineHeight: 28,\n        display: 'flex',\n        alignItems: 'center',\n        selectors: {\n          [`:active .${classNames.activeSection}`]: slideBoxActiveSectionStyles,\n          [`:hover .${classNames.activeSection}`]: slideHoverSectionStyles,\n          [`:active .${classNames.inactiveSection}`]: slideBoxInactiveSectionStyles,\n          [`:hover .${classNames.inactiveSection}`]: slideBoxInactiveSectionStyles,\n          [`:active .${classNames.thumb}`]: slideBoxActiveThumbStyles,\n          [`:hover .${classNames.thumb}`]: slideBoxActiveThumbStyles,\n          [`:active .${classNames.zeroTick}`]: slideBoxActiveZeroTickStyles,\n          [`:hover .${classNames.zeroTick}`]: slideBoxActiveZeroTickStyles,\n          [HighContrastSelector]: {\n            forcedColorAdjust: 'none',\n          },\n        },\n      },\n      vertical\n        ? {\n            height: '100%',\n            width: 28,\n            padding: '8px 0', // Make room for thumb at bottom of line\n          }\n        : {\n            height: 28,\n            width: 'auto',\n            padding: '0 8px', // Make room for thumb at ends of line\n          },\n      ...[showValue ? classNames.showValue : undefined],\n      ...[showTransitions ? classNames.showTransitions : undefined],\n    ],\n    thumb: [\n      classNames.thumb,\n      ranged && getFocusStyle(theme, { inset: -4 }),\n      {\n        borderWidth: 2,\n        borderStyle: 'solid',\n        borderColor: thumbBorderColor,\n        borderRadius: 10,\n        boxSizing: 'border-box',\n        background: thumbBackgroundColor,\n        display: 'block',\n        width: 16,\n        height: 16,\n        position: 'absolute',\n      },\n      vertical\n        ? {\n            left: -6,\n            margin: '0 auto',\n            transform: 'translateY(8px)',\n          }\n        : {\n            top: -6,\n            transform: getRTL(theme) ? 'translateX(50%)' : 'translateX(-50%)',\n          },\n      showTransitions && {\n        transition: `left ${AnimationVariables.durationValue3} ${AnimationVariables.easeFunction1}`,\n      },\n      disabled && {\n        borderColor: thumbDisabledBorderColor,\n        selectors: {\n          [HighContrastSelector]: {\n            borderColor: 'GrayText',\n          },\n        },\n      },\n    ],\n    line: [\n      classNames.line,\n      {\n        display: 'flex',\n        position: 'relative',\n      },\n      vertical\n        ? {\n            height: '100%',\n            width: 4,\n            margin: '0 auto',\n            flexDirection: 'column-reverse',\n          }\n        : {\n            width: '100%',\n          },\n    ],\n    lineContainer: [\n      {\n        borderRadius: 4,\n        boxSizing: 'border-box',\n      },\n      vertical\n        ? {\n            width: 4,\n            height: '100%',\n          }\n        : {\n            height: 4,\n            width: '100%',\n          },\n    ],\n    activeSection: [\n      classNames.activeSection,\n      {\n        background: restActiveSectionColor,\n        selectors: {\n          [HighContrastSelector]: {\n            backgroundColor: 'WindowText',\n          },\n        },\n      },\n      showTransitions && {\n        transition: `width ${AnimationVariables.durationValue3} ${AnimationVariables.easeFunction1}`,\n      },\n      disabled && {\n        background: disabledActiveSectionColor,\n        selectors: {\n          [HighContrastSelector]: {\n            backgroundColor: 'GrayText',\n            borderColor: 'GrayText',\n          },\n        },\n      },\n    ],\n    inactiveSection: [\n      classNames.inactiveSection,\n      {\n        background: restInactiveSectionColor,\n        selectors: {\n          [HighContrastSelector]: {\n            border: '1px solid WindowText',\n          },\n        },\n      },\n      showTransitions && {\n        transition: `width ${AnimationVariables.durationValue3} ${AnimationVariables.easeFunction1}`,\n      },\n      disabled && {\n        background: disabledInactiveSectionColor,\n        selectors: {\n          [HighContrastSelector]: {\n            borderColor: 'GrayText',\n          },\n        },\n      },\n    ],\n    zeroTick: [\n      classNames.zeroTick,\n      {\n        position: 'absolute',\n        background: semanticColors.disabledBorder,\n        selectors: {\n          [HighContrastSelector]: {\n            backgroundColor: 'WindowText',\n          },\n        },\n      },\n      props.disabled && {\n        background: semanticColors.disabledBackground,\n        selectors: {\n          [HighContrastSelector]: {\n            backgroundColor: 'GrayText',\n          },\n        },\n      },\n      props.vertical\n        ? {\n            width: '16px',\n            height: '1px',\n            transform: getRTL(theme) ? 'translateX(6px)' : 'translateX(-6px)',\n          }\n        : {\n            width: '1px',\n            height: '16px',\n            transform: 'translateY(-6px)',\n          },\n    ],\n    valueLabel: [\n      classNames.valueLabel,\n      {\n        flexShrink: 1,\n        width: 30,\n        lineHeight: '1', // using a string here meaning it's relative to the size of the font\n      },\n      vertical\n        ? {\n            margin: '0 auto',\n            whiteSpace: 'nowrap',\n            width: 40,\n          }\n        : {\n            margin: '0 8px',\n            whiteSpace: 'nowrap',\n            width: 40,\n          },\n    ],\n  };\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}