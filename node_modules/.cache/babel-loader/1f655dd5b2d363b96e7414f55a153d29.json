{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { css, KeyCodes, initializeComponentRef } from '../../../Utilities';\nimport { SuggestionsCore } from './SuggestionsCore';\nimport * as stylesImport from './SuggestionsControl.scss';\nimport { hiddenContentStyle, mergeStyles } from '../../../Styling';\nvar styles = stylesImport;\nexport var SuggestionItemType;\n\n(function (SuggestionItemType) {\n  SuggestionItemType[SuggestionItemType[\"header\"] = 0] = \"header\";\n  SuggestionItemType[SuggestionItemType[\"suggestion\"] = 1] = \"suggestion\";\n  SuggestionItemType[SuggestionItemType[\"footer\"] = 2] = \"footer\";\n})(SuggestionItemType || (SuggestionItemType = {}));\n\nvar SuggestionsHeaderFooterItem =\n/** @class */\nfunction (_super) {\n  __extends(SuggestionsHeaderFooterItem, _super);\n\n  function SuggestionsHeaderFooterItem(props) {\n    var _this = _super.call(this, props) || this;\n\n    initializeComponentRef(_this);\n    return _this;\n  }\n\n  SuggestionsHeaderFooterItem.prototype.render = function () {\n    var _a;\n\n    var _b = this.props,\n        renderItem = _b.renderItem,\n        onExecute = _b.onExecute,\n        isSelected = _b.isSelected,\n        id = _b.id,\n        className = _b.className;\n    return onExecute ? React.createElement(\"div\", {\n      id: id,\n      onClick: onExecute,\n      className: css('ms-Suggestions-sectionButton', className, styles.actionButton, (_a = {}, _a['is-selected ' + styles.buttonSelected] = isSelected, _a))\n    }, renderItem()) : React.createElement(\"div\", {\n      id: id,\n      className: css('ms-Suggestions-section', className, styles.suggestionsTitle)\n    }, renderItem());\n  };\n\n  return SuggestionsHeaderFooterItem;\n}(React.Component);\n\nexport { SuggestionsHeaderFooterItem };\n/**\n * Class when used with SuggestionsStore, renders a suggestions control with customizable headers and footers\n */\n\nvar SuggestionsControl =\n/** @class */\nfunction (_super) {\n  __extends(SuggestionsControl, _super);\n\n  function SuggestionsControl(suggestionsProps) {\n    var _this = _super.call(this, suggestionsProps) || this;\n\n    _this._selectedElement = React.createRef();\n    _this._suggestions = React.createRef();\n    _this.SuggestionsOfProperType = SuggestionsCore;\n    initializeComponentRef(_this);\n    _this.state = {\n      selectedHeaderIndex: -1,\n      selectedFooterIndex: -1,\n      suggestions: suggestionsProps.suggestions\n    };\n    return _this;\n  }\n\n  SuggestionsControl.prototype.componentDidMount = function () {\n    this.resetSelectedItem();\n  };\n\n  SuggestionsControl.prototype.componentDidUpdate = function (oldProps) {\n    var _this = this;\n\n    this.scrollSelected();\n\n    if (oldProps.suggestions && oldProps.suggestions !== this.props.suggestions) {\n      this.setState({\n        suggestions: this.props.suggestions\n      }, function () {\n        _this.resetSelectedItem();\n      });\n    }\n  };\n\n  SuggestionsControl.prototype.componentWillUnmount = function () {\n    var _a;\n\n    (_a = this._suggestions.current) === null || _a === void 0 ? void 0 : _a.deselectAllSuggestions();\n  };\n\n  SuggestionsControl.prototype.render = function () {\n    var _a = this.props,\n        className = _a.className,\n        headerItemsProps = _a.headerItemsProps,\n        footerItemsProps = _a.footerItemsProps,\n        suggestionsAvailableAlertText = _a.suggestionsAvailableAlertText;\n    var screenReaderTextStyles = mergeStyles(hiddenContentStyle);\n    var shouldAlertSuggestionsAvailableText = this.state.suggestions && this.state.suggestions.length > 0 && suggestionsAvailableAlertText;\n    return React.createElement(\"div\", {\n      className: css('ms-Suggestions', className ? className : '', styles.root)\n    }, headerItemsProps && this.renderHeaderItems(), this._renderSuggestions(), footerItemsProps && this.renderFooterItems(), shouldAlertSuggestionsAvailableText ? React.createElement(\"span\", {\n      role: \"alert\",\n      \"aria-live\": \"polite\",\n      className: screenReaderTextStyles\n    }, suggestionsAvailableAlertText) : null);\n  };\n\n  Object.defineProperty(SuggestionsControl.prototype, \"currentSuggestion\", {\n    get: function () {\n      var _a;\n\n      return ((_a = this._suggestions.current) === null || _a === void 0 ? void 0 : _a.getCurrentItem()) || undefined;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(SuggestionsControl.prototype, \"currentSuggestionIndex\", {\n    get: function () {\n      return this._suggestions.current ? this._suggestions.current.currentIndex : -1;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(SuggestionsControl.prototype, \"selectedElement\", {\n    get: function () {\n      var _a;\n\n      return this._selectedElement.current ? this._selectedElement.current : (_a = this._suggestions.current) === null || _a === void 0 ? void 0 : _a.selectedElement;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  SuggestionsControl.prototype.hasSuggestionSelected = function () {\n    var _a;\n\n    return ((_a = this._suggestions.current) === null || _a === void 0 ? void 0 : _a.hasSuggestionSelected()) || false;\n  };\n\n  SuggestionsControl.prototype.hasSelection = function () {\n    var _a = this.state,\n        selectedHeaderIndex = _a.selectedHeaderIndex,\n        selectedFooterIndex = _a.selectedFooterIndex;\n    return selectedHeaderIndex !== -1 || this.hasSuggestionSelected() || selectedFooterIndex !== -1;\n  };\n\n  SuggestionsControl.prototype.executeSelectedAction = function () {\n    var _a;\n\n    var _b = this.props,\n        headerItemsProps = _b.headerItemsProps,\n        footerItemsProps = _b.footerItemsProps;\n    var _c = this.state,\n        selectedHeaderIndex = _c.selectedHeaderIndex,\n        selectedFooterIndex = _c.selectedFooterIndex;\n\n    if (headerItemsProps && selectedHeaderIndex !== -1 && selectedHeaderIndex < headerItemsProps.length) {\n      var selectedHeaderItem = headerItemsProps[selectedHeaderIndex];\n\n      if (selectedHeaderItem.onExecute) {\n        selectedHeaderItem.onExecute();\n      }\n    } else if ((_a = this._suggestions.current) === null || _a === void 0 ? void 0 : _a.hasSuggestionSelected()) {\n      this.props.completeSuggestion();\n    } else if (footerItemsProps && selectedFooterIndex !== -1 && selectedFooterIndex < footerItemsProps.length) {\n      var selectedFooterItem = footerItemsProps[selectedFooterIndex];\n\n      if (selectedFooterItem.onExecute) {\n        selectedFooterItem.onExecute();\n      }\n    }\n  };\n\n  SuggestionsControl.prototype.removeSuggestion = function (index) {\n    var _a, _b;\n\n    (_a = this._suggestions.current) === null || _a === void 0 ? void 0 : _a.removeSuggestion(index ? index : (_b = this._suggestions.current) === null || _b === void 0 ? void 0 : _b.currentIndex);\n  };\n  /**\n   * Handles the key down, returns true, if the event was handled, false otherwise\n   * @param keyCode - The keyCode to handle\n   */\n\n\n  SuggestionsControl.prototype.handleKeyDown = function (keyCode) {\n    var _a, _b, _c, _d;\n\n    var _e = this.state,\n        selectedHeaderIndex = _e.selectedHeaderIndex,\n        selectedFooterIndex = _e.selectedFooterIndex;\n    var isKeyDownHandled = false;\n\n    if (keyCode === KeyCodes.down) {\n      if (selectedHeaderIndex === -1 && !((_a = this._suggestions.current) === null || _a === void 0 ? void 0 : _a.hasSuggestionSelected()) && selectedFooterIndex === -1) {\n        this.selectFirstItem();\n      } else if (selectedHeaderIndex !== -1) {\n        this.selectNextItem(SuggestionItemType.header);\n        isKeyDownHandled = true;\n      } else if ((_b = this._suggestions.current) === null || _b === void 0 ? void 0 : _b.hasSuggestionSelected()) {\n        this.selectNextItem(SuggestionItemType.suggestion);\n        isKeyDownHandled = true;\n      } else if (selectedFooterIndex !== -1) {\n        this.selectNextItem(SuggestionItemType.footer);\n        isKeyDownHandled = true;\n      }\n    } else if (keyCode === KeyCodes.up) {\n      if (selectedHeaderIndex === -1 && !((_c = this._suggestions.current) === null || _c === void 0 ? void 0 : _c.hasSuggestionSelected()) && selectedFooterIndex === -1) {\n        this.selectLastItem();\n      } else if (selectedHeaderIndex !== -1) {\n        this.selectPreviousItem(SuggestionItemType.header);\n        isKeyDownHandled = true;\n      } else if ((_d = this._suggestions.current) === null || _d === void 0 ? void 0 : _d.hasSuggestionSelected()) {\n        this.selectPreviousItem(SuggestionItemType.suggestion);\n        isKeyDownHandled = true;\n      } else if (selectedFooterIndex !== -1) {\n        this.selectPreviousItem(SuggestionItemType.footer);\n        isKeyDownHandled = true;\n      }\n    } else if (keyCode === KeyCodes.enter || keyCode === KeyCodes.tab) {\n      if (this.hasSelection()) {\n        this.executeSelectedAction();\n        isKeyDownHandled = true;\n      }\n    }\n\n    return isKeyDownHandled;\n  }; // TODO get the element to scroll into view properly regardless of direction.\n\n\n  SuggestionsControl.prototype.scrollSelected = function () {\n    if (this._selectedElement.current) {\n      this._selectedElement.current.scrollIntoView(false);\n    }\n  };\n\n  SuggestionsControl.prototype.renderHeaderItems = function () {\n    var _this = this;\n\n    var _a = this.props,\n        headerItemsProps = _a.headerItemsProps,\n        suggestionsHeaderContainerAriaLabel = _a.suggestionsHeaderContainerAriaLabel;\n    var selectedHeaderIndex = this.state.selectedHeaderIndex;\n    return headerItemsProps ? React.createElement(\"div\", {\n      className: css('ms-Suggestions-headerContainer', styles.suggestionsContainer),\n      id: \"suggestionHeader-list\",\n      role: \"list\",\n      \"aria-label\": suggestionsHeaderContainerAriaLabel\n    }, headerItemsProps.map(function (headerItemProps, index) {\n      var isSelected = selectedHeaderIndex !== -1 && selectedHeaderIndex === index;\n      return headerItemProps.shouldShow() ? React.createElement(\"div\", {\n        ref: isSelected ? _this._selectedElement : undefined,\n        id: 'sug-header' + index,\n        key: 'sug-header' + index,\n        role: \"listitem\",\n        \"aria-label\": headerItemProps.ariaLabel\n      }, React.createElement(SuggestionsHeaderFooterItem, {\n        id: 'sug-header-item' + index,\n        isSelected: isSelected,\n        renderItem: headerItemProps.renderItem,\n        onExecute: headerItemProps.onExecute,\n        className: headerItemProps.className\n      })) : null;\n    })) : null;\n  };\n\n  SuggestionsControl.prototype.renderFooterItems = function () {\n    var _this = this;\n\n    var _a = this.props,\n        footerItemsProps = _a.footerItemsProps,\n        suggestionsFooterContainerAriaLabel = _a.suggestionsFooterContainerAriaLabel;\n    var selectedFooterIndex = this.state.selectedFooterIndex;\n    return footerItemsProps ? React.createElement(\"div\", {\n      className: css('ms-Suggestions-footerContainer', styles.suggestionsContainer),\n      id: \"suggestionFooter-list\",\n      role: \"list\",\n      \"aria-label\": suggestionsFooterContainerAriaLabel\n    }, footerItemsProps.map(function (footerItemProps, index) {\n      var isSelected = selectedFooterIndex !== -1 && selectedFooterIndex === index;\n      return footerItemProps.shouldShow() ? React.createElement(\"div\", {\n        ref: isSelected ? _this._selectedElement : undefined,\n        id: 'sug-footer' + index,\n        key: 'sug-footer' + index,\n        role: \"listitem\",\n        \"aria-label\": footerItemProps.ariaLabel\n      }, React.createElement(SuggestionsHeaderFooterItem, {\n        id: 'sug-footer-item' + index,\n        isSelected: isSelected,\n        renderItem: footerItemProps.renderItem,\n        onExecute: footerItemProps.onExecute,\n        className: footerItemProps.className\n      })) : null;\n    })) : null;\n  };\n\n  SuggestionsControl.prototype._renderSuggestions = function () {\n    var TypedSuggestions = this.SuggestionsOfProperType;\n    return React.createElement(TypedSuggestions, __assign({\n      ref: this._suggestions\n    }, this.props, {\n      suggestions: this.state.suggestions\n    }));\n  };\n  /**\n   * Selects the next selectable item\n   */\n\n\n  SuggestionsControl.prototype.selectNextItem = function (itemType, originalItemType) {\n    // If the recursive calling has not found a selectable item in the other suggestion item type groups\n    // And the method is being called again with the original item type,\n    // Select the first selectable item of this suggestion item type group (could be the currently selected item)\n    if (itemType === originalItemType) {\n      this._selectNextItemOfItemType(itemType);\n\n      return;\n    }\n\n    var startedItemType = originalItemType !== undefined ? originalItemType : itemType; // Try to set the selection to the next selectable item, of the same suggestion item type group\n    // If this is the original item type, use the current index\n\n    var selectionChanged = this._selectNextItemOfItemType(itemType, startedItemType === itemType ? this._getCurrentIndexForType(itemType) : undefined); // If the selection did not change, try to select from the next suggestion type group\n\n\n    if (!selectionChanged) {\n      this.selectNextItem(this._getNextItemSectionType(itemType), startedItemType);\n    }\n  };\n  /**\n   * Selects the previous selectable item\n   */\n\n\n  SuggestionsControl.prototype.selectPreviousItem = function (itemType, originalItemType) {\n    // If the recursive calling has not found a selectable item in the other suggestion item type groups\n    // And the method is being called again with the original item type,\n    // Select the last selectable item of this suggestion item type group (could be the currently selected item)\n    if (itemType === originalItemType) {\n      this._selectPreviousItemOfItemType(itemType);\n\n      return;\n    }\n\n    var startedItemType = originalItemType !== undefined ? originalItemType : itemType; // Try to set the selection to the previous selectable item, of the same suggestion item type group\n\n    var selectionChanged = this._selectPreviousItemOfItemType(itemType, startedItemType === itemType ? this._getCurrentIndexForType(itemType) : undefined); // If the selection did not change, try to select from the previous suggestion type group\n\n\n    if (!selectionChanged) {\n      this.selectPreviousItem(this._getPreviousItemSectionType(itemType), startedItemType);\n    }\n  };\n  /**\n   * Resets the selected state and selects the first selectable item\n   */\n\n\n  SuggestionsControl.prototype.resetSelectedItem = function () {\n    var _a;\n\n    this.setState({\n      selectedHeaderIndex: -1,\n      selectedFooterIndex: -1\n    });\n    (_a = this._suggestions.current) === null || _a === void 0 ? void 0 : _a.deselectAllSuggestions(); // Select the first item if the shouldSelectFirstItem prop is not set or it is set and it returns true\n\n    if (this.props.shouldSelectFirstItem === undefined || this.props.shouldSelectFirstItem()) {\n      this.selectFirstItem();\n    }\n  };\n  /**\n   * Selects the first item\n   */\n\n\n  SuggestionsControl.prototype.selectFirstItem = function () {\n    if (this._selectNextItemOfItemType(SuggestionItemType.header)) {\n      return;\n    }\n\n    if (this._selectNextItemOfItemType(SuggestionItemType.suggestion)) {\n      return;\n    }\n\n    this._selectNextItemOfItemType(SuggestionItemType.footer);\n  };\n  /**\n   * Selects the last item\n   */\n\n\n  SuggestionsControl.prototype.selectLastItem = function () {\n    if (this._selectPreviousItemOfItemType(SuggestionItemType.footer)) {\n      return;\n    }\n\n    if (this._selectPreviousItemOfItemType(SuggestionItemType.suggestion)) {\n      return;\n    }\n\n    this._selectPreviousItemOfItemType(SuggestionItemType.header);\n  };\n  /**\n   * Selects the next item in the suggestion item type group, given the current index\n   * If none is able to be selected, returns false, otherwise returns true\n   * @param itemType - The suggestion item type\n   * @param currentIndex - The current index, default is -1\n   */\n\n\n  SuggestionsControl.prototype._selectNextItemOfItemType = function (itemType, currentIndex) {\n    var _a, _b;\n\n    if (currentIndex === void 0) {\n      currentIndex = -1;\n    }\n\n    if (itemType === SuggestionItemType.suggestion) {\n      if (this.state.suggestions.length > currentIndex + 1) {\n        (_a = this._suggestions.current) === null || _a === void 0 ? void 0 : _a.setSelectedSuggestion(currentIndex + 1);\n        this.setState({\n          selectedHeaderIndex: -1,\n          selectedFooterIndex: -1\n        });\n        return true;\n      }\n    } else {\n      var isHeader = itemType === SuggestionItemType.header;\n      var itemProps = isHeader ? this.props.headerItemsProps : this.props.footerItemsProps;\n\n      if (itemProps && itemProps.length > currentIndex + 1) {\n        for (var i = currentIndex + 1; i < itemProps.length; i++) {\n          var item = itemProps[i];\n\n          if (item.onExecute && item.shouldShow()) {\n            this.setState({\n              selectedHeaderIndex: isHeader ? i : -1\n            });\n            this.setState({\n              selectedFooterIndex: isHeader ? -1 : i\n            });\n            (_b = this._suggestions.current) === null || _b === void 0 ? void 0 : _b.deselectAllSuggestions();\n            return true;\n          }\n        }\n      }\n    }\n\n    return false;\n  };\n  /**\n   * Selects the previous item in the suggestion item type group, given the current index\n   * If none is able to be selected, returns false, otherwise returns true\n   * @param itemType - The suggestion item type\n   * @param currentIndex - The current index. If none is provided, the default is the items length of specified type\n   */\n\n\n  SuggestionsControl.prototype._selectPreviousItemOfItemType = function (itemType, currentIndex) {\n    var _a, _b;\n\n    if (itemType === SuggestionItemType.suggestion) {\n      var index = currentIndex !== undefined ? currentIndex : this.state.suggestions.length;\n\n      if (index > 0) {\n        (_a = this._suggestions.current) === null || _a === void 0 ? void 0 : _a.setSelectedSuggestion(index - 1);\n        this.setState({\n          selectedHeaderIndex: -1,\n          selectedFooterIndex: -1\n        });\n        return true;\n      }\n    } else {\n      var isHeader = itemType === SuggestionItemType.header;\n      var itemProps = isHeader ? this.props.headerItemsProps : this.props.footerItemsProps;\n\n      if (itemProps) {\n        var index = currentIndex !== undefined ? currentIndex : itemProps.length;\n\n        if (index > 0) {\n          for (var i = index - 1; i >= 0; i--) {\n            var item = itemProps[i];\n\n            if (item.onExecute && item.shouldShow()) {\n              this.setState({\n                selectedHeaderIndex: isHeader ? i : -1\n              });\n              this.setState({\n                selectedFooterIndex: isHeader ? -1 : i\n              });\n              (_b = this._suggestions.current) === null || _b === void 0 ? void 0 : _b.deselectAllSuggestions();\n              return true;\n            }\n          }\n        }\n      }\n    }\n\n    return false;\n  };\n\n  SuggestionsControl.prototype._getCurrentIndexForType = function (itemType) {\n    switch (itemType) {\n      case SuggestionItemType.header:\n        return this.state.selectedHeaderIndex;\n\n      case SuggestionItemType.suggestion:\n        return this._suggestions.current.currentIndex;\n\n      case SuggestionItemType.footer:\n        return this.state.selectedFooterIndex;\n    }\n  };\n\n  SuggestionsControl.prototype._getNextItemSectionType = function (itemType) {\n    switch (itemType) {\n      case SuggestionItemType.header:\n        return SuggestionItemType.suggestion;\n\n      case SuggestionItemType.suggestion:\n        return SuggestionItemType.footer;\n\n      case SuggestionItemType.footer:\n        return SuggestionItemType.header;\n    }\n  };\n\n  SuggestionsControl.prototype._getPreviousItemSectionType = function (itemType) {\n    switch (itemType) {\n      case SuggestionItemType.header:\n        return SuggestionItemType.footer;\n\n      case SuggestionItemType.suggestion:\n        return SuggestionItemType.header;\n\n      case SuggestionItemType.footer:\n        return SuggestionItemType.suggestion;\n    }\n  };\n\n  return SuggestionsControl;\n}(React.Component);\n\nexport { SuggestionsControl };","map":{"version":3,"sources":["components/FloatingPicker/Suggestions/SuggestionsControl.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { css, KeyCodes, initializeComponentRef } from '../../../Utilities';\nimport { SuggestionsCore } from './SuggestionsCore';\nimport * as stylesImport from './SuggestionsControl.scss';\nimport { hiddenContentStyle, mergeStyles } from '../../../Styling';\nimport type { IButton } from '../../../Button';\nimport type { ISuggestionModel } from '../../../Pickers';\nimport type {\n  ISuggestionsHeaderFooterItemProps,\n  ISuggestionsControlProps,\n  ISuggestionsCoreProps,\n  ISuggestionsHeaderFooterProps,\n} from './Suggestions.types';\n\nconst styles: any = stylesImport;\n\nexport enum SuggestionItemType {\n  header,\n  suggestion,\n  footer,\n}\n\nexport interface ISuggestionsControlState<T> {\n  selectedHeaderIndex: number;\n  selectedFooterIndex: number;\n  suggestions: ISuggestionModel<T>[];\n}\n\nexport class SuggestionsHeaderFooterItem extends React.Component<ISuggestionsHeaderFooterItemProps, {}> {\n  constructor(props: ISuggestionsHeaderFooterItemProps) {\n    super(props);\n\n    initializeComponentRef(this);\n  }\n\n  public render(): JSX.Element {\n    const { renderItem, onExecute, isSelected, id, className } = this.props;\n    return onExecute ? (\n      <div\n        id={id}\n        onClick={onExecute}\n        className={css('ms-Suggestions-sectionButton', className, styles.actionButton, {\n          ['is-selected ' + styles.buttonSelected]: isSelected,\n        })}\n      >\n        {renderItem()}\n      </div>\n    ) : (\n      <div id={id} className={css('ms-Suggestions-section', className, styles.suggestionsTitle)}>\n        {renderItem()}\n      </div>\n    );\n  }\n}\n\n/**\n * Class when used with SuggestionsStore, renders a suggestions control with customizable headers and footers\n */\nexport class SuggestionsControl<T> extends React.Component<ISuggestionsControlProps<T>, ISuggestionsControlState<T>> {\n  protected _forceResolveButton: IButton;\n  protected _searchForMoreButton: IButton;\n  protected _selectedElement = React.createRef<HTMLDivElement>();\n  protected _suggestions = React.createRef<SuggestionsCore<T>>();\n  private SuggestionsOfProperType: new (\n    props: ISuggestionsCoreProps<T>,\n  ) => SuggestionsCore<T> = SuggestionsCore as new (props: ISuggestionsCoreProps<T>) => SuggestionsCore<T>;\n\n  constructor(suggestionsProps: ISuggestionsControlProps<T>) {\n    super(suggestionsProps);\n\n    initializeComponentRef(this);\n    this.state = {\n      selectedHeaderIndex: -1,\n      selectedFooterIndex: -1,\n      suggestions: suggestionsProps.suggestions,\n    };\n  }\n\n  public componentDidMount(): void {\n    this.resetSelectedItem();\n  }\n\n  public componentDidUpdate(oldProps: ISuggestionsControlProps<T>): void {\n    this.scrollSelected();\n    if (oldProps.suggestions && oldProps.suggestions !== this.props.suggestions) {\n      this.setState({ suggestions: this.props.suggestions }, () => {\n        this.resetSelectedItem();\n      });\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this._suggestions.current?.deselectAllSuggestions();\n  }\n\n  public render(): JSX.Element {\n    const { className, headerItemsProps, footerItemsProps, suggestionsAvailableAlertText } = this.props;\n\n    const screenReaderTextStyles = mergeStyles(hiddenContentStyle);\n    const shouldAlertSuggestionsAvailableText =\n      this.state.suggestions && this.state.suggestions.length > 0 && suggestionsAvailableAlertText;\n\n    return (\n      <div className={css('ms-Suggestions', className ? className : '', styles.root)}>\n        {headerItemsProps && this.renderHeaderItems()}\n        {this._renderSuggestions()}\n        {footerItemsProps && this.renderFooterItems()}\n        {shouldAlertSuggestionsAvailableText ? (\n          <span role=\"alert\" aria-live=\"polite\" className={screenReaderTextStyles}>\n            {suggestionsAvailableAlertText}\n          </span>\n        ) : null}\n      </div>\n    );\n  }\n\n  public get currentSuggestion(): ISuggestionModel<T> | undefined {\n    return this._suggestions.current?.getCurrentItem() || undefined;\n  }\n\n  public get currentSuggestionIndex(): number {\n    return this._suggestions.current ? this._suggestions.current.currentIndex : -1;\n  }\n\n  public get selectedElement(): HTMLDivElement | undefined {\n    return this._selectedElement.current ? this._selectedElement.current : this._suggestions.current?.selectedElement;\n  }\n\n  public hasSuggestionSelected(): boolean {\n    return this._suggestions.current?.hasSuggestionSelected() || false;\n  }\n\n  public hasSelection(): boolean {\n    const { selectedHeaderIndex, selectedFooterIndex } = this.state;\n    return selectedHeaderIndex !== -1 || this.hasSuggestionSelected() || selectedFooterIndex !== -1;\n  }\n\n  public executeSelectedAction(): void {\n    const { headerItemsProps, footerItemsProps } = this.props;\n    const { selectedHeaderIndex, selectedFooterIndex } = this.state;\n\n    if (headerItemsProps && selectedHeaderIndex !== -1 && selectedHeaderIndex < headerItemsProps.length) {\n      const selectedHeaderItem = headerItemsProps[selectedHeaderIndex];\n      if (selectedHeaderItem.onExecute) {\n        selectedHeaderItem.onExecute();\n      }\n    } else if (this._suggestions.current?.hasSuggestionSelected()) {\n      this.props.completeSuggestion();\n    } else if (footerItemsProps && selectedFooterIndex !== -1 && selectedFooterIndex < footerItemsProps.length) {\n      const selectedFooterItem = footerItemsProps[selectedFooterIndex];\n      if (selectedFooterItem.onExecute) {\n        selectedFooterItem.onExecute();\n      }\n    }\n  }\n\n  public removeSuggestion(index?: number): void {\n    this._suggestions.current?.removeSuggestion(index ? index : this._suggestions.current?.currentIndex);\n  }\n\n  /**\n   * Handles the key down, returns true, if the event was handled, false otherwise\n   * @param keyCode - The keyCode to handle\n   */\n  public handleKeyDown(keyCode: number): boolean {\n    const { selectedHeaderIndex, selectedFooterIndex } = this.state;\n    let isKeyDownHandled = false;\n    if (keyCode === KeyCodes.down) {\n      if (\n        selectedHeaderIndex === -1 &&\n        !this._suggestions.current?.hasSuggestionSelected() &&\n        selectedFooterIndex === -1\n      ) {\n        this.selectFirstItem();\n      } else if (selectedHeaderIndex !== -1) {\n        this.selectNextItem(SuggestionItemType.header);\n        isKeyDownHandled = true;\n      } else if (this._suggestions.current?.hasSuggestionSelected()) {\n        this.selectNextItem(SuggestionItemType.suggestion);\n        isKeyDownHandled = true;\n      } else if (selectedFooterIndex !== -1) {\n        this.selectNextItem(SuggestionItemType.footer);\n        isKeyDownHandled = true;\n      }\n    } else if (keyCode === KeyCodes.up) {\n      if (\n        selectedHeaderIndex === -1 &&\n        !this._suggestions.current?.hasSuggestionSelected() &&\n        selectedFooterIndex === -1\n      ) {\n        this.selectLastItem();\n      } else if (selectedHeaderIndex !== -1) {\n        this.selectPreviousItem(SuggestionItemType.header);\n        isKeyDownHandled = true;\n      } else if (this._suggestions.current?.hasSuggestionSelected()) {\n        this.selectPreviousItem(SuggestionItemType.suggestion);\n        isKeyDownHandled = true;\n      } else if (selectedFooterIndex !== -1) {\n        this.selectPreviousItem(SuggestionItemType.footer);\n        isKeyDownHandled = true;\n      }\n    } else if (keyCode === KeyCodes.enter || keyCode === KeyCodes.tab) {\n      if (this.hasSelection()) {\n        this.executeSelectedAction();\n        isKeyDownHandled = true;\n      }\n    }\n\n    return isKeyDownHandled;\n  }\n\n  // TODO get the element to scroll into view properly regardless of direction.\n  public scrollSelected(): void {\n    if (this._selectedElement.current) {\n      this._selectedElement.current.scrollIntoView(false);\n    }\n  }\n\n  protected renderHeaderItems(): JSX.Element | null {\n    const { headerItemsProps, suggestionsHeaderContainerAriaLabel } = this.props;\n    const { selectedHeaderIndex } = this.state;\n\n    return headerItemsProps ? (\n      <div\n        className={css('ms-Suggestions-headerContainer', styles.suggestionsContainer)}\n        id=\"suggestionHeader-list\"\n        role=\"list\"\n        aria-label={suggestionsHeaderContainerAriaLabel}\n      >\n        {headerItemsProps.map((headerItemProps: ISuggestionsHeaderFooterProps, index: number) => {\n          const isSelected = selectedHeaderIndex !== -1 && selectedHeaderIndex === index;\n          return headerItemProps.shouldShow() ? (\n            <div\n              ref={isSelected ? this._selectedElement : undefined}\n              id={'sug-header' + index}\n              key={'sug-header' + index}\n              role=\"listitem\"\n              aria-label={headerItemProps.ariaLabel}\n            >\n              <SuggestionsHeaderFooterItem\n                id={'sug-header-item' + index}\n                isSelected={isSelected}\n                renderItem={headerItemProps.renderItem}\n                onExecute={headerItemProps.onExecute}\n                className={headerItemProps.className}\n              />\n            </div>\n          ) : null;\n        })}\n      </div>\n    ) : null;\n  }\n\n  protected renderFooterItems(): JSX.Element | null {\n    const { footerItemsProps, suggestionsFooterContainerAriaLabel } = this.props;\n    const { selectedFooterIndex } = this.state;\n    return footerItemsProps ? (\n      <div\n        className={css('ms-Suggestions-footerContainer', styles.suggestionsContainer)}\n        id=\"suggestionFooter-list\"\n        role=\"list\"\n        aria-label={suggestionsFooterContainerAriaLabel}\n      >\n        {footerItemsProps.map((footerItemProps: ISuggestionsHeaderFooterProps, index: number) => {\n          const isSelected = selectedFooterIndex !== -1 && selectedFooterIndex === index;\n          return footerItemProps.shouldShow() ? (\n            <div\n              ref={isSelected ? this._selectedElement : undefined}\n              id={'sug-footer' + index}\n              key={'sug-footer' + index}\n              role=\"listitem\"\n              aria-label={footerItemProps.ariaLabel}\n            >\n              <SuggestionsHeaderFooterItem\n                id={'sug-footer-item' + index}\n                isSelected={isSelected}\n                renderItem={footerItemProps.renderItem}\n                onExecute={footerItemProps.onExecute}\n                className={footerItemProps.className}\n              />\n            </div>\n          ) : null;\n        })}\n      </div>\n    ) : null;\n  }\n\n  protected _renderSuggestions(): JSX.Element {\n    const TypedSuggestions = this.SuggestionsOfProperType;\n\n    return <TypedSuggestions ref={this._suggestions} {...this.props} suggestions={this.state.suggestions} />;\n  }\n\n  /**\n   * Selects the next selectable item\n   */\n  protected selectNextItem(itemType: SuggestionItemType, originalItemType?: SuggestionItemType): void {\n    // If the recursive calling has not found a selectable item in the other suggestion item type groups\n    // And the method is being called again with the original item type,\n    // Select the first selectable item of this suggestion item type group (could be the currently selected item)\n    if (itemType === originalItemType) {\n      this._selectNextItemOfItemType(itemType);\n      return;\n    }\n\n    const startedItemType = originalItemType !== undefined ? originalItemType : itemType;\n\n    // Try to set the selection to the next selectable item, of the same suggestion item type group\n    // If this is the original item type, use the current index\n    const selectionChanged = this._selectNextItemOfItemType(\n      itemType,\n      startedItemType === itemType ? this._getCurrentIndexForType(itemType) : undefined,\n    );\n\n    // If the selection did not change, try to select from the next suggestion type group\n    if (!selectionChanged) {\n      this.selectNextItem(this._getNextItemSectionType(itemType), startedItemType);\n    }\n  }\n\n  /**\n   * Selects the previous selectable item\n   */\n  protected selectPreviousItem(itemType: SuggestionItemType, originalItemType?: SuggestionItemType): void {\n    // If the recursive calling has not found a selectable item in the other suggestion item type groups\n    // And the method is being called again with the original item type,\n    // Select the last selectable item of this suggestion item type group (could be the currently selected item)\n    if (itemType === originalItemType) {\n      this._selectPreviousItemOfItemType(itemType);\n      return;\n    }\n\n    const startedItemType = originalItemType !== undefined ? originalItemType : itemType;\n\n    // Try to set the selection to the previous selectable item, of the same suggestion item type group\n    const selectionChanged = this._selectPreviousItemOfItemType(\n      itemType,\n      startedItemType === itemType ? this._getCurrentIndexForType(itemType) : undefined,\n    );\n\n    // If the selection did not change, try to select from the previous suggestion type group\n    if (!selectionChanged) {\n      this.selectPreviousItem(this._getPreviousItemSectionType(itemType), startedItemType);\n    }\n  }\n\n  /**\n   * Resets the selected state and selects the first selectable item\n   */\n  protected resetSelectedItem(): void {\n    this.setState({ selectedHeaderIndex: -1, selectedFooterIndex: -1 });\n    this._suggestions.current?.deselectAllSuggestions();\n\n    // Select the first item if the shouldSelectFirstItem prop is not set or it is set and it returns true\n    if (this.props.shouldSelectFirstItem === undefined || this.props.shouldSelectFirstItem()) {\n      this.selectFirstItem();\n    }\n  }\n\n  /**\n   * Selects the first item\n   */\n  protected selectFirstItem(): void {\n    if (this._selectNextItemOfItemType(SuggestionItemType.header)) {\n      return;\n    }\n\n    if (this._selectNextItemOfItemType(SuggestionItemType.suggestion)) {\n      return;\n    }\n\n    this._selectNextItemOfItemType(SuggestionItemType.footer);\n  }\n\n  /**\n   * Selects the last item\n   */\n  protected selectLastItem(): void {\n    if (this._selectPreviousItemOfItemType(SuggestionItemType.footer)) {\n      return;\n    }\n\n    if (this._selectPreviousItemOfItemType(SuggestionItemType.suggestion)) {\n      return;\n    }\n\n    this._selectPreviousItemOfItemType(SuggestionItemType.header);\n  }\n\n  /**\n   * Selects the next item in the suggestion item type group, given the current index\n   * If none is able to be selected, returns false, otherwise returns true\n   * @param itemType - The suggestion item type\n   * @param currentIndex - The current index, default is -1\n   */\n  private _selectNextItemOfItemType(itemType: SuggestionItemType, currentIndex: number = -1): boolean {\n    if (itemType === SuggestionItemType.suggestion) {\n      if (this.state.suggestions.length > currentIndex + 1) {\n        this._suggestions.current?.setSelectedSuggestion(currentIndex + 1);\n        this.setState({ selectedHeaderIndex: -1, selectedFooterIndex: -1 });\n        return true;\n      }\n    } else {\n      const isHeader = itemType === SuggestionItemType.header;\n      const itemProps = isHeader ? this.props.headerItemsProps : this.props.footerItemsProps;\n\n      if (itemProps && itemProps.length > currentIndex + 1) {\n        for (let i = currentIndex + 1; i < itemProps.length; i++) {\n          const item = itemProps[i];\n          if (item.onExecute && item.shouldShow()) {\n            this.setState({ selectedHeaderIndex: isHeader ? i : -1 });\n            this.setState({ selectedFooterIndex: isHeader ? -1 : i });\n            this._suggestions.current?.deselectAllSuggestions();\n            return true;\n          }\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Selects the previous item in the suggestion item type group, given the current index\n   * If none is able to be selected, returns false, otherwise returns true\n   * @param itemType - The suggestion item type\n   * @param currentIndex - The current index. If none is provided, the default is the items length of specified type\n   */\n  private _selectPreviousItemOfItemType(itemType: SuggestionItemType, currentIndex?: number): boolean {\n    if (itemType === SuggestionItemType.suggestion) {\n      const index = currentIndex !== undefined ? currentIndex : this.state.suggestions.length;\n      if (index > 0) {\n        this._suggestions.current?.setSelectedSuggestion(index - 1);\n        this.setState({ selectedHeaderIndex: -1, selectedFooterIndex: -1 });\n        return true;\n      }\n    } else {\n      const isHeader = itemType === SuggestionItemType.header;\n      const itemProps = isHeader ? this.props.headerItemsProps : this.props.footerItemsProps;\n      if (itemProps) {\n        const index = currentIndex !== undefined ? currentIndex : itemProps.length;\n        if (index > 0) {\n          for (let i = index - 1; i >= 0; i--) {\n            const item = itemProps[i];\n            if (item.onExecute && item.shouldShow()) {\n              this.setState({ selectedHeaderIndex: isHeader ? i : -1 });\n              this.setState({ selectedFooterIndex: isHeader ? -1 : i });\n              this._suggestions.current?.deselectAllSuggestions();\n              return true;\n            }\n          }\n        }\n      }\n    }\n\n    return false;\n  }\n\n  private _getCurrentIndexForType(itemType: SuggestionItemType): number {\n    switch (itemType) {\n      case SuggestionItemType.header:\n        return this.state.selectedHeaderIndex;\n      case SuggestionItemType.suggestion:\n        return this._suggestions.current!.currentIndex;\n      case SuggestionItemType.footer:\n        return this.state.selectedFooterIndex;\n    }\n  }\n\n  private _getNextItemSectionType(itemType: SuggestionItemType): SuggestionItemType {\n    switch (itemType) {\n      case SuggestionItemType.header:\n        return SuggestionItemType.suggestion;\n      case SuggestionItemType.suggestion:\n        return SuggestionItemType.footer;\n      case SuggestionItemType.footer:\n        return SuggestionItemType.header;\n    }\n  }\n\n  private _getPreviousItemSectionType(itemType: SuggestionItemType): SuggestionItemType {\n    switch (itemType) {\n      case SuggestionItemType.header:\n        return SuggestionItemType.footer;\n      case SuggestionItemType.suggestion:\n        return SuggestionItemType.header;\n      case SuggestionItemType.footer:\n        return SuggestionItemType.suggestion;\n    }\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}