{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { AnimationClassNames, getFocusStyle, getGlobalClassNames, getInputFocusStyle, HighContrastSelector, normalize, getPlaceholderStyles, IconFontSizes, getHighContrastNoAdjustStyle } from '../../Styling';\nvar globalClassNames = {\n  root: 'ms-TextField',\n  description: 'ms-TextField-description',\n  errorMessage: 'ms-TextField-errorMessage',\n  field: 'ms-TextField-field',\n  fieldGroup: 'ms-TextField-fieldGroup',\n  prefix: 'ms-TextField-prefix',\n  suffix: 'ms-TextField-suffix',\n  wrapper: 'ms-TextField-wrapper',\n  revealButton: 'ms-TextField-reveal',\n  multiline: 'ms-TextField--multiline',\n  borderless: 'ms-TextField--borderless',\n  underlined: 'ms-TextField--underlined',\n  unresizable: 'ms-TextField--unresizable',\n  required: 'is-required',\n  disabled: 'is-disabled',\n  active: 'is-active'\n};\n\nfunction getLabelStyles(props) {\n  var underlined = props.underlined,\n      disabled = props.disabled,\n      focused = props.focused,\n      theme = props.theme;\n  var palette = theme.palette,\n      fonts = theme.fonts;\n  return function () {\n    var _a;\n\n    return {\n      root: [underlined && disabled && {\n        color: palette.neutralTertiary\n      }, underlined && {\n        fontSize: fonts.medium.fontSize,\n        marginRight: 8,\n        paddingLeft: 12,\n        paddingRight: 0,\n        lineHeight: '22px',\n        height: 32\n      }, underlined && focused && {\n        selectors: (_a = {}, _a[HighContrastSelector] = {\n          height: 31 // -1px to prevent jumpiness in HC with the increased border-width to 2px\n\n        }, _a)\n      }]\n    };\n  };\n}\n\nexport function getStyles(props) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n\n  var theme = props.theme,\n      className = props.className,\n      disabled = props.disabled,\n      focused = props.focused,\n      required = props.required,\n      multiline = props.multiline,\n      hasLabel = props.hasLabel,\n      borderless = props.borderless,\n      underlined = props.underlined,\n      hasIcon = props.hasIcon,\n      resizable = props.resizable,\n      hasErrorMessage = props.hasErrorMessage,\n      inputClassName = props.inputClassName,\n      autoAdjustHeight = props.autoAdjustHeight,\n      hasRevealButton = props.hasRevealButton;\n  var semanticColors = theme.semanticColors,\n      effects = theme.effects,\n      fonts = theme.fonts;\n  var classNames = getGlobalClassNames(globalClassNames, theme);\n  var fieldPrefixSuffix = {\n    // Suffix/Prefix are not editable so the disabled slot perfectly fits.\n    background: semanticColors.disabledBackground,\n    color: !disabled ? semanticColors.inputPlaceholderText : semanticColors.disabledText,\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 10px',\n    lineHeight: 1,\n    whiteSpace: 'nowrap',\n    flexShrink: 0,\n    selectors: (_a = {}, _a[HighContrastSelector] = {\n      background: 'Window',\n      color: disabled ? 'GrayText' : 'WindowText'\n    }, _a)\n  }; // placeholder style constants\n\n  var placeholderStyles = [{\n    color: semanticColors.inputPlaceholderText,\n    opacity: 1,\n    selectors: (_b = {}, _b[HighContrastSelector] = {\n      color: 'GrayText'\n    }, _b)\n  }];\n  var disabledPlaceholderStyles = {\n    color: semanticColors.disabledText,\n    selectors: (_c = {}, _c[HighContrastSelector] = {\n      color: 'GrayText'\n    }, _c)\n  };\n  return {\n    root: [classNames.root, fonts.medium, required && classNames.required, disabled && classNames.disabled, focused && classNames.active, multiline && classNames.multiline, borderless && classNames.borderless, underlined && classNames.underlined, normalize, {\n      position: 'relative'\n    }, className],\n    wrapper: [classNames.wrapper, underlined && [{\n      display: 'flex',\n      borderBottom: \"1px solid \" + (!hasErrorMessage ? semanticColors.inputBorder : semanticColors.errorText),\n      width: '100%'\n    }, disabled && {\n      borderBottomColor: semanticColors.disabledBackground,\n      selectors: (_d = {}, _d[HighContrastSelector] = __assign({\n        borderColor: 'GrayText'\n      }, getHighContrastNoAdjustStyle()), _d)\n    }, !disabled && {\n      selectors: {\n        ':hover': {\n          borderBottomColor: !hasErrorMessage ? semanticColors.inputBorderHovered : semanticColors.errorText,\n          selectors: (_e = {}, _e[HighContrastSelector] = __assign({\n            borderBottomColor: 'Highlight'\n          }, getHighContrastNoAdjustStyle()), _e)\n        }\n      }\n    }, focused && [{\n      position: 'relative'\n    }, getInputFocusStyle(!hasErrorMessage ? semanticColors.inputFocusBorderAlt : semanticColors.errorText, 0, 'borderBottom')]]],\n    fieldGroup: [classNames.fieldGroup, normalize, {\n      border: \"1px solid \" + semanticColors.inputBorder,\n      borderRadius: effects.roundedCorner2,\n      background: semanticColors.inputBackground,\n      cursor: 'text',\n      height: 32,\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'stretch',\n      position: 'relative'\n    }, multiline && {\n      minHeight: '60px',\n      height: 'auto',\n      display: 'flex'\n    }, !focused && !disabled && {\n      selectors: {\n        ':hover': {\n          borderColor: semanticColors.inputBorderHovered,\n          selectors: (_f = {}, _f[HighContrastSelector] = __assign({\n            borderColor: 'Highlight'\n          }, getHighContrastNoAdjustStyle()), _f)\n        }\n      }\n    }, focused && !underlined && getInputFocusStyle(!hasErrorMessage ? semanticColors.inputFocusBorderAlt : semanticColors.errorText, effects.roundedCorner2), disabled && {\n      borderColor: semanticColors.disabledBackground,\n      selectors: (_g = {}, _g[HighContrastSelector] = __assign({\n        borderColor: 'GrayText'\n      }, getHighContrastNoAdjustStyle()), _g),\n      cursor: 'default'\n    }, borderless && {\n      border: 'none'\n    }, borderless && focused && {\n      border: 'none',\n      selectors: {\n        ':after': {\n          border: 'none'\n        }\n      }\n    }, underlined && {\n      flex: '1 1 0px',\n      border: 'none',\n      textAlign: 'left'\n    }, underlined && disabled && {\n      backgroundColor: 'transparent'\n    }, hasErrorMessage && !underlined && {\n      borderColor: semanticColors.errorText,\n      selectors: {\n        '&:hover': {\n          borderColor: semanticColors.errorText\n        }\n      }\n    }, !hasLabel && required && {\n      selectors: (_h = {\n        ':before': {\n          content: \"'*'\",\n          color: semanticColors.errorText,\n          position: 'absolute',\n          top: -5,\n          right: -10\n        }\n      }, _h[HighContrastSelector] = {\n        selectors: {\n          ':before': {\n            color: 'WindowText',\n            right: -14 // moving the * 4 pixel to right to alleviate border clipping in HC mode.\n\n          }\n        }\n      }, _h)\n    }],\n    field: [fonts.medium, classNames.field, normalize, {\n      borderRadius: 0,\n      border: 'none',\n      background: 'none',\n      backgroundColor: 'transparent',\n      color: semanticColors.inputText,\n      padding: '0 8px',\n      width: '100%',\n      minWidth: 0,\n      textOverflow: 'ellipsis',\n      outline: 0,\n      selectors: (_j = {\n        '&:active, &:focus, &:hover': {\n          outline: 0\n        },\n        '::-ms-clear': {\n          display: 'none'\n        }\n      }, _j[HighContrastSelector] = {\n        background: 'Window',\n        color: disabled ? 'GrayText' : 'WindowText'\n      }, _j)\n    }, getPlaceholderStyles(placeholderStyles), multiline && !resizable && [classNames.unresizable, {\n      resize: 'none'\n    }], multiline && {\n      minHeight: 'inherit',\n      lineHeight: 17,\n      flexGrow: 1,\n      paddingTop: 6,\n      paddingBottom: 6,\n      overflow: 'auto',\n      width: '100%'\n    }, multiline && autoAdjustHeight && {\n      overflow: 'hidden'\n    }, hasIcon && !hasRevealButton && {\n      paddingRight: 24\n    }, multiline && hasIcon && {\n      paddingRight: 40\n    }, disabled && [{\n      backgroundColor: semanticColors.disabledBackground,\n      color: semanticColors.disabledText,\n      borderColor: semanticColors.disabledBackground\n    }, getPlaceholderStyles(disabledPlaceholderStyles)], underlined && {\n      textAlign: 'left'\n    }, focused && !borderless && {\n      selectors: (_k = {}, _k[HighContrastSelector] = {\n        paddingLeft: 11,\n        paddingRight: 11\n      }, _k)\n    }, focused && multiline && !borderless && {\n      selectors: (_l = {}, _l[HighContrastSelector] = {\n        paddingTop: 4 // take into consideration the 2px increased border-width (not when borderless).\n\n      }, _l)\n    }, inputClassName],\n    icon: [multiline && {\n      paddingRight: 24,\n      alignItems: 'flex-end'\n    }, {\n      pointerEvents: 'none',\n      position: 'absolute',\n      bottom: 6,\n      right: 8,\n      top: 'auto',\n      fontSize: IconFontSizes.medium,\n      lineHeight: 18\n    }, disabled && {\n      color: semanticColors.disabledText\n    }],\n    description: [classNames.description, {\n      color: semanticColors.bodySubtext,\n      fontSize: fonts.xSmall.fontSize\n    }],\n    errorMessage: [classNames.errorMessage, AnimationClassNames.slideDownIn20, fonts.small, {\n      color: semanticColors.errorText,\n      margin: 0,\n      paddingTop: 5,\n      display: 'flex',\n      alignItems: 'center'\n    }],\n    prefix: [classNames.prefix, fieldPrefixSuffix],\n    suffix: [classNames.suffix, fieldPrefixSuffix],\n    revealButton: [classNames.revealButton, 'ms-Button', 'ms-Button--icon', getFocusStyle(theme, {\n      inset: 1\n    }), {\n      height: 30,\n      width: 32,\n      border: 'none',\n      padding: '0px 4px',\n      backgroundColor: 'transparent',\n      color: semanticColors.link,\n      selectors: {\n        ':hover': {\n          outline: 0,\n          color: semanticColors.primaryButtonBackgroundHovered,\n          backgroundColor: semanticColors.buttonBackgroundHovered,\n          selectors: (_m = {}, _m[HighContrastSelector] = {\n            borderColor: 'Highlight',\n            color: 'Highlight'\n          }, _m)\n        },\n        ':focus': {\n          outline: 0\n        }\n      }\n    }, hasIcon && {\n      marginRight: 28\n    }],\n    revealSpan: {\n      display: 'flex',\n      height: '100%',\n      alignItems: 'center'\n    },\n    revealIcon: {\n      margin: '0px 4px',\n      pointerEvents: 'none',\n      bottom: 6,\n      right: 8,\n      top: 'auto',\n      fontSize: IconFontSizes.medium,\n      lineHeight: 18\n    },\n    subComponentStyles: {\n      label: getLabelStyles(props)\n    }\n  };\n}","map":{"version":3,"sources":["components/TextField/TextField.styles.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  AnimationClassNames,\n  getFocusStyle,\n  getGlobalClassNames,\n  getInputFocusStyle,\n  HighContrastSelector,\n  normalize,\n  getPlaceholderStyles,\n  IconFontSizes,\n  getHighContrastNoAdjustStyle,\n} from '../../Styling';\nimport type { IStyle } from '../../Styling';\nimport type { ILabelStyles, ILabelStyleProps } from '../../Label';\nimport type { ITextFieldStyleProps, ITextFieldStyles } from './TextField.types';\nimport type { IStyleFunctionOrObject } from '@fluentui/utilities';\n\nconst globalClassNames = {\n  root: 'ms-TextField',\n  description: 'ms-TextField-description',\n  errorMessage: 'ms-TextField-errorMessage',\n  field: 'ms-TextField-field',\n  fieldGroup: 'ms-TextField-fieldGroup',\n  prefix: 'ms-TextField-prefix',\n  suffix: 'ms-TextField-suffix',\n  wrapper: 'ms-TextField-wrapper',\n  revealButton: 'ms-TextField-reveal',\n\n  multiline: 'ms-TextField--multiline',\n  borderless: 'ms-TextField--borderless',\n  underlined: 'ms-TextField--underlined',\n  unresizable: 'ms-TextField--unresizable',\n\n  required: 'is-required',\n  disabled: 'is-disabled',\n  active: 'is-active',\n};\n\nfunction getLabelStyles(props: ITextFieldStyleProps): IStyleFunctionOrObject<ILabelStyleProps, ILabelStyles> {\n  const { underlined, disabled, focused, theme } = props;\n  const { palette, fonts } = theme;\n\n  return () => ({\n    root: [\n      underlined &&\n        disabled && {\n          color: palette.neutralTertiary,\n        },\n      underlined && {\n        fontSize: fonts.medium.fontSize,\n        marginRight: 8,\n        paddingLeft: 12,\n        paddingRight: 0,\n        lineHeight: '22px',\n        height: 32,\n      },\n      underlined &&\n        focused && {\n          selectors: {\n            [HighContrastSelector]: {\n              height: 31, // -1px to prevent jumpiness in HC with the increased border-width to 2px\n            },\n          },\n        },\n    ],\n  });\n}\n\nexport function getStyles(props: ITextFieldStyleProps): ITextFieldStyles {\n  const {\n    theme,\n    className,\n    disabled,\n    focused,\n    required,\n    multiline,\n    hasLabel,\n    borderless,\n    underlined,\n    hasIcon,\n    resizable,\n    hasErrorMessage,\n    inputClassName,\n    autoAdjustHeight,\n    hasRevealButton,\n  } = props;\n\n  const { semanticColors, effects, fonts } = theme;\n\n  const classNames = getGlobalClassNames(globalClassNames, theme);\n\n  const fieldPrefixSuffix: IStyle = {\n    // Suffix/Prefix are not editable so the disabled slot perfectly fits.\n    background: semanticColors.disabledBackground,\n    color: !disabled ? semanticColors.inputPlaceholderText : semanticColors.disabledText,\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 10px',\n    lineHeight: 1,\n    whiteSpace: 'nowrap',\n    flexShrink: 0,\n    selectors: {\n      [HighContrastSelector]: {\n        background: 'Window',\n        color: disabled ? 'GrayText' : 'WindowText',\n      },\n    },\n  };\n\n  // placeholder style constants\n  const placeholderStyles: IStyle = [\n    {\n      color: semanticColors.inputPlaceholderText,\n      opacity: 1,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n        },\n      },\n    },\n  ];\n\n  const disabledPlaceholderStyles: IStyle = {\n    color: semanticColors.disabledText,\n    selectors: {\n      [HighContrastSelector]: {\n        color: 'GrayText',\n      },\n    },\n  };\n\n  return {\n    root: [\n      classNames.root,\n      fonts.medium,\n      required && classNames.required,\n      disabled && classNames.disabled,\n      focused && classNames.active,\n      multiline && classNames.multiline,\n      borderless && classNames.borderless,\n      underlined && classNames.underlined,\n      normalize,\n      {\n        position: 'relative',\n      },\n      className,\n    ],\n    wrapper: [\n      classNames.wrapper,\n\n      underlined && [\n        {\n          display: 'flex',\n          borderBottom: `1px solid ${!hasErrorMessage ? semanticColors.inputBorder : semanticColors.errorText}`,\n          width: '100%',\n        },\n        disabled && {\n          borderBottomColor: semanticColors.disabledBackground,\n          selectors: {\n            [HighContrastSelector]: {\n              borderColor: 'GrayText',\n              ...getHighContrastNoAdjustStyle(),\n            },\n          },\n        },\n        !disabled && {\n          selectors: {\n            ':hover': {\n              borderBottomColor: !hasErrorMessage ? semanticColors.inputBorderHovered : semanticColors.errorText,\n              selectors: {\n                [HighContrastSelector]: {\n                  borderBottomColor: 'Highlight',\n                  ...getHighContrastNoAdjustStyle(),\n                },\n              },\n            },\n          },\n        },\n        focused && [\n          {\n            position: 'relative',\n          },\n          getInputFocusStyle(\n            !hasErrorMessage ? semanticColors.inputFocusBorderAlt : semanticColors.errorText,\n            0,\n            'borderBottom',\n          ),\n        ],\n      ],\n    ],\n    fieldGroup: [\n      classNames.fieldGroup,\n      normalize,\n      {\n        border: `1px solid ${semanticColors.inputBorder}`,\n        borderRadius: effects.roundedCorner2,\n        background: semanticColors.inputBackground,\n        cursor: 'text',\n        height: 32,\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'stretch',\n        position: 'relative',\n      },\n      multiline && {\n        minHeight: '60px',\n        height: 'auto',\n        display: 'flex',\n      },\n\n      !focused &&\n        !disabled && {\n          selectors: {\n            ':hover': {\n              borderColor: semanticColors.inputBorderHovered,\n              selectors: {\n                [HighContrastSelector]: {\n                  borderColor: 'Highlight',\n                  ...getHighContrastNoAdjustStyle(),\n                },\n              },\n            },\n          },\n        },\n\n      focused &&\n        !underlined &&\n        getInputFocusStyle(\n          !hasErrorMessage ? semanticColors.inputFocusBorderAlt : semanticColors.errorText,\n          effects.roundedCorner2,\n        ),\n      disabled && {\n        borderColor: semanticColors.disabledBackground,\n        selectors: {\n          [HighContrastSelector]: {\n            borderColor: 'GrayText',\n            ...getHighContrastNoAdjustStyle(),\n          },\n        },\n\n        cursor: 'default',\n      },\n      borderless && {\n        border: 'none',\n      },\n      borderless &&\n        focused && {\n          border: 'none',\n          selectors: {\n            ':after': {\n              border: 'none',\n            },\n          },\n        },\n      underlined && {\n        flex: '1 1 0px',\n        border: 'none',\n        textAlign: 'left',\n      },\n      underlined &&\n        disabled && {\n          backgroundColor: 'transparent',\n        },\n\n      hasErrorMessage &&\n        !underlined && {\n          borderColor: semanticColors.errorText,\n          selectors: {\n            '&:hover': {\n              borderColor: semanticColors.errorText,\n            },\n          },\n        },\n      !hasLabel &&\n        required && {\n          selectors: {\n            ':before': {\n              content: `'*'`,\n              color: semanticColors.errorText,\n              position: 'absolute',\n              top: -5,\n              right: -10,\n            },\n            [HighContrastSelector]: {\n              selectors: {\n                ':before': {\n                  color: 'WindowText',\n                  right: -14, // moving the * 4 pixel to right to alleviate border clipping in HC mode.\n                },\n              },\n            },\n          },\n        },\n    ],\n    field: [\n      fonts.medium,\n      classNames.field,\n      normalize,\n      {\n        borderRadius: 0,\n        border: 'none',\n        background: 'none',\n        backgroundColor: 'transparent',\n        color: semanticColors.inputText,\n        padding: '0 8px',\n        width: '100%',\n        minWidth: 0,\n        textOverflow: 'ellipsis',\n        outline: 0,\n        selectors: {\n          '&:active, &:focus, &:hover': { outline: 0 },\n          '::-ms-clear': {\n            display: 'none',\n          },\n          [HighContrastSelector]: {\n            background: 'Window',\n            color: disabled ? 'GrayText' : 'WindowText',\n          },\n        },\n      },\n      getPlaceholderStyles(placeholderStyles),\n      multiline &&\n        !resizable && [\n          classNames.unresizable,\n          {\n            resize: 'none',\n          },\n        ],\n      multiline && {\n        minHeight: 'inherit',\n        lineHeight: 17,\n        flexGrow: 1,\n        paddingTop: 6,\n        paddingBottom: 6,\n        overflow: 'auto',\n        width: '100%',\n      },\n      multiline &&\n        autoAdjustHeight && {\n          overflow: 'hidden',\n        },\n      hasIcon &&\n        !hasRevealButton && {\n          paddingRight: 24,\n        },\n      multiline &&\n        hasIcon && {\n          paddingRight: 40,\n        },\n      disabled && [\n        {\n          backgroundColor: semanticColors.disabledBackground,\n          color: semanticColors.disabledText,\n          borderColor: semanticColors.disabledBackground,\n        },\n        getPlaceholderStyles(disabledPlaceholderStyles),\n      ],\n      underlined && {\n        textAlign: 'left',\n      },\n      focused &&\n        !borderless && {\n          selectors: {\n            [HighContrastSelector]: {\n              paddingLeft: 11,\n              paddingRight: 11,\n            },\n          },\n        },\n      focused &&\n        multiline &&\n        !borderless && {\n          selectors: {\n            [HighContrastSelector]: {\n              paddingTop: 4, // take into consideration the 2px increased border-width (not when borderless).\n            },\n          },\n        },\n      inputClassName,\n    ],\n    icon: [\n      multiline && {\n        paddingRight: 24,\n        alignItems: 'flex-end',\n      },\n      {\n        pointerEvents: 'none',\n        position: 'absolute',\n        bottom: 6,\n        right: 8,\n        top: 'auto',\n        fontSize: IconFontSizes.medium,\n        lineHeight: 18,\n      },\n      disabled && {\n        color: semanticColors.disabledText,\n      },\n    ],\n    description: [\n      classNames.description,\n      {\n        color: semanticColors.bodySubtext,\n        fontSize: fonts.xSmall.fontSize,\n      },\n    ],\n    errorMessage: [\n      classNames.errorMessage,\n      AnimationClassNames.slideDownIn20,\n      fonts.small,\n      {\n        color: semanticColors.errorText,\n        margin: 0,\n        paddingTop: 5,\n        display: 'flex',\n        alignItems: 'center',\n      },\n    ],\n    prefix: [classNames.prefix, fieldPrefixSuffix],\n    suffix: [classNames.suffix, fieldPrefixSuffix],\n    revealButton: [\n      classNames.revealButton,\n      'ms-Button',\n      'ms-Button--icon',\n      getFocusStyle(theme, { inset: 1 }),\n      {\n        height: 30,\n        width: 32,\n        border: 'none',\n        padding: '0px 4px',\n        backgroundColor: 'transparent',\n        color: semanticColors.link,\n        selectors: {\n          ':hover': {\n            outline: 0,\n            color: semanticColors.primaryButtonBackgroundHovered,\n            backgroundColor: semanticColors.buttonBackgroundHovered,\n            selectors: {\n              [HighContrastSelector]: {\n                borderColor: 'Highlight',\n                color: 'Highlight',\n              },\n            },\n          },\n          ':focus': { outline: 0 },\n        },\n      },\n      hasIcon && {\n        marginRight: 28,\n      },\n    ],\n    revealSpan: {\n      display: 'flex',\n      height: '100%',\n      alignItems: 'center',\n    },\n    revealIcon: {\n      margin: '0px 4px',\n      pointerEvents: 'none',\n      bottom: 6,\n      right: 8,\n      top: 'auto',\n      fontSize: IconFontSizes.medium,\n      lineHeight: 18,\n    },\n    subComponentStyles: {\n      label: getLabelStyles(props),\n    },\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}