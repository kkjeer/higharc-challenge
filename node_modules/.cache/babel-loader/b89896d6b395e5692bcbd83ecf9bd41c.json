{"ast":null,"code":"import { AnimationClassNames, getGlobalClassNames } from '../../Styling';\nimport { getWindow } from '../../Utilities';\nvar GlobalClassNames = {\n  root: 'ms-Image',\n  rootMaximizeFrame: 'ms-Image--maximizeFrame',\n  image: 'ms-Image-image',\n  imageCenter: 'ms-Image-image--center',\n  imageContain: 'ms-Image-image--contain',\n  imageCover: 'ms-Image-image--cover',\n  imageCenterContain: 'ms-Image-image--centerContain',\n  imageCenterCover: 'ms-Image-image--centerCover',\n  imageNone: 'ms-Image-image--none',\n  imageLandscape: 'ms-Image-image--landscape',\n  imagePortrait: 'ms-Image-image--portrait'\n};\nexport var getStyles = function (props) {\n  var className = props.className,\n      width = props.width,\n      height = props.height,\n      maximizeFrame = props.maximizeFrame,\n      isLoaded = props.isLoaded,\n      shouldFadeIn = props.shouldFadeIn,\n      shouldStartVisible = props.shouldStartVisible,\n      isLandscape = props.isLandscape,\n      isCenter = props.isCenter,\n      isContain = props.isContain,\n      isCover = props.isCover,\n      isCenterContain = props.isCenterContain,\n      isCenterCover = props.isCenterCover,\n      isNone = props.isNone,\n      isError = props.isError,\n      isNotImageFit = props.isNotImageFit,\n      theme = props.theme;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  var ImageFitStyles = {\n    position: 'absolute',\n    left: '50% /* @noflip */',\n    top: '50%',\n    transform: 'translate(-50%,-50%)' // @todo test RTL renders transform: translate(50%,-50%);\n\n  }; // Cut the mustard using msMaxTouchPoints to detect IE11 which does not support CSS object-fit\n\n  var window = getWindow();\n  var supportsObjectFit = window !== undefined && window.navigator.msMaxTouchPoints === undefined;\n  var fallbackObjectFitStyles = isContain && isLandscape || isCover && !isLandscape ? {\n    width: '100%',\n    height: 'auto'\n  } : {\n    width: 'auto',\n    height: '100%'\n  };\n  return {\n    root: [classNames.root, theme.fonts.medium, {\n      overflow: 'hidden'\n    }, maximizeFrame && [classNames.rootMaximizeFrame, {\n      height: '100%',\n      width: '100%'\n    }], isLoaded && shouldFadeIn && !shouldStartVisible && AnimationClassNames.fadeIn400, (isCenter || isContain || isCover || isCenterContain || isCenterCover) && {\n      position: 'relative'\n    }, className],\n    image: [classNames.image, {\n      display: 'block',\n      opacity: 0\n    }, isLoaded && ['is-loaded', {\n      opacity: 1\n    }], isCenter && [classNames.imageCenter, ImageFitStyles], isContain && [classNames.imageContain, supportsObjectFit && {\n      width: '100%',\n      height: '100%',\n      objectFit: 'contain'\n    }, !supportsObjectFit && fallbackObjectFitStyles, !supportsObjectFit && ImageFitStyles], isCover && [classNames.imageCover, supportsObjectFit && {\n      width: '100%',\n      height: '100%',\n      objectFit: 'cover'\n    }, !supportsObjectFit && fallbackObjectFitStyles, !supportsObjectFit && ImageFitStyles], isCenterContain && [classNames.imageCenterContain, isLandscape && {\n      maxWidth: '100%'\n    }, !isLandscape && {\n      maxHeight: '100%'\n    }, ImageFitStyles], isCenterCover && [classNames.imageCenterCover, isLandscape && {\n      maxHeight: '100%'\n    }, !isLandscape && {\n      maxWidth: '100%'\n    }, ImageFitStyles], isNone && [classNames.imageNone, {\n      width: 'auto',\n      height: 'auto'\n    }], isNotImageFit && [!!width && !height && {\n      height: 'auto',\n      width: '100%'\n    }, !width && !!height && {\n      height: '100%',\n      width: 'auto'\n    }, !!width && !!height && {\n      height: '100%',\n      width: '100%'\n    }], isLandscape && classNames.imageLandscape, !isLandscape && classNames.imagePortrait, !isLoaded && 'is-notLoaded', shouldFadeIn && 'is-fadeIn', isError && 'is-error']\n  };\n};","map":{"version":3,"sources":["components/Image/Image.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { AnimationClassNames, getGlobalClassNames } from '../../Styling';\nimport { getWindow } from '../../Utilities';\nimport type { IStyle } from '../../Styling';\nimport type { IImageStyleProps, IImageStyles } from './Image.types';\n\nconst GlobalClassNames = {\n  root: 'ms-Image',\n  rootMaximizeFrame: 'ms-Image--maximizeFrame',\n  image: 'ms-Image-image',\n  imageCenter: 'ms-Image-image--center',\n  imageContain: 'ms-Image-image--contain',\n  imageCover: 'ms-Image-image--cover',\n  imageCenterContain: 'ms-Image-image--centerContain',\n  imageCenterCover: 'ms-Image-image--centerCover',\n  imageNone: 'ms-Image-image--none',\n  imageLandscape: 'ms-Image-image--landscape',\n  imagePortrait: 'ms-Image-image--portrait',\n};\n\nexport const getStyles = (props: IImageStyleProps): IImageStyles => {\n  const {\n    className,\n    width,\n    height,\n    maximizeFrame,\n    isLoaded,\n    shouldFadeIn,\n    shouldStartVisible,\n    isLandscape,\n    isCenter,\n    isContain,\n    isCover,\n    isCenterContain,\n    isCenterCover,\n    isNone,\n    isError,\n    isNotImageFit,\n    theme,\n  } = props;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const ImageFitStyles: IStyle = {\n    position: 'absolute',\n    left: '50% /* @noflip */',\n    top: '50%',\n    transform: 'translate(-50%,-50%)', // @todo test RTL renders transform: translate(50%,-50%);\n  };\n\n  // Cut the mustard using msMaxTouchPoints to detect IE11 which does not support CSS object-fit\n  const window: Window | undefined = getWindow();\n  const supportsObjectFit: boolean = window !== undefined && window.navigator.msMaxTouchPoints === undefined;\n  const fallbackObjectFitStyles =\n    (isContain && isLandscape) || (isCover && !isLandscape)\n      ? { width: '100%', height: 'auto' }\n      : { width: 'auto', height: '100%' };\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      {\n        overflow: 'hidden',\n      },\n      maximizeFrame && [\n        classNames.rootMaximizeFrame,\n        {\n          height: '100%',\n          width: '100%',\n        },\n      ],\n      isLoaded && shouldFadeIn && !shouldStartVisible && AnimationClassNames.fadeIn400,\n      (isCenter || isContain || isCover || isCenterContain || isCenterCover) && {\n        position: 'relative',\n      },\n      className,\n    ],\n    image: [\n      classNames.image,\n      {\n        display: 'block',\n        opacity: 0,\n      },\n      isLoaded && [\n        'is-loaded',\n        {\n          opacity: 1,\n        },\n      ],\n      isCenter && [classNames.imageCenter, ImageFitStyles],\n      isContain && [\n        classNames.imageContain,\n        supportsObjectFit && {\n          width: '100%',\n          height: '100%',\n          objectFit: 'contain',\n        },\n        !supportsObjectFit && fallbackObjectFitStyles,\n        !supportsObjectFit && ImageFitStyles,\n      ],\n      isCover && [\n        classNames.imageCover,\n        supportsObjectFit && {\n          width: '100%',\n          height: '100%',\n          objectFit: 'cover',\n        },\n        !supportsObjectFit && fallbackObjectFitStyles,\n        !supportsObjectFit && ImageFitStyles,\n      ],\n      isCenterContain && [\n        classNames.imageCenterContain,\n        isLandscape && {\n          maxWidth: '100%',\n        },\n        !isLandscape && {\n          maxHeight: '100%',\n        },\n        ImageFitStyles,\n      ],\n      isCenterCover && [\n        classNames.imageCenterCover,\n        isLandscape && {\n          maxHeight: '100%',\n        },\n        !isLandscape && {\n          maxWidth: '100%',\n        },\n        ImageFitStyles,\n      ],\n      isNone && [\n        classNames.imageNone,\n        {\n          width: 'auto',\n          height: 'auto',\n        },\n      ],\n      isNotImageFit && [\n        !!width &&\n          !height && {\n            height: 'auto',\n            width: '100%',\n          },\n        !width &&\n          !!height && {\n            height: '100%',\n            width: 'auto',\n          },\n        !!width &&\n          !!height && {\n            height: '100%',\n            width: '100%',\n          },\n      ],\n      isLandscape && classNames.imageLandscape,\n      !isLandscape && classNames.imagePortrait,\n      !isLoaded && 'is-notLoaded',\n      shouldFadeIn && 'is-fadeIn',\n      isError && 'is-error',\n    ],\n  };\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}