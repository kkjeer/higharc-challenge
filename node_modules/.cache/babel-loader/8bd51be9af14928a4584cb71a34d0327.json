{"ast":null,"code":"import { FontSizes, FontWeights, LocalizedFontFamilies, LocalizedFontNames } from './FluentFonts'; // Fallback fonts, if specified system or web fonts are unavailable.\n\nvar FontFamilyFallbacks = \"'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif\"; // By default, we favor system fonts for the default.\n// All localized fonts use a web font and never use the system font.\n\nvar defaultFontFamily = \"'Segoe UI', '\" + LocalizedFontNames.WestEuropean + \"'\"; // Mapping of language prefix to to font family.\n\nvar LanguageToFontMap = {\n  ar: LocalizedFontFamilies.Arabic,\n  bg: LocalizedFontFamilies.Cyrillic,\n  cs: LocalizedFontFamilies.EastEuropean,\n  el: LocalizedFontFamilies.Greek,\n  et: LocalizedFontFamilies.EastEuropean,\n  he: LocalizedFontFamilies.Hebrew,\n  hi: LocalizedFontFamilies.Hindi,\n  hr: LocalizedFontFamilies.EastEuropean,\n  hu: LocalizedFontFamilies.EastEuropean,\n  ja: LocalizedFontFamilies.Japanese,\n  kk: LocalizedFontFamilies.EastEuropean,\n  ko: LocalizedFontFamilies.Korean,\n  lt: LocalizedFontFamilies.EastEuropean,\n  lv: LocalizedFontFamilies.EastEuropean,\n  pl: LocalizedFontFamilies.EastEuropean,\n  ru: LocalizedFontFamilies.Cyrillic,\n  sk: LocalizedFontFamilies.EastEuropean,\n  'sr-latn': LocalizedFontFamilies.EastEuropean,\n  th: LocalizedFontFamilies.Thai,\n  tr: LocalizedFontFamilies.EastEuropean,\n  uk: LocalizedFontFamilies.Cyrillic,\n  vi: LocalizedFontFamilies.Vietnamese,\n  'zh-hans': LocalizedFontFamilies.ChineseSimplified,\n  'zh-hant': LocalizedFontFamilies.ChineseTraditional,\n  hy: LocalizedFontFamilies.Armenian,\n  ka: LocalizedFontFamilies.Georgian\n};\n\nfunction _fontFamilyWithFallbacks(fontFamily) {\n  return fontFamily + \", \" + FontFamilyFallbacks;\n}\n/**\n * If there is a localized font for this language, return that.\n * Returns undefined if there is no localized font for that language.\n */\n\n\nfunction _getLocalizedFontFamily(language) {\n  for (var lang in LanguageToFontMap) {\n    if (LanguageToFontMap.hasOwnProperty(lang) && language && lang.indexOf(language) === 0) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return LanguageToFontMap[lang];\n    }\n  }\n\n  return defaultFontFamily;\n}\n\nfunction _createFont(size, weight, fontFamily) {\n  return {\n    fontFamily: fontFamily,\n    MozOsxFontSmoothing: 'grayscale',\n    WebkitFontSmoothing: 'antialiased',\n    fontSize: size,\n    fontWeight: weight\n  };\n}\n\nexport function createFontStyles(localeCode) {\n  var localizedFont = _getLocalizedFontFamily(localeCode);\n\n  var fontFamilyWithFallback = _fontFamilyWithFallbacks(localizedFont);\n\n  var fontStyles = {\n    tiny: _createFont(FontSizes.mini, FontWeights.regular, fontFamilyWithFallback),\n    xSmall: _createFont(FontSizes.xSmall, FontWeights.regular, fontFamilyWithFallback),\n    small: _createFont(FontSizes.small, FontWeights.regular, fontFamilyWithFallback),\n    smallPlus: _createFont(FontSizes.smallPlus, FontWeights.regular, fontFamilyWithFallback),\n    medium: _createFont(FontSizes.medium, FontWeights.regular, fontFamilyWithFallback),\n    mediumPlus: _createFont(FontSizes.mediumPlus, FontWeights.regular, fontFamilyWithFallback),\n    large: _createFont(FontSizes.large, FontWeights.regular, fontFamilyWithFallback),\n    xLarge: _createFont(FontSizes.xLarge, FontWeights.semibold, fontFamilyWithFallback),\n    xLargePlus: _createFont(FontSizes.xLargePlus, FontWeights.semibold, fontFamilyWithFallback),\n    xxLarge: _createFont(FontSizes.xxLarge, FontWeights.semibold, fontFamilyWithFallback),\n    xxLargePlus: _createFont(FontSizes.xxLargePlus, FontWeights.semibold, fontFamilyWithFallback),\n    superLarge: _createFont(FontSizes.superLarge, FontWeights.semibold, fontFamilyWithFallback),\n    mega: _createFont(FontSizes.mega, FontWeights.semibold, fontFamilyWithFallback)\n  };\n  return fontStyles;\n}","map":{"version":3,"sources":["fonts/createFontStyles.ts"],"names":[],"mappings":"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","sourcesContent":["import { FontSizes, FontWeights, LocalizedFontFamilies, LocalizedFontNames } from './FluentFonts';\nimport type { IFontWeight, IRawStyle } from '@fluentui/merge-styles';\nimport type { IFontStyles } from '../types/IFontStyles';\n\n// Fallback fonts, if specified system or web fonts are unavailable.\nconst FontFamilyFallbacks = `'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif`;\n\n// By default, we favor system fonts for the default.\n// All localized fonts use a web font and never use the system font.\nconst defaultFontFamily = `'Segoe UI', '${LocalizedFontNames.WestEuropean}'`;\n\n// Mapping of language prefix to to font family.\nconst LanguageToFontMap = {\n  ar: LocalizedFontFamilies.Arabic,\n  bg: LocalizedFontFamilies.Cyrillic,\n  cs: LocalizedFontFamilies.EastEuropean,\n  el: LocalizedFontFamilies.Greek,\n  et: LocalizedFontFamilies.EastEuropean,\n  he: LocalizedFontFamilies.Hebrew,\n  hi: LocalizedFontFamilies.Hindi,\n  hr: LocalizedFontFamilies.EastEuropean,\n  hu: LocalizedFontFamilies.EastEuropean,\n  ja: LocalizedFontFamilies.Japanese,\n  kk: LocalizedFontFamilies.EastEuropean,\n  ko: LocalizedFontFamilies.Korean,\n  lt: LocalizedFontFamilies.EastEuropean,\n  lv: LocalizedFontFamilies.EastEuropean,\n  pl: LocalizedFontFamilies.EastEuropean,\n  ru: LocalizedFontFamilies.Cyrillic,\n  sk: LocalizedFontFamilies.EastEuropean,\n  'sr-latn': LocalizedFontFamilies.EastEuropean,\n  th: LocalizedFontFamilies.Thai,\n  tr: LocalizedFontFamilies.EastEuropean,\n  uk: LocalizedFontFamilies.Cyrillic,\n  vi: LocalizedFontFamilies.Vietnamese,\n  'zh-hans': LocalizedFontFamilies.ChineseSimplified,\n  'zh-hant': LocalizedFontFamilies.ChineseTraditional,\n  hy: LocalizedFontFamilies.Armenian,\n  ka: LocalizedFontFamilies.Georgian,\n};\n\nfunction _fontFamilyWithFallbacks(fontFamily: string): string {\n  return `${fontFamily}, ${FontFamilyFallbacks}`;\n}\n\n/**\n * If there is a localized font for this language, return that.\n * Returns undefined if there is no localized font for that language.\n */\nfunction _getLocalizedFontFamily(language: string | null): string {\n  for (const lang in LanguageToFontMap) {\n    if (LanguageToFontMap.hasOwnProperty(lang) && language && lang.indexOf(language) === 0) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return (LanguageToFontMap as any)[lang];\n    }\n  }\n\n  return defaultFontFamily;\n}\n\nfunction _createFont(size: string, weight: IFontWeight, fontFamily: string): IRawStyle {\n  return {\n    fontFamily: fontFamily,\n    MozOsxFontSmoothing: 'grayscale',\n    WebkitFontSmoothing: 'antialiased',\n    fontSize: size,\n    fontWeight: weight,\n  };\n}\n\nexport function createFontStyles(localeCode: string | null): IFontStyles {\n  const localizedFont = _getLocalizedFontFamily(localeCode);\n  const fontFamilyWithFallback = _fontFamilyWithFallbacks(localizedFont);\n\n  const fontStyles = {\n    tiny: _createFont(FontSizes.mini, FontWeights.regular, fontFamilyWithFallback),\n    xSmall: _createFont(FontSizes.xSmall, FontWeights.regular, fontFamilyWithFallback),\n    small: _createFont(FontSizes.small, FontWeights.regular, fontFamilyWithFallback),\n    smallPlus: _createFont(FontSizes.smallPlus, FontWeights.regular, fontFamilyWithFallback),\n    medium: _createFont(FontSizes.medium, FontWeights.regular, fontFamilyWithFallback),\n    mediumPlus: _createFont(FontSizes.mediumPlus, FontWeights.regular, fontFamilyWithFallback),\n    large: _createFont(FontSizes.large, FontWeights.regular, fontFamilyWithFallback),\n    xLarge: _createFont(FontSizes.xLarge, FontWeights.semibold, fontFamilyWithFallback),\n    xLargePlus: _createFont(FontSizes.xLargePlus, FontWeights.semibold, fontFamilyWithFallback),\n    xxLarge: _createFont(FontSizes.xxLarge, FontWeights.semibold, fontFamilyWithFallback),\n    xxLargePlus: _createFont(FontSizes.xxLargePlus, FontWeights.semibold, fontFamilyWithFallback),\n    superLarge: _createFont(FontSizes.superLarge, FontWeights.semibold, fontFamilyWithFallback),\n    mega: _createFont(FontSizes.mega, FontWeights.semibold, fontFamilyWithFallback),\n  };\n\n  return fontStyles;\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}