{"ast":null,"code":"import { __assign, __extends, __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Icon, FontIcon } from '../../Icon';\nimport { initializeComponentRef, EventGroup, Async, classNamesFunction, composeRenderFunction } from '../../Utilities';\nimport { ColumnActionsMode } from './DetailsList.types';\nimport { DEFAULT_CELL_STYLE_PROPS } from './DetailsRow.styles';\nvar MOUSEDOWN_PRIMARY_BUTTON = 0; // for mouse down event we are using ev.button property, 0 means left button\n\nvar getClassNames = classNamesFunction();\nvar TRANSITION_DURATION_DRAG = 200; // ms\n\nvar TRANSITION_DURATION_DROP = 1500; // ms\n\nvar CLASSNAME_ADD_INTERVAL = 20; // ms\n\nvar defaultOnRenderHeader = function (classNames) {\n  return function (props) {\n    if (!props) {\n      return null;\n    }\n\n    if (props.column.isIconOnly) {\n      return React.createElement(\"span\", {\n        className: classNames.accessibleLabel\n      }, props.column.name);\n    }\n\n    return React.createElement(React.Fragment, null, props.column.name);\n  };\n};\n/**\n * Component for rendering columns in a `DetailsList`.\n *\n * {@docCategory DetailsList}\n */\n\n\nvar DetailsColumnBase =\n/** @class */\nfunction (_super) {\n  __extends(DetailsColumnBase, _super);\n\n  function DetailsColumnBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._root = React.createRef();\n\n    _this._onRenderFilterIcon = function (classNames) {\n      return function (props) {\n        var columnProps = props.columnProps,\n            iconProps = __rest(props, [\"columnProps\"]);\n\n        var IconComponent = (columnProps === null || columnProps === void 0 ? void 0 : columnProps.useFastIcons) ? FontIcon : Icon;\n        return React.createElement(IconComponent, __assign({}, iconProps));\n      };\n    };\n\n    _this._onRenderColumnHeaderTooltip = function (tooltipHostProps) {\n      return React.createElement(\"span\", {\n        className: tooltipHostProps.hostClassName\n      }, tooltipHostProps.children);\n    };\n\n    _this._onColumnClick = function (ev) {\n      var _a = _this.props,\n          onColumnClick = _a.onColumnClick,\n          column = _a.column;\n\n      if (column.columnActionsMode === ColumnActionsMode.disabled) {\n        return;\n      }\n\n      if (column.onColumnClick) {\n        column.onColumnClick(ev, column);\n      }\n\n      if (onColumnClick) {\n        onColumnClick(ev, column);\n      }\n    };\n\n    _this._onDragStart = function (item, itemIndex, selectedItems, event) {\n      var classNames = _this._classNames;\n\n      if (itemIndex) {\n        _this._updateHeaderDragInfo(itemIndex);\n\n        _this._root.current.classList.add(classNames.borderWhileDragging);\n\n        _this._async.setTimeout(function () {\n          if (_this._root.current) {\n            _this._root.current.classList.add(classNames.noBorderWhileDragging);\n          }\n        }, CLASSNAME_ADD_INTERVAL);\n      }\n    };\n\n    _this._onDragEnd = function (item, event) {\n      var classNames = _this._classNames;\n\n      if (event) {\n        _this._updateHeaderDragInfo(-1, event);\n      }\n\n      _this._root.current.classList.remove(classNames.borderWhileDragging);\n\n      _this._root.current.classList.remove(classNames.noBorderWhileDragging);\n    };\n\n    _this._updateHeaderDragInfo = function (itemIndex, event) {\n      /* eslint-disable deprecation/deprecation */\n      if (_this.props.setDraggedItemIndex) {\n        _this.props.setDraggedItemIndex(itemIndex);\n      }\n      /* eslint-enable deprecation/deprecation */\n\n\n      if (_this.props.updateDragInfo) {\n        _this.props.updateDragInfo({\n          itemIndex: itemIndex\n        }, event);\n      }\n    };\n\n    _this._onColumnContextMenu = function (ev) {\n      var _a = _this.props,\n          onColumnContextMenu = _a.onColumnContextMenu,\n          column = _a.column;\n\n      if (column.onColumnContextMenu) {\n        column.onColumnContextMenu(column, ev);\n        ev.preventDefault();\n      }\n\n      if (onColumnContextMenu) {\n        onColumnContextMenu(column, ev);\n        ev.preventDefault();\n      }\n    };\n\n    _this._onRootMouseDown = function (ev) {\n      var isDraggable = _this.props.isDraggable; // Ignore anything except the primary button.\n\n      if (isDraggable && ev.button === MOUSEDOWN_PRIMARY_BUTTON) {\n        ev.stopPropagation();\n      }\n    };\n\n    initializeComponentRef(_this);\n    _this._async = new Async(_this);\n    _this._events = new EventGroup(_this);\n    return _this;\n  }\n\n  DetailsColumnBase.prototype.render = function () {\n    var _a = this.props,\n        column = _a.column,\n        parentId = _a.parentId,\n        isDraggable = _a.isDraggable,\n        styles = _a.styles,\n        theme = _a.theme,\n        _b = _a.cellStyleProps,\n        cellStyleProps = _b === void 0 ? DEFAULT_CELL_STYLE_PROPS : _b,\n        _c = _a.useFastIcons,\n        useFastIcons = _c === void 0 ? true : _c;\n    var _d = this.props.onRenderColumnHeaderTooltip,\n        onRenderColumnHeaderTooltip = _d === void 0 ? this._onRenderColumnHeaderTooltip : _d;\n    this._classNames = getClassNames(styles, {\n      theme: theme,\n      headerClassName: column.headerClassName,\n      iconClassName: column.iconClassName,\n      isActionable: column.columnActionsMode !== ColumnActionsMode.disabled,\n      isEmpty: !column.name,\n      isIconVisible: column.isSorted || column.isGrouped || column.isFiltered,\n      isPadded: column.isPadded,\n      isIconOnly: column.isIconOnly,\n      cellStyleProps: cellStyleProps,\n      transitionDurationDrag: TRANSITION_DURATION_DRAG,\n      transitionDurationDrop: TRANSITION_DURATION_DROP\n    });\n    var classNames = this._classNames;\n    var IconComponent = useFastIcons ? FontIcon : Icon;\n    var onRenderFilterIcon = column.onRenderFilterIcon ? composeRenderFunction(column.onRenderFilterIcon, this._onRenderFilterIcon(this._classNames)) : this._onRenderFilterIcon(this._classNames);\n    var onRenderHeader = column.onRenderHeader ? composeRenderFunction(column.onRenderHeader, defaultOnRenderHeader(this._classNames)) : defaultOnRenderHeader(this._classNames);\n    var hasInnerButton = column.columnActionsMode !== ColumnActionsMode.disabled && (column.onColumnClick !== undefined || this.props.onColumnClick !== undefined);\n    var accNameDescription = {\n      'aria-label': column.ariaLabel ? column.ariaLabel : column.isIconOnly ? column.name : undefined,\n      'aria-labelledby': column.ariaLabel || column.isIconOnly ? undefined : parentId + \"-\" + column.key + \"-name\",\n      'aria-describedby': !this.props.onRenderColumnHeaderTooltip && this._hasAccessibleDescription() ? parentId + \"-\" + column.key + \"-tooltip\" : undefined\n    };\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", __assign({\n      key: column.key,\n      ref: this._root,\n      role: 'columnheader'\n    }, !hasInnerButton && accNameDescription, {\n      \"aria-sort\": column.isSorted ? column.isSortedDescending ? 'descending' : 'ascending' : 'none',\n      \"data-is-focusable\": !hasInnerButton && column.columnActionsMode !== ColumnActionsMode.disabled ? 'true' : undefined,\n      className: classNames.root,\n      \"data-is-draggable\": isDraggable,\n      draggable: isDraggable,\n      style: {\n        width: column.calculatedWidth + cellStyleProps.cellLeftPadding + cellStyleProps.cellRightPadding + (column.isPadded ? cellStyleProps.cellExtraRightPadding : 0)\n      },\n      \"data-automationid\": 'ColumnsHeaderColumn',\n      \"data-item-key\": column.key\n    }), isDraggable && React.createElement(IconComponent, {\n      iconName: \"GripperBarVertical\",\n      className: classNames.gripperBarVerticalStyle\n    }), onRenderColumnHeaderTooltip({\n      hostClassName: classNames.cellTooltip,\n      id: parentId + \"-\" + column.key + \"-tooltip\",\n      setAriaDescribedBy: false,\n      column: column,\n      content: column.columnActionsMode !== ColumnActionsMode.disabled ? column.ariaLabel : '',\n      children: React.createElement(\"span\", __assign({\n        id: parentId + \"-\" + column.key,\n        className: classNames.cellTitle,\n        \"data-is-focusable\": hasInnerButton && column.columnActionsMode !== ColumnActionsMode.disabled ? 'true' : undefined,\n        role: hasInnerButton ? 'button' : undefined\n      }, hasInnerButton && accNameDescription, {\n        onContextMenu: this._onColumnContextMenu,\n        onClick: this._onColumnClick,\n        \"aria-haspopup\": column.columnActionsMode === ColumnActionsMode.hasDropdown ? 'menu' : undefined,\n        \"aria-expanded\": column.columnActionsMode === ColumnActionsMode.hasDropdown ? !!column.isMenuOpen : undefined\n      }), React.createElement(\"span\", {\n        id: parentId + \"-\" + column.key + \"-name\",\n        className: classNames.cellName\n      }, (column.iconName || column.iconClassName) && React.createElement(IconComponent, {\n        className: classNames.iconClassName,\n        iconName: column.iconName\n      }), onRenderHeader(this.props)), column.isFiltered && React.createElement(IconComponent, {\n        className: classNames.nearIcon,\n        iconName: \"Filter\"\n      }), column.isSorted && React.createElement(IconComponent, {\n        className: classNames.sortIcon,\n        iconName: column.isSortedDescending ? 'SortDown' : 'SortUp'\n      }), column.isGrouped && React.createElement(IconComponent, {\n        className: classNames.nearIcon,\n        iconName: \"GroupedDescending\"\n      }), column.columnActionsMode === ColumnActionsMode.hasDropdown && !column.isIconOnly && onRenderFilterIcon({\n        'aria-hidden': true,\n        columnProps: this.props,\n        className: classNames.filterChevron,\n        iconName: 'ChevronDown'\n      }))\n    }, this._onRenderColumnHeaderTooltip)), !this.props.onRenderColumnHeaderTooltip ? this._renderAccessibleDescription() : null);\n  };\n\n  DetailsColumnBase.prototype.componentDidMount = function () {\n    var _this = this;\n\n    if (this.props.dragDropHelper && this.props.isDraggable) {\n      this._addDragDropHandling();\n    }\n\n    var classNames = this._classNames;\n\n    if (this.props.isDropped) {\n      if (this._root.current) {\n        this._root.current.classList.add(classNames.borderAfterDropping);\n\n        this._async.setTimeout(function () {\n          if (_this._root.current) {\n            _this._root.current.classList.add(classNames.noBorderAfterDropping);\n          }\n        }, CLASSNAME_ADD_INTERVAL);\n      }\n\n      this._async.setTimeout(function () {\n        if (_this._root.current) {\n          _this._root.current.classList.remove(classNames.borderAfterDropping);\n\n          _this._root.current.classList.remove(classNames.noBorderAfterDropping);\n        }\n      }, TRANSITION_DURATION_DROP + CLASSNAME_ADD_INTERVAL);\n    }\n  };\n\n  DetailsColumnBase.prototype.componentWillUnmount = function () {\n    if (this._dragDropSubscription) {\n      this._dragDropSubscription.dispose();\n\n      delete this._dragDropSubscription;\n    }\n\n    this._async.dispose();\n\n    this._events.dispose();\n  };\n\n  DetailsColumnBase.prototype.componentDidUpdate = function () {\n    if (!this._dragDropSubscription && this.props.dragDropHelper && this.props.isDraggable) {\n      this._addDragDropHandling();\n    }\n\n    if (this._dragDropSubscription && !this.props.isDraggable) {\n      this._dragDropSubscription.dispose();\n\n      this._events.off(this._root.current, 'mousedown');\n\n      delete this._dragDropSubscription;\n    }\n  };\n\n  DetailsColumnBase.prototype._getColumnDragDropOptions = function () {\n    var _this = this;\n\n    var columnIndex = this.props.columnIndex;\n    var options = {\n      selectionIndex: columnIndex,\n      context: {\n        data: columnIndex,\n        index: columnIndex\n      },\n      canDrag: function () {\n        return _this.props.isDraggable;\n      },\n      canDrop: function () {\n        return false;\n      },\n      onDragStart: this._onDragStart,\n      updateDropState: function () {\n        return undefined;\n      },\n      onDrop: function () {\n        return undefined;\n      },\n      onDragEnd: this._onDragEnd\n    };\n    return options;\n  };\n\n  DetailsColumnBase.prototype._hasAccessibleDescription = function () {\n    var column = this.props.column;\n    return !!(column.filterAriaLabel || column.sortAscendingAriaLabel || column.sortDescendingAriaLabel || column.groupAriaLabel);\n  };\n\n  DetailsColumnBase.prototype._renderAccessibleDescription = function () {\n    var _a = this.props,\n        column = _a.column,\n        parentId = _a.parentId;\n    var classNames = this._classNames;\n    return this._hasAccessibleDescription() && !this.props.onRenderColumnHeaderTooltip ? React.createElement(\"label\", {\n      key: column.key + \"_label\",\n      id: parentId + \"-\" + column.key + \"-tooltip\",\n      className: classNames.accessibleLabel,\n      hidden: true\n    }, column.isFiltered && column.filterAriaLabel || null, column.isSorted && (column.isSortedDescending ? column.sortDescendingAriaLabel : column.sortAscendingAriaLabel) || null, column.isGrouped && column.groupAriaLabel || null) : null;\n  };\n\n  DetailsColumnBase.prototype._addDragDropHandling = function () {\n    this._dragDropSubscription = this.props.dragDropHelper.subscribe(this._root.current, this._events, this._getColumnDragDropOptions()); // We need to use native on this to prevent MarqueeSelection from handling the event before us.\n\n    this._events.on(this._root.current, 'mousedown', this._onRootMouseDown);\n  };\n\n  return DetailsColumnBase;\n}(React.Component);\n\nexport { DetailsColumnBase };","map":{"version":3,"sources":["components/DetailsList/DetailsColumn.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Icon, FontIcon } from '../../Icon';\nimport { initializeComponentRef, EventGroup, Async, classNamesFunction, composeRenderFunction } from '../../Utilities';\nimport { ColumnActionsMode } from './DetailsList.types';\nimport { DEFAULT_CELL_STYLE_PROPS } from './DetailsRow.styles';\nimport type { IProcessedStyleSet } from '../../Styling';\nimport type { IDisposable } from '../../Utilities';\nimport type { IDragDropOptions } from '../../DragDrop';\nimport type {\n  IDetailsColumnStyleProps,\n  IDetailsColumnProps,\n  IDetailsColumnStyles,\n  IDetailsColumnRenderTooltipProps,\n  IDetailsColumnFilterIconProps,\n} from './DetailsColumn.types';\n\nconst MOUSEDOWN_PRIMARY_BUTTON = 0; // for mouse down event we are using ev.button property, 0 means left button\n\nconst getClassNames = classNamesFunction<IDetailsColumnStyleProps, IDetailsColumnStyles>();\nconst TRANSITION_DURATION_DRAG = 200; // ms\nconst TRANSITION_DURATION_DROP = 1500; // ms\nconst CLASSNAME_ADD_INTERVAL = 20; // ms\n\nconst defaultOnRenderHeader = (classNames: IProcessedStyleSet<IDetailsColumnStyles>) => (\n  props?: IDetailsColumnProps,\n): JSX.Element | null => {\n  if (!props) {\n    return null;\n  }\n\n  if (props.column.isIconOnly) {\n    return <span className={classNames.accessibleLabel}>{props.column.name}</span>;\n  }\n\n  return <>{props.column.name}</>;\n};\n\n/**\n * Component for rendering columns in a `DetailsList`.\n *\n * {@docCategory DetailsList}\n */\nexport class DetailsColumnBase extends React.Component<IDetailsColumnProps> {\n  private _async: Async;\n  private _events: EventGroup;\n  private _root = React.createRef<HTMLDivElement>();\n  private _dragDropSubscription?: IDisposable;\n  private _classNames: IProcessedStyleSet<IDetailsColumnStyles>;\n\n  constructor(props: IDetailsColumnProps) {\n    super(props);\n    initializeComponentRef(this);\n    this._async = new Async(this);\n    this._events = new EventGroup(this);\n  }\n\n  public render(): JSX.Element {\n    const {\n      column,\n      parentId,\n      isDraggable,\n      styles,\n      theme,\n      cellStyleProps = DEFAULT_CELL_STYLE_PROPS,\n      useFastIcons = true,\n    } = this.props;\n    const { onRenderColumnHeaderTooltip = this._onRenderColumnHeaderTooltip } = this.props;\n\n    this._classNames = getClassNames(styles, {\n      theme: theme!,\n      headerClassName: column.headerClassName,\n      iconClassName: column.iconClassName,\n      isActionable: column.columnActionsMode !== ColumnActionsMode.disabled,\n      isEmpty: !column.name,\n      isIconVisible: column.isSorted || column.isGrouped || column.isFiltered,\n      isPadded: column.isPadded,\n      isIconOnly: column.isIconOnly,\n      cellStyleProps,\n      transitionDurationDrag: TRANSITION_DURATION_DRAG,\n      transitionDurationDrop: TRANSITION_DURATION_DROP,\n    });\n\n    const classNames = this._classNames;\n    const IconComponent = useFastIcons ? FontIcon : Icon;\n\n    const onRenderFilterIcon = column.onRenderFilterIcon\n      ? composeRenderFunction(column.onRenderFilterIcon, this._onRenderFilterIcon(this._classNames))\n      : this._onRenderFilterIcon(this._classNames);\n\n    const onRenderHeader = column.onRenderHeader\n      ? composeRenderFunction(column.onRenderHeader, defaultOnRenderHeader(this._classNames))\n      : defaultOnRenderHeader(this._classNames);\n\n    const hasInnerButton =\n      column.columnActionsMode !== ColumnActionsMode.disabled &&\n      (column.onColumnClick !== undefined || this.props.onColumnClick !== undefined);\n    const accNameDescription = {\n      'aria-label': column.ariaLabel ? column.ariaLabel : column.isIconOnly ? column.name : undefined,\n      'aria-labelledby': column.ariaLabel || column.isIconOnly ? undefined : `${parentId}-${column.key}-name`,\n      'aria-describedby':\n        !this.props.onRenderColumnHeaderTooltip && this._hasAccessibleDescription()\n          ? `${parentId}-${column.key}-tooltip`\n          : undefined,\n    };\n\n    return (\n      <>\n        <div\n          key={column.key}\n          ref={this._root}\n          role={'columnheader'}\n          {...(!hasInnerButton && accNameDescription)}\n          aria-sort={column.isSorted ? (column.isSortedDescending ? 'descending' : 'ascending') : 'none'}\n          // when the column is not disabled and has no inner button, this node should be in the focus order\n          data-is-focusable={\n            !hasInnerButton && column.columnActionsMode !== ColumnActionsMode.disabled ? 'true' : undefined\n          }\n          className={classNames.root}\n          data-is-draggable={isDraggable}\n          draggable={isDraggable}\n          style={{\n            width:\n              column.calculatedWidth! +\n              cellStyleProps.cellLeftPadding +\n              cellStyleProps.cellRightPadding +\n              (column.isPadded ? cellStyleProps.cellExtraRightPadding : 0),\n          }}\n          data-automationid={'ColumnsHeaderColumn'}\n          data-item-key={column.key}\n        >\n          {isDraggable && (\n            <IconComponent iconName=\"GripperBarVertical\" className={classNames.gripperBarVerticalStyle} />\n          )}\n          {onRenderColumnHeaderTooltip(\n            {\n              hostClassName: classNames.cellTooltip,\n              id: `${parentId}-${column.key}-tooltip`,\n              setAriaDescribedBy: false,\n              column,\n              content: column.columnActionsMode !== ColumnActionsMode.disabled ? column.ariaLabel : '',\n              children: (\n                <span\n                  id={`${parentId}-${column.key}`}\n                  className={classNames.cellTitle}\n                  // this node should only be focusable when it is a button\n                  data-is-focusable={\n                    hasInnerButton && column.columnActionsMode !== ColumnActionsMode.disabled ? 'true' : undefined\n                  }\n                  role={hasInnerButton ? 'button' : undefined}\n                  {...(hasInnerButton && accNameDescription)}\n                  onContextMenu={this._onColumnContextMenu}\n                  onClick={this._onColumnClick}\n                  aria-haspopup={column.columnActionsMode === ColumnActionsMode.hasDropdown ? 'menu' : undefined}\n                  aria-expanded={\n                    column.columnActionsMode === ColumnActionsMode.hasDropdown ? !!column.isMenuOpen : undefined\n                  }\n                >\n                  <span id={`${parentId}-${column.key}-name`} className={classNames.cellName}>\n                    {(column.iconName || column.iconClassName) && (\n                      <IconComponent className={classNames.iconClassName} iconName={column.iconName} />\n                    )}\n\n                    {onRenderHeader(this.props)}\n                  </span>\n\n                  {column.isFiltered && <IconComponent className={classNames.nearIcon} iconName=\"Filter\" />}\n\n                  {column.isSorted && (\n                    <IconComponent\n                      className={classNames.sortIcon}\n                      iconName={column.isSortedDescending ? 'SortDown' : 'SortUp'}\n                    />\n                  )}\n\n                  {column.isGrouped && <IconComponent className={classNames.nearIcon} iconName=\"GroupedDescending\" />}\n\n                  {column.columnActionsMode === ColumnActionsMode.hasDropdown &&\n                    !column.isIconOnly &&\n                    onRenderFilterIcon({\n                      'aria-hidden': true,\n                      columnProps: this.props,\n                      className: classNames.filterChevron,\n                      iconName: 'ChevronDown',\n                    })}\n                </span>\n              ),\n            },\n            this._onRenderColumnHeaderTooltip,\n          )}\n        </div>\n        {!this.props.onRenderColumnHeaderTooltip ? this._renderAccessibleDescription() : null}\n      </>\n    );\n  }\n\n  public componentDidMount(): void {\n    if (this.props.dragDropHelper && this.props.isDraggable) {\n      this._addDragDropHandling();\n    }\n\n    const classNames = this._classNames;\n\n    if (this.props.isDropped) {\n      if (this._root.current) {\n        this._root.current.classList.add(classNames.borderAfterDropping);\n\n        this._async.setTimeout(() => {\n          if (this._root.current) {\n            this._root.current.classList.add(classNames.noBorderAfterDropping);\n          }\n        }, CLASSNAME_ADD_INTERVAL);\n      }\n\n      this._async.setTimeout(() => {\n        if (this._root.current) {\n          this._root.current.classList.remove(classNames.borderAfterDropping);\n          this._root.current.classList.remove(classNames.noBorderAfterDropping);\n        }\n      }, TRANSITION_DURATION_DROP + CLASSNAME_ADD_INTERVAL);\n    }\n  }\n\n  public componentWillUnmount(): void {\n    if (this._dragDropSubscription) {\n      this._dragDropSubscription.dispose();\n      delete this._dragDropSubscription;\n    }\n    this._async.dispose();\n    this._events.dispose();\n  }\n\n  public componentDidUpdate(): void {\n    if (!this._dragDropSubscription && this.props.dragDropHelper && this.props.isDraggable) {\n      this._addDragDropHandling();\n    }\n\n    if (this._dragDropSubscription && !this.props.isDraggable) {\n      this._dragDropSubscription.dispose();\n      this._events.off(this._root.current, 'mousedown');\n      delete this._dragDropSubscription;\n    }\n  }\n\n  private _onRenderFilterIcon = (classNames: IProcessedStyleSet<IDetailsColumnStyles>) => (\n    props: IDetailsColumnFilterIconProps,\n  ): JSX.Element => {\n    const { columnProps, ...iconProps } = props;\n    const IconComponent = columnProps?.useFastIcons ? FontIcon : Icon;\n\n    return <IconComponent {...iconProps} />;\n  };\n\n  private _onRenderColumnHeaderTooltip = (tooltipHostProps: IDetailsColumnRenderTooltipProps): JSX.Element => {\n    return <span className={tooltipHostProps.hostClassName}>{tooltipHostProps.children}</span>;\n  };\n\n  private _onColumnClick = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { onColumnClick, column } = this.props;\n\n    if (column.columnActionsMode === ColumnActionsMode.disabled) {\n      return;\n    }\n\n    if (column.onColumnClick) {\n      column.onColumnClick(ev, column);\n    }\n\n    if (onColumnClick) {\n      onColumnClick(ev, column);\n    }\n  };\n\n  private _getColumnDragDropOptions(): IDragDropOptions {\n    const { columnIndex } = this.props;\n    const options = {\n      selectionIndex: columnIndex,\n      context: { data: columnIndex, index: columnIndex },\n      canDrag: () => this.props.isDraggable!,\n      canDrop: () => false,\n      onDragStart: this._onDragStart,\n      updateDropState: () => undefined,\n      onDrop: () => undefined,\n      onDragEnd: this._onDragEnd,\n    };\n    return options;\n  }\n\n  private _hasAccessibleDescription(): boolean {\n    const { column } = this.props;\n\n    return !!(\n      column.filterAriaLabel ||\n      column.sortAscendingAriaLabel ||\n      column.sortDescendingAriaLabel ||\n      column.groupAriaLabel\n    );\n  }\n\n  private _renderAccessibleDescription(): JSX.Element | null {\n    const { column, parentId } = this.props;\n    const classNames = this._classNames;\n\n    return this._hasAccessibleDescription() && !this.props.onRenderColumnHeaderTooltip ? (\n      <label\n        key={`${column.key}_label`}\n        id={`${parentId}-${column.key}-tooltip`}\n        className={classNames.accessibleLabel}\n        hidden\n      >\n        {(column.isFiltered && column.filterAriaLabel) || null}\n        {(column.isSorted &&\n          (column.isSortedDescending ? column.sortDescendingAriaLabel : column.sortAscendingAriaLabel)) ||\n          null}\n        {(column.isGrouped && column.groupAriaLabel) || null}\n      </label>\n    ) : null;\n  }\n\n  private _onDragStart = (item?: any, itemIndex?: number, selectedItems?: any[], event?: MouseEvent): void => {\n    const classNames = this._classNames;\n    if (itemIndex) {\n      this._updateHeaderDragInfo(itemIndex);\n      this._root.current!.classList.add(classNames.borderWhileDragging);\n      this._async.setTimeout(() => {\n        if (this._root.current) {\n          this._root.current.classList.add(classNames.noBorderWhileDragging);\n        }\n      }, CLASSNAME_ADD_INTERVAL);\n    }\n  };\n\n  private _onDragEnd = (item?: any, event?: MouseEvent): void => {\n    const classNames = this._classNames;\n    if (event) {\n      this._updateHeaderDragInfo(-1, event);\n    }\n    this._root.current!.classList.remove(classNames.borderWhileDragging);\n    this._root.current!.classList.remove(classNames.noBorderWhileDragging);\n  };\n\n  private _updateHeaderDragInfo = (itemIndex: number, event?: MouseEvent) => {\n    /* eslint-disable deprecation/deprecation */\n    if (this.props.setDraggedItemIndex) {\n      this.props.setDraggedItemIndex(itemIndex);\n    }\n    /* eslint-enable deprecation/deprecation */\n    if (this.props.updateDragInfo) {\n      this.props.updateDragInfo({ itemIndex }, event);\n    }\n  };\n\n  private _onColumnContextMenu = (ev: React.MouseEvent<HTMLElement>): void => {\n    const { onColumnContextMenu, column } = this.props;\n    if (column.onColumnContextMenu) {\n      column.onColumnContextMenu(column, ev);\n      ev.preventDefault();\n    }\n    if (onColumnContextMenu) {\n      onColumnContextMenu(column, ev);\n      ev.preventDefault();\n    }\n  };\n\n  private _onRootMouseDown = (ev: MouseEvent): void => {\n    const { isDraggable } = this.props;\n    // Ignore anything except the primary button.\n    if (isDraggable && ev.button === MOUSEDOWN_PRIMARY_BUTTON) {\n      ev.stopPropagation();\n    }\n  };\n\n  private _addDragDropHandling() {\n    this._dragDropSubscription = this.props.dragDropHelper!.subscribe(\n      this._root.current!,\n      this._events,\n      this._getColumnDragDropOptions(),\n    );\n\n    // We need to use native on this to prevent MarqueeSelection from handling the event before us.\n    this._events.on(this._root.current, 'mousedown', this._onRootMouseDown);\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}