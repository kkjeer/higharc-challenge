{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { hasSubmenu, getIsChecked } from '../../utilities/contextualMenu/index';\nimport { getRTL, initializeComponentRef } from '../../Utilities';\nimport { Icon } from '../../Icon';\n\nvar defaultIconRenderer = function (props) {\n  var item = props.item,\n      classNames = props.classNames;\n  var iconProps = item.iconProps;\n  return React.createElement(Icon, __assign({}, iconProps, {\n    className: classNames.icon\n  }));\n};\n\nvar renderItemIcon = function (props) {\n  var item = props.item,\n      hasIcons = props.hasIcons;\n\n  if (!hasIcons) {\n    return null;\n  }\n\n  if (item.onRenderIcon) {\n    return item.onRenderIcon(props, defaultIconRenderer);\n  }\n\n  return defaultIconRenderer(props);\n};\n\nvar renderCheckMarkIcon = function (_a) {\n  var onCheckmarkClick = _a.onCheckmarkClick,\n      item = _a.item,\n      classNames = _a.classNames;\n  var isItemChecked = getIsChecked(item);\n\n  if (onCheckmarkClick) {\n    // Ensures that the item is passed as the first argument to the checkmark click callback.\n    var onClick = function (e) {\n      return onCheckmarkClick(item, e);\n    };\n\n    return React.createElement(Icon, {\n      iconName: item.canCheck !== false && isItemChecked ? 'CheckMark' : '',\n      className: classNames.checkmarkIcon,\n      // eslint-disable-next-line react/jsx-no-bind\n      onClick: onClick\n    });\n  }\n\n  return null;\n};\n\nvar renderItemName = function (_a) {\n  var item = _a.item,\n      classNames = _a.classNames;\n  /* eslint-disable deprecation/deprecation */\n\n  if (item.text || item.name) {\n    return React.createElement(\"span\", {\n      className: classNames.label\n    }, item.text || item.name);\n  }\n  /* eslint-enable deprecation/deprecation */\n\n\n  return null;\n};\n\nvar renderSecondaryText = function (_a) {\n  var item = _a.item,\n      classNames = _a.classNames;\n\n  if (item.secondaryText) {\n    return React.createElement(\"span\", {\n      className: classNames.secondaryText\n    }, item.secondaryText);\n  }\n\n  return null;\n};\n\nvar renderSubMenuIcon = function (_a) {\n  var item = _a.item,\n      classNames = _a.classNames,\n      theme = _a.theme;\n\n  if (hasSubmenu(item)) {\n    return React.createElement(Icon, __assign({\n      iconName: getRTL(theme) ? 'ChevronLeft' : 'ChevronRight'\n    }, item.submenuIconProps, {\n      className: classNames.subMenuIcon\n    }));\n  }\n\n  return null;\n};\n\nvar ContextualMenuItemBase =\n/** @class */\nfunction (_super) {\n  __extends(ContextualMenuItemBase, _super);\n\n  function ContextualMenuItemBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.openSubMenu = function () {\n      var _a = _this.props,\n          item = _a.item,\n          openSubMenu = _a.openSubMenu,\n          getSubmenuTarget = _a.getSubmenuTarget;\n\n      if (getSubmenuTarget) {\n        var submenuTarget = getSubmenuTarget();\n\n        if (hasSubmenu(item) && openSubMenu && submenuTarget) {\n          openSubMenu(item, submenuTarget);\n        }\n      }\n    };\n\n    _this.dismissSubMenu = function () {\n      var _a = _this.props,\n          item = _a.item,\n          dismissSubMenu = _a.dismissSubMenu;\n\n      if (hasSubmenu(item) && dismissSubMenu) {\n        dismissSubMenu();\n      }\n    };\n\n    _this.dismissMenu = function (dismissAll) {\n      var dismissMenu = _this.props.dismissMenu;\n\n      if (dismissMenu) {\n        dismissMenu(undefined\n        /* ev */\n        , dismissAll);\n      }\n    };\n\n    initializeComponentRef(_this);\n    return _this;\n  }\n\n  ContextualMenuItemBase.prototype.render = function () {\n    var _a = this.props,\n        item = _a.item,\n        classNames = _a.classNames;\n    var renderContent = item.onRenderContent || this._renderLayout;\n    return React.createElement(\"div\", {\n      className: item.split ? classNames.linkContentMenu : classNames.linkContent\n    }, renderContent(this.props, {\n      renderCheckMarkIcon: renderCheckMarkIcon,\n      renderItemIcon: renderItemIcon,\n      renderItemName: renderItemName,\n      renderSecondaryText: renderSecondaryText,\n      renderSubMenuIcon: renderSubMenuIcon\n    }));\n  };\n\n  ContextualMenuItemBase.prototype._renderLayout = function (props, defaultRenders) {\n    return React.createElement(React.Fragment, null, defaultRenders.renderCheckMarkIcon(props), defaultRenders.renderItemIcon(props), defaultRenders.renderItemName(props), defaultRenders.renderSecondaryText(props), defaultRenders.renderSubMenuIcon(props));\n  };\n\n  return ContextualMenuItemBase;\n}(React.Component);\n\nexport { ContextualMenuItemBase };","map":{"version":3,"sources":["components/ContextualMenu/ContextualMenuItem.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { hasSubmenu, getIsChecked } from '../../utilities/contextualMenu/index';\nimport { getRTL, initializeComponentRef } from '../../Utilities';\nimport { Icon } from '../../Icon';\nimport type { IContextualMenuItemProps, IContextualMenuItemRenderFunctions } from './ContextualMenuItem.types';\n\nconst defaultIconRenderer = (props: IContextualMenuItemProps) => {\n  const { item, classNames } = props;\n  const { iconProps } = item;\n  return <Icon {...iconProps} className={classNames.icon} />;\n};\n\nconst renderItemIcon = (props: IContextualMenuItemProps) => {\n  const { item, hasIcons } = props;\n  if (!hasIcons) {\n    return null;\n  }\n\n  if (item.onRenderIcon) {\n    return item.onRenderIcon(props, defaultIconRenderer);\n  }\n\n  return defaultIconRenderer(props);\n};\n\nconst renderCheckMarkIcon = ({ onCheckmarkClick, item, classNames }: IContextualMenuItemProps) => {\n  const isItemChecked = getIsChecked(item);\n  if (onCheckmarkClick) {\n    // Ensures that the item is passed as the first argument to the checkmark click callback.\n    const onClick = (e: React.MouseEvent<HTMLElement>) => onCheckmarkClick(item, e);\n\n    return (\n      <Icon\n        iconName={item.canCheck !== false && isItemChecked ? 'CheckMark' : ''}\n        className={classNames.checkmarkIcon}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={onClick}\n      />\n    );\n  }\n  return null;\n};\n\nconst renderItemName = ({ item, classNames }: IContextualMenuItemProps) => {\n  /* eslint-disable deprecation/deprecation */\n  if (item.text || item.name) {\n    return <span className={classNames.label}>{item.text || item.name}</span>;\n  }\n  /* eslint-enable deprecation/deprecation */\n  return null;\n};\n\nconst renderSecondaryText = ({ item, classNames }: IContextualMenuItemProps) => {\n  if (item.secondaryText) {\n    return <span className={classNames.secondaryText}>{item.secondaryText}</span>;\n  }\n  return null;\n};\n\nconst renderSubMenuIcon = ({ item, classNames, theme }: IContextualMenuItemProps) => {\n  if (hasSubmenu(item)) {\n    return (\n      <Icon\n        iconName={getRTL(theme) ? 'ChevronLeft' : 'ChevronRight'}\n        {...item.submenuIconProps}\n        className={classNames.subMenuIcon}\n      />\n    );\n  }\n  return null;\n};\n\nexport class ContextualMenuItemBase extends React.Component<IContextualMenuItemProps, {}> {\n  constructor(props: IContextualMenuItemProps) {\n    super(props);\n\n    initializeComponentRef(this);\n  }\n\n  public render() {\n    const { item, classNames } = this.props;\n    const renderContent = item.onRenderContent || this._renderLayout;\n\n    return (\n      <div className={item.split ? classNames.linkContentMenu : classNames.linkContent}>\n        {renderContent(this.props, {\n          renderCheckMarkIcon,\n          renderItemIcon,\n          renderItemName,\n          renderSecondaryText,\n          renderSubMenuIcon,\n        })}\n      </div>\n    );\n  }\n\n  public openSubMenu = (): void => {\n    const { item, openSubMenu, getSubmenuTarget } = this.props;\n    if (getSubmenuTarget) {\n      const submenuTarget = getSubmenuTarget();\n      if (hasSubmenu(item) && openSubMenu && submenuTarget) {\n        openSubMenu(item, submenuTarget);\n      }\n    }\n  };\n\n  public dismissSubMenu = (): void => {\n    const { item, dismissSubMenu } = this.props;\n    if (hasSubmenu(item) && dismissSubMenu) {\n      dismissSubMenu();\n    }\n  };\n\n  public dismissMenu = (dismissAll?: boolean): void => {\n    const { dismissMenu } = this.props;\n    if (dismissMenu) {\n      dismissMenu(undefined /* ev */, dismissAll);\n    }\n  };\n\n  private _renderLayout(props: IContextualMenuItemProps, defaultRenders: IContextualMenuItemRenderFunctions) {\n    return (\n      <>\n        {defaultRenders.renderCheckMarkIcon(props)}\n        {defaultRenders.renderItemIcon(props)}\n        {defaultRenders.renderItemName(props)}\n        {defaultRenders.renderSecondaryText(props)}\n        {defaultRenders.renderSubMenuIcon(props)}\n      </>\n    );\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}