{"ast":null,"code":"import * as React from 'react';\nimport { classNamesFunction } from '../../Utilities';\nimport { GroupSpacer } from './GroupSpacer';\nvar getClassNames = classNamesFunction();\nexport var GroupFooterBase = function (props) {\n  var group = props.group,\n      groupLevel = props.groupLevel,\n      footerText = props.footerText,\n      indentWidth = props.indentWidth,\n      styles = props.styles,\n      theme = props.theme;\n  var classNames = getClassNames(styles, {\n    theme: theme\n  });\n\n  if (group && footerText) {\n    return React.createElement(\"div\", {\n      className: classNames.root\n    }, React.createElement(GroupSpacer, {\n      indentWidth: indentWidth,\n      count: groupLevel\n    }), footerText);\n  }\n\n  return null;\n};","map":{"version":3,"sources":["components/GroupedList/GroupFooter.base.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,kBAAT,QAAmC,iBAAnC;AACA,SAAS,WAAT,QAA4B,eAA5B;AAGA,IAAM,aAAa,GAAG,kBAAkB,EAAxC;AAEA,OAAO,IAAM,eAAe,GAA+C,UAAA,KAAA,EAAK;EACtE,IAAA,KAAK,GAAyD,KAAK,CAA9D,KAAL;EAAA,IAAO,UAAU,GAA6C,KAAK,CAAlD,UAAjB;EAAA,IAAmB,UAAU,GAAiC,KAAK,CAAtC,UAA7B;EAAA,IAA+B,WAAW,GAAoB,KAAK,CAAzB,WAA1C;EAAA,IAA4C,MAAM,GAAY,KAAK,CAAjB,MAAlD;EAAA,IAAoD,KAAK,GAAK,KAAK,CAAV,KAAzD;EACR,IAAM,UAAU,GAAG,aAAa,CAAC,MAAD,EAAS;IAAE,KAAK,EAAE;EAAT,CAAT,CAAhC;;EAEA,IAAI,KAAK,IAAI,UAAb,EAAyB;IACvB,OACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;MAAK,SAAS,EAAE,UAAU,CAAC;IAA3B,CAAA,EACE,KAAA,CAAA,aAAA,CAAC,WAAD,EAAY;MAAC,WAAW,EAAE,WAAd;MAA2B,KAAK,EAAE;IAAlC,CAAZ,CADF,EAEG,UAFH,CADF;EAMD;;EAED,OAAO,IAAP;AACD,CAdM","sourcesContent":["import * as React from 'react';\nimport { classNamesFunction } from '../../Utilities';\nimport { GroupSpacer } from './GroupSpacer';\nimport type { IGroupFooterStyleProps, IGroupFooterStyles, IGroupFooterProps } from './GroupFooter.types';\n\nconst getClassNames = classNamesFunction<IGroupFooterStyleProps, IGroupFooterStyles>();\n\nexport const GroupFooterBase: React.FunctionComponent<IGroupFooterProps> = props => {\n  const { group, groupLevel, footerText, indentWidth, styles, theme } = props;\n  const classNames = getClassNames(styles, { theme: theme! });\n\n  if (group && footerText) {\n    return (\n      <div className={classNames.root}>\n        <GroupSpacer indentWidth={indentWidth} count={groupLevel!} />\n        {footerText}\n      </div>\n    );\n  }\n\n  return null;\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}