{"ast":null,"code":"import * as React from 'react';\nimport { css } from '@fluentui/utilities';\nimport { useDocument } from '@fluentui/react-window-provider';\nimport { makeStyles } from './makeStyles'; // eslint-disable-next-line deprecation/deprecation\n\nvar useThemeProviderStyles = makeStyles(function (theme) {\n  var semanticColors = theme.semanticColors,\n      fonts = theme.fonts;\n  return {\n    body: [{\n      color: semanticColors.bodyText,\n      background: semanticColors.bodyBackground,\n      fontFamily: fonts.medium.fontFamily,\n      fontWeight: fonts.medium.fontWeight,\n      fontSize: fonts.medium.fontSize,\n      MozOsxFontSmoothing: fonts.medium.MozOsxFontSmoothing,\n      WebkitFontSmoothing: fonts.medium.WebkitFontSmoothing\n    }]\n  };\n});\n/**\n * Hook to add class to body element.\n */\n\nfunction useApplyClassToBody(state, classesToApply) {\n  var _a;\n\n  var applyTo = state.applyTo;\n  var applyToBody = applyTo === 'body';\n  var body = (_a = useDocument()) === null || _a === void 0 ? void 0 : _a.body;\n  React.useEffect(function () {\n    if (!applyToBody || !body) {\n      return;\n    }\n\n    for (var _i = 0, classesToApply_1 = classesToApply; _i < classesToApply_1.length; _i++) {\n      var classToApply = classesToApply_1[_i];\n\n      if (classToApply) {\n        body.classList.add(classToApply);\n      }\n    }\n\n    return function () {\n      if (!applyToBody || !body) {\n        return;\n      }\n\n      for (var _i = 0, classesToApply_2 = classesToApply; _i < classesToApply_2.length; _i++) {\n        var classToApply = classesToApply_2[_i];\n\n        if (classToApply) {\n          body.classList.remove(classToApply);\n        }\n      }\n    };\n  }, [applyToBody, body, classesToApply]);\n}\n\nexport function useThemeProviderClasses(state) {\n  var classes = useThemeProviderStyles(state);\n  var className = state.className,\n      applyTo = state.applyTo;\n  useApplyClassToBody(state, [classes.root, classes.body]);\n  state.className = css(className, classes.root, applyTo === 'element' && classes.body);\n}","map":{"version":3,"sources":["utilities/ThemeProvider/useThemeProviderClasses.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,GAAT,QAAoB,qBAApB;AACA,SAAS,WAAT,QAA4B,iCAA5B;AACA,SAAS,UAAT,QAA2B,cAA3B,C,CAIA;;AACA,IAAM,sBAAsB,GAAG,UAAU,CAAC,UAAC,KAAD,EAAa;EAC7C,IAAA,cAAc,GAAY,KAAK,CAAjB,cAAd;EAAA,IAAgB,KAAK,GAAK,KAAK,CAAV,KAArB;EAER,OAAO;IACL,IAAI,EAAE,CACJ;MACE,KAAK,EAAE,cAAc,CAAC,QADxB;MAEE,UAAU,EAAE,cAAc,CAAC,cAF7B;MAGE,UAAU,EAAE,KAAK,CAAC,MAAN,CAAa,UAH3B;MAIE,UAAU,EAAE,KAAK,CAAC,MAAN,CAAa,UAJ3B;MAKE,QAAQ,EAAE,KAAK,CAAC,MAAN,CAAa,QALzB;MAME,mBAAmB,EAAE,KAAK,CAAC,MAAN,CAAa,mBANpC;MAOE,mBAAmB,EAAE,KAAK,CAAC,MAAN,CAAa;IAPpC,CADI;EADD,CAAP;AAaD,CAhBwC,CAAzC;AAkBA;;AAEG;;AACH,SAAS,mBAAT,CAA6B,KAA7B,EAAwD,cAAxD,EAAgF;;;EACtE,IAAA,OAAO,GAAK,KAAK,CAAV,OAAP;EAER,IAAM,WAAW,GAAG,OAAO,KAAK,MAAhC;EACA,IAAM,IAAI,GAAG,CAAA,EAAA,GAAA,WAAW,EAAX,MAAa,IAAb,IAAa,EAAA,KAAA,KAAA,CAAb,GAAa,KAAA,CAAb,GAAa,EAAA,CAAE,IAA5B;EAEA,KAAK,CAAC,SAAN,CAAgB,YAAA;IACd,IAAI,CAAC,WAAD,IAAgB,CAAC,IAArB,EAA2B;MACzB;IACD;;IAED,KAA2B,IAAA,EAAA,GAAA,CAAA,EAAA,gBAAA,GAAA,cAA3B,EAA2B,EAAA,GAAA,gBAAA,CAAA,MAA3B,EAA2B,EAAA,EAA3B,EAA2C;MAAtC,IAAM,YAAY,GAAA,gBAAA,CAAA,EAAA,CAAlB;;MACH,IAAI,YAAJ,EAAkB;QAChB,IAAI,CAAC,SAAL,CAAe,GAAf,CAAmB,YAAnB;MACD;IACF;;IAED,OAAO,YAAA;MACL,IAAI,CAAC,WAAD,IAAgB,CAAC,IAArB,EAA2B;QACzB;MACD;;MAED,KAA2B,IAAA,EAAA,GAAA,CAAA,EAAA,gBAAA,GAAA,cAA3B,EAA2B,EAAA,GAAA,gBAAA,CAAA,MAA3B,EAA2B,EAAA,EAA3B,EAA2C;QAAtC,IAAM,YAAY,GAAA,gBAAA,CAAA,EAAA,CAAlB;;QACH,IAAI,YAAJ,EAAkB;UAChB,IAAI,CAAC,SAAL,CAAe,MAAf,CAAsB,YAAtB;QACD;MACF;IACF,CAVD;EAWD,CAtBD,EAsBG,CAAC,WAAD,EAAc,IAAd,EAAoB,cAApB,CAtBH;AAuBD;;AAED,OAAM,SAAU,uBAAV,CAAkC,KAAlC,EAA2D;EAC/D,IAAM,OAAO,GAAG,sBAAsB,CAAC,KAAD,CAAtC;EACQ,IAAA,SAAS,GAAc,KAAK,CAAnB,SAAT;EAAA,IAAW,OAAO,GAAK,KAAK,CAAV,OAAlB;EAER,mBAAmB,CAAC,KAAD,EAAQ,CAAC,OAAO,CAAC,IAAT,EAAe,OAAO,CAAC,IAAvB,CAAR,CAAnB;EAEA,KAAK,CAAC,SAAN,GAAkB,GAAG,CAAC,SAAD,EAAY,OAAO,CAAC,IAApB,EAA0B,OAAO,KAAK,SAAZ,IAAyB,OAAO,CAAC,IAA3D,CAArB;AACD","sourcesContent":["import * as React from 'react';\nimport { css } from '@fluentui/utilities';\nimport { useDocument } from '@fluentui/react-window-provider';\nimport { makeStyles } from './makeStyles';\nimport type { ThemeProviderState } from './ThemeProvider.types';\nimport type { Theme } from '@fluentui/theme';\n\n// eslint-disable-next-line deprecation/deprecation\nconst useThemeProviderStyles = makeStyles((theme: Theme) => {\n  const { semanticColors, fonts } = theme;\n\n  return {\n    body: [\n      {\n        color: semanticColors.bodyText,\n        background: semanticColors.bodyBackground,\n        fontFamily: fonts.medium.fontFamily,\n        fontWeight: fonts.medium.fontWeight,\n        fontSize: fonts.medium.fontSize,\n        MozOsxFontSmoothing: fonts.medium.MozOsxFontSmoothing,\n        WebkitFontSmoothing: fonts.medium.WebkitFontSmoothing,\n      },\n    ],\n  } as Record<string, any>;\n});\n\n/**\n * Hook to add class to body element.\n */\nfunction useApplyClassToBody(state: ThemeProviderState, classesToApply: string[]): void {\n  const { applyTo } = state;\n\n  const applyToBody = applyTo === 'body';\n  const body = useDocument()?.body;\n\n  React.useEffect(() => {\n    if (!applyToBody || !body) {\n      return;\n    }\n\n    for (const classToApply of classesToApply) {\n      if (classToApply) {\n        body.classList.add(classToApply);\n      }\n    }\n\n    return () => {\n      if (!applyToBody || !body) {\n        return;\n      }\n\n      for (const classToApply of classesToApply) {\n        if (classToApply) {\n          body.classList.remove(classToApply);\n        }\n      }\n    };\n  }, [applyToBody, body, classesToApply]);\n}\n\nexport function useThemeProviderClasses(state: ThemeProviderState): void {\n  const classes = useThemeProviderStyles(state);\n  const { className, applyTo } = state;\n\n  useApplyClassToBody(state, [classes.root, classes.body]);\n\n  state.className = css(className, classes.root, applyTo === 'element' && classes.body);\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}