{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { CustomizerContext, getNativeElementProps, omit } from '@fluentui/utilities';\nimport { ThemeContext } from './ThemeContext';\nexport var renderThemeProvider = function (state) {\n  var theme = state.theme,\n      customizerContext = state.customizerContext;\n  var Root = state.as || 'div';\n  var rootProps = typeof state.as === 'string' ? getNativeElementProps(state.as, state) : omit(state, ['as']);\n  return React.createElement(ThemeContext.Provider, {\n    value: theme\n  }, React.createElement(CustomizerContext.Provider, {\n    value: customizerContext\n  }, React.createElement(Root, __assign({}, rootProps))));\n};","map":{"version":3,"sources":["utilities/ThemeProvider/renderThemeProvider.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,iBAAT,EAA4B,qBAA5B,EAAmD,IAAnD,QAA+D,qBAA/D;AACA,SAAS,YAAT,QAA6B,gBAA7B;AAGA,OAAO,IAAM,mBAAmB,GAAG,UAAC,KAAD,EAA0B;EACnD,IAAA,KAAK,GAAwB,KAAK,CAA7B,KAAL;EAAA,IAAO,iBAAiB,GAAK,KAAK,CAAV,iBAAxB;EACR,IAAM,IAAI,GAAG,KAAK,CAAC,EAAN,IAAY,KAAzB;EACA,IAAM,SAAS,GAAG,OAAO,KAAK,CAAC,EAAb,KAAoB,QAApB,GAA+B,qBAAqB,CAAC,KAAK,CAAC,EAAP,EAAW,KAAX,CAApD,GAAwE,IAAI,CAAC,KAAD,EAAQ,CAAC,IAAD,CAAR,CAA9F;EAEA,OACE,KAAA,CAAA,aAAA,CAAC,YAAY,CAAC,QAAd,EAAsB;IAAC,KAAK,EAAE;EAAR,CAAtB,EACE,KAAA,CAAA,aAAA,CAAC,iBAAiB,CAAC,QAAnB,EAA2B;IAAC,KAAK,EAAE;EAAR,CAA3B,EACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK,QAAA,CAAA,EAAA,EAAK,SAAL,CAAL,CADF,CADF,CADF;AAOD,CAZM","sourcesContent":["import * as React from 'react';\nimport { CustomizerContext, getNativeElementProps, omit } from '@fluentui/utilities';\nimport { ThemeContext } from './ThemeContext';\nimport type { ThemeProviderState } from './ThemeProvider.types';\n\nexport const renderThemeProvider = (state: ThemeProviderState) => {\n  const { theme, customizerContext } = state;\n  const Root = state.as || 'div';\n  const rootProps = typeof state.as === 'string' ? getNativeElementProps(state.as, state) : omit(state, ['as']);\n\n  return (\n    <ThemeContext.Provider value={theme}>\n      <CustomizerContext.Provider value={customizerContext}>\n        <Root {...rootProps} />\n      </CustomizerContext.Provider>\n    </ThemeContext.Provider>\n  );\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}