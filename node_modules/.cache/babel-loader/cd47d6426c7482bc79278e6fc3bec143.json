{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css, styled, classNamesFunction, composeRenderFunction, getNativeElementProps } from '../../Utilities';\nimport { Check } from '../../Check';\nimport { getStyles } from './DetailsRowCheck.styles';\nimport { SelectionMode } from '../../Selection';\nvar getClassNames = classNamesFunction();\n\nvar DetailsRowCheckBase = function (props) {\n  var _a = props.isVisible,\n      isVisible = _a === void 0 ? false : _a,\n      _b = props.canSelect,\n      canSelect = _b === void 0 ? false : _b,\n      _c = props.anySelected,\n      anySelected = _c === void 0 ? false : _c,\n      _d = props.selected,\n      selected = _d === void 0 ? false : _d,\n      selectionMode = props.selectionMode,\n      _e = props.isHeader,\n      isHeader = _e === void 0 ? false : _e,\n      className = props.className,\n      checkClassName = props.checkClassName,\n      styles = props.styles,\n      theme = props.theme,\n      compact = props.compact,\n      onRenderDetailsCheckbox = props.onRenderDetailsCheckbox,\n      _f = props.useFastIcons,\n      useFastIcons = _f === void 0 ? true : _f,\n      // must be removed from buttonProps\n  buttonProps = __rest(props, [\"isVisible\", \"canSelect\", \"anySelected\", \"selected\", \"selectionMode\", \"isHeader\", \"className\", \"checkClassName\", \"styles\", \"theme\", \"compact\", \"onRenderDetailsCheckbox\", \"useFastIcons\"]);\n\n  var defaultCheckboxRender = useFastIcons ? _fastDefaultCheckboxRender : _defaultCheckboxRender;\n  var onRenderCheckbox = onRenderDetailsCheckbox ? composeRenderFunction(onRenderDetailsCheckbox, defaultCheckboxRender) : defaultCheckboxRender;\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    canSelect: canSelect,\n    selected: selected,\n    anySelected: anySelected,\n    className: className,\n    isHeader: isHeader,\n    isVisible: isVisible,\n    compact: compact\n  });\n  var detailsCheckboxProps = {\n    checked: selected,\n    theme: theme\n  };\n  var divProps = getNativeElementProps('div', buttonProps, ['aria-label', 'aria-labelledby', 'aria-describedby']);\n  var checkRole = selectionMode === SelectionMode.single ? 'radio' : 'checkbox';\n  return canSelect ? React.createElement(\"div\", __assign({}, buttonProps, {\n    role: checkRole,\n    // eslint-disable-next-line deprecation/deprecation\n    className: css(classNames.root, classNames.check),\n    \"aria-checked\": selected,\n    \"data-selection-toggle\": true,\n    \"data-automationid\": \"DetailsRowCheck\",\n    tabIndex: -1\n  }), onRenderCheckbox(detailsCheckboxProps)) : // eslint-disable-next-line deprecation/deprecation\n  React.createElement(\"div\", __assign({}, divProps, {\n    className: css(classNames.root, classNames.check)\n  }));\n};\n\nvar FastCheck = React.memo(function (props) {\n  return React.createElement(Check, {\n    theme: props.theme,\n    checked: props.checked,\n    className: props.className,\n    useFastIcons: true\n  });\n});\n\nfunction _defaultCheckboxRender(checkboxProps) {\n  return React.createElement(Check, {\n    checked: checkboxProps.checked\n  });\n}\n\nfunction _fastDefaultCheckboxRender(checkboxProps) {\n  return React.createElement(FastCheck, {\n    theme: checkboxProps.theme,\n    checked: checkboxProps.checked\n  });\n}\n\nexport var DetailsRowCheck = styled(DetailsRowCheckBase, getStyles, undefined, {\n  scope: 'DetailsRowCheck'\n}, true);","map":{"version":3,"sources":["components/DetailsList/DetailsRowCheck.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { css, styled, classNamesFunction, composeRenderFunction, getNativeElementProps } from '../../Utilities';\nimport { Check } from '../../Check';\nimport { getStyles } from './DetailsRowCheck.styles';\nimport { SelectionMode } from '../../Selection';\nimport type {\n  IDetailsRowCheckProps,\n  IDetailsCheckboxProps,\n  IDetailsRowCheckStyleProps,\n  IDetailsRowCheckStyles,\n} from './DetailsRowCheck.types';\nimport type { ITheme } from '../../Styling';\n\nconst getClassNames = classNamesFunction<IDetailsRowCheckStyleProps, IDetailsRowCheckStyles>();\n\nconst DetailsRowCheckBase: React.FunctionComponent<IDetailsRowCheckProps> = props => {\n  const {\n    isVisible = false,\n    canSelect = false,\n    anySelected = false,\n    selected = false,\n    selectionMode,\n    isHeader = false,\n    className,\n    checkClassName,\n    styles,\n    theme,\n    compact,\n    onRenderDetailsCheckbox,\n    useFastIcons = true, // must be removed from buttonProps\n    ...buttonProps\n  } = props;\n  const defaultCheckboxRender = useFastIcons ? _fastDefaultCheckboxRender : _defaultCheckboxRender;\n\n  const onRenderCheckbox = onRenderDetailsCheckbox\n    ? composeRenderFunction(onRenderDetailsCheckbox, defaultCheckboxRender)\n    : defaultCheckboxRender;\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    canSelect,\n    selected,\n    anySelected,\n    className,\n    isHeader,\n    isVisible,\n    compact,\n  });\n\n  const detailsCheckboxProps: IDetailsCheckboxProps = {\n    checked: selected,\n    theme,\n  };\n\n  const divProps = getNativeElementProps('div', buttonProps, ['aria-label', 'aria-labelledby', 'aria-describedby']);\n\n  const checkRole = selectionMode === SelectionMode.single ? 'radio' : 'checkbox';\n\n  return canSelect ? (\n    <div\n      {...buttonProps}\n      role={checkRole}\n      // eslint-disable-next-line deprecation/deprecation\n      className={css(classNames.root, classNames.check)}\n      aria-checked={selected}\n      data-selection-toggle={true}\n      data-automationid=\"DetailsRowCheck\"\n      tabIndex={-1}\n    >\n      {onRenderCheckbox(detailsCheckboxProps)}\n    </div>\n  ) : (\n    // eslint-disable-next-line deprecation/deprecation\n    <div {...divProps} className={css(classNames.root, classNames.check)} />\n  );\n};\n\nconst FastCheck = React.memo((props: { theme?: ITheme; checked?: boolean; className?: string }) => {\n  return <Check theme={props.theme} checked={props.checked} className={props.className} useFastIcons />;\n});\n\nfunction _defaultCheckboxRender(checkboxProps: IDetailsCheckboxProps) {\n  return <Check checked={checkboxProps.checked} />;\n}\n\nfunction _fastDefaultCheckboxRender(checkboxProps: IDetailsCheckboxProps) {\n  return <FastCheck theme={checkboxProps.theme} checked={checkboxProps.checked} />;\n}\n\nexport const DetailsRowCheck = styled<IDetailsRowCheckProps, IDetailsRowCheckStyleProps, IDetailsRowCheckStyles>(\n  DetailsRowCheckBase,\n  getStyles,\n  undefined,\n  { scope: 'DetailsRowCheck' },\n  true,\n);\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}