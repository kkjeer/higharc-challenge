{"ast":null,"code":"import * as React from 'react';\nimport { KeyCodes, css, getRTLSafeKeyCode } from '@fluentui/utilities';\nimport { addDays, addWeeks, compareDates, findAvailableDate, DateRangeType } from '@fluentui/date-time-utilities';\nexport var CalendarGridDayCell = function (props) {\n  var _a;\n\n  var navigatedDate = props.navigatedDate,\n      dateTimeFormatter = props.dateTimeFormatter,\n      allFocusable = props.allFocusable,\n      strings = props.strings,\n      activeDescendantId = props.activeDescendantId,\n      navigatedDayRef = props.navigatedDayRef,\n      calculateRoundedStyles = props.calculateRoundedStyles,\n      weeks = props.weeks,\n      classNames = props.classNames,\n      day = props.day,\n      dayIndex = props.dayIndex,\n      weekIndex = props.weekIndex,\n      weekCorners = props.weekCorners,\n      ariaHidden = props.ariaHidden,\n      customDayCellRef = props.customDayCellRef,\n      dateRangeType = props.dateRangeType,\n      daysToSelectInDayView = props.daysToSelectInDayView,\n      onSelectDate = props.onSelectDate,\n      restrictedDates = props.restrictedDates,\n      minDate = props.minDate,\n      maxDate = props.maxDate,\n      onNavigateDate = props.onNavigateDate,\n      getDayInfosInRangeOfDay = props.getDayInfosInRangeOfDay,\n      getRefsFromDayInfos = props.getRefsFromDayInfos;\n  var cornerStyle = (_a = weekCorners === null || weekCorners === void 0 ? void 0 : weekCorners[weekIndex + '_' + dayIndex]) !== null && _a !== void 0 ? _a : '';\n  var isNavigatedDate = compareDates(navigatedDate, day.originalDate);\n\n  var navigateMonthEdge = function (ev, date) {\n    var targetDate = undefined;\n    var direction = 1; // by default search forward\n    // eslint-disable-next-line deprecation/deprecation\n\n    if (ev.which === KeyCodes.up) {\n      targetDate = addWeeks(date, -1);\n      direction = -1; // eslint-disable-next-line deprecation/deprecation\n    } else if (ev.which === KeyCodes.down) {\n      targetDate = addWeeks(date, 1); // eslint-disable-next-line deprecation/deprecation\n    } else if (ev.which === getRTLSafeKeyCode(KeyCodes.left)) {\n      targetDate = addDays(date, -1);\n      direction = -1; // eslint-disable-next-line deprecation/deprecation\n    } else if (ev.which === getRTLSafeKeyCode(KeyCodes.right)) {\n      targetDate = addDays(date, 1);\n    }\n\n    if (!targetDate) {\n      // if we couldn't find a target date at all, do nothing\n      return;\n    }\n\n    var findAvailableDateOptions = {\n      initialDate: date,\n      targetDate: targetDate,\n      direction: direction,\n      restrictedDates: restrictedDates,\n      minDate: minDate,\n      maxDate: maxDate\n    }; // target date is restricted, search in whatever direction until finding the next possible date,\n    // stopping at boundaries\n\n    var nextDate = findAvailableDate(findAvailableDateOptions);\n\n    if (!nextDate) {\n      // if no dates available in initial direction, try going backwards\n      findAvailableDateOptions.direction = -direction;\n      nextDate = findAvailableDate(findAvailableDateOptions);\n    } // if the nextDate is still inside the same focusZone area, let the focusZone handle setting the focus so we\n    // don't jump the view unnecessarily\n\n\n    var isInCurrentView = weeks && nextDate && weeks.slice(1, weeks.length - 1).some(function (week) {\n      return week.some(function (dayToCompare) {\n        return compareDates(dayToCompare.originalDate, nextDate);\n      });\n    });\n\n    if (isInCurrentView) {\n      return;\n    } // else, fire navigation on the date to change the view to show it\n\n\n    if (nextDate) {\n      onNavigateDate(nextDate, true);\n      ev.preventDefault();\n    }\n  };\n\n  var onMouseOverDay = function (ev) {\n    var dayInfos = getDayInfosInRangeOfDay(day);\n    var dayRefs = getRefsFromDayInfos(dayInfos);\n    dayRefs.forEach(function (dayRef, index) {\n      var _a;\n\n      if (dayRef) {\n        dayRef.classList.add('ms-CalendarDay-hoverStyle');\n\n        if (!dayInfos[index].isSelected && dateRangeType === DateRangeType.Day && daysToSelectInDayView && daysToSelectInDayView > 1) {\n          // remove the static classes first to overwrite them\n          dayRef.classList.remove(classNames.bottomLeftCornerDate, classNames.bottomRightCornerDate, classNames.topLeftCornerDate, classNames.topRightCornerDate);\n          var classNamesToAdd = calculateRoundedStyles(classNames, false, false, index > 0, index < dayRefs.length - 1).trim();\n\n          if (classNamesToAdd) {\n            (_a = dayRef.classList).add.apply(_a, classNamesToAdd.split(' '));\n          }\n        }\n      }\n    });\n  };\n\n  var onMouseDownDay = function (ev) {\n    var dayInfos = getDayInfosInRangeOfDay(day);\n    var dayRefs = getRefsFromDayInfos(dayInfos);\n    dayRefs.forEach(function (dayRef) {\n      if (dayRef) {\n        dayRef.classList.add('ms-CalendarDay-pressedStyle');\n      }\n    });\n  };\n\n  var onMouseUpDay = function (ev) {\n    var dayInfos = getDayInfosInRangeOfDay(day);\n    var dayRefs = getRefsFromDayInfos(dayInfos);\n    dayRefs.forEach(function (dayRef) {\n      if (dayRef) {\n        dayRef.classList.remove('ms-CalendarDay-pressedStyle');\n      }\n    });\n  };\n\n  var onMouseOutDay = function (ev) {\n    var dayInfos = getDayInfosInRangeOfDay(day);\n    var dayRefs = getRefsFromDayInfos(dayInfos);\n    dayRefs.forEach(function (dayRef, index) {\n      var _a;\n\n      if (dayRef) {\n        dayRef.classList.remove('ms-CalendarDay-hoverStyle');\n        dayRef.classList.remove('ms-CalendarDay-pressedStyle');\n\n        if (!dayInfos[index].isSelected && dateRangeType === DateRangeType.Day && daysToSelectInDayView && daysToSelectInDayView > 1) {\n          var classNamesToAdd = calculateRoundedStyles(classNames, false, false, index > 0, index < dayRefs.length - 1).trim();\n\n          if (classNamesToAdd) {\n            (_a = dayRef.classList).remove.apply(_a, classNamesToAdd.split(' '));\n          }\n        }\n      }\n    });\n  };\n\n  var onDayKeyDown = function (ev) {\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.enter) {\n      onSelectDate === null || onSelectDate === void 0 ? void 0 : onSelectDate(day.originalDate);\n    } else {\n      navigateMonthEdge(ev, day.originalDate);\n    }\n  };\n\n  var ariaLabel = day.originalDate.getDate() + ', ' + strings.months[day.originalDate.getMonth()] + ', ' + day.originalDate.getFullYear();\n\n  if (day.isMarked) {\n    ariaLabel = ariaLabel + ', ' + strings.dayMarkedAriaLabel;\n  }\n\n  return React.createElement(\"td\", {\n    className: css(classNames.dayCell, weekCorners && cornerStyle, day.isSelected && classNames.daySelected, day.isSelected && 'ms-CalendarDay-daySelected', !day.isInBounds && classNames.dayOutsideBounds, !day.isInMonth && classNames.dayOutsideNavigatedMonth),\n    ref: function (element) {\n      customDayCellRef === null || customDayCellRef === void 0 ? void 0 : customDayCellRef(element, day.originalDate, classNames);\n      day.setRef(element);\n      isNavigatedDate && (navigatedDayRef.current = element);\n    },\n    \"aria-hidden\": ariaHidden,\n    \"aria-disabled\": !ariaHidden && !day.isInBounds,\n    onClick: day.isInBounds && !ariaHidden ? day.onSelected : undefined,\n    onMouseOver: !ariaHidden ? onMouseOverDay : undefined,\n    onMouseDown: !ariaHidden ? onMouseDownDay : undefined,\n    onMouseUp: !ariaHidden ? onMouseUpDay : undefined,\n    onMouseOut: !ariaHidden ? onMouseOutDay : undefined,\n    onKeyDown: !ariaHidden ? onDayKeyDown : undefined,\n    role: \"gridcell\",\n    tabIndex: isNavigatedDate ? 0 : undefined,\n    \"aria-current\": day.isSelected ? 'date' : undefined,\n    \"aria-selected\": day.isInBounds ? day.isSelected : undefined,\n    \"data-is-focusable\": !ariaHidden && (allFocusable || (day.isInBounds ? true : undefined))\n  }, React.createElement(\"button\", {\n    key: day.key + 'button',\n    \"aria-hidden\": ariaHidden,\n    className: css(classNames.dayButton, day.isToday && classNames.dayIsToday, day.isToday && 'ms-CalendarDay-dayIsToday'),\n    \"aria-label\": ariaLabel,\n    id: isNavigatedDate ? activeDescendantId : undefined,\n    disabled: !ariaHidden && !day.isInBounds,\n    type: \"button\",\n    tabIndex: -1,\n    \"data-is-focusable\": \"false\"\n  }, React.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, dateTimeFormatter.formatDay(day.originalDate)), day.isMarked && React.createElement(\"div\", {\n    \"aria-hidden\": \"true\",\n    className: classNames.dayMarker\n  })));\n};","map":{"version":3,"sources":["components/CalendarDayGrid/CalendarGridDayCell.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { KeyCodes, css, getRTLSafeKeyCode } from '@fluentui/utilities';\nimport { addDays, addWeeks, compareDates, findAvailableDate, DateRangeType } from '@fluentui/date-time-utilities';\nimport type { IAvailableDateOptions } from '@fluentui/date-time-utilities';\nimport type { IDayInfo } from './CalendarDayGrid.base';\nimport type { ICalendarGridRowProps } from './CalendarGridRow';\n\nexport interface ICalendarGridDayCellProps extends ICalendarGridRowProps {\n  day: IDayInfo;\n  dayIndex: number;\n}\n\nexport const CalendarGridDayCell: React.FunctionComponent<ICalendarGridDayCellProps> = props => {\n  const {\n    navigatedDate,\n    dateTimeFormatter,\n    allFocusable,\n    strings,\n    activeDescendantId,\n    navigatedDayRef,\n    calculateRoundedStyles,\n    weeks,\n    classNames,\n    day,\n    dayIndex,\n    weekIndex,\n    weekCorners,\n    ariaHidden,\n    customDayCellRef,\n    dateRangeType,\n    daysToSelectInDayView,\n    onSelectDate,\n    restrictedDates,\n    minDate,\n    maxDate,\n    onNavigateDate,\n    getDayInfosInRangeOfDay,\n    getRefsFromDayInfos,\n  } = props;\n  const cornerStyle = weekCorners?.[weekIndex + '_' + dayIndex] ?? '';\n  const isNavigatedDate = compareDates(navigatedDate, day.originalDate);\n\n  const navigateMonthEdge = (ev: React.KeyboardEvent<HTMLElement>, date: Date): void => {\n    let targetDate: Date | undefined = undefined;\n    let direction = 1; // by default search forward\n\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.up) {\n      targetDate = addWeeks(date, -1);\n      direction = -1;\n      // eslint-disable-next-line deprecation/deprecation\n    } else if (ev.which === KeyCodes.down) {\n      targetDate = addWeeks(date, 1);\n      // eslint-disable-next-line deprecation/deprecation\n    } else if (ev.which === getRTLSafeKeyCode(KeyCodes.left)) {\n      targetDate = addDays(date, -1);\n      direction = -1;\n      // eslint-disable-next-line deprecation/deprecation\n    } else if (ev.which === getRTLSafeKeyCode(KeyCodes.right)) {\n      targetDate = addDays(date, 1);\n    }\n\n    if (!targetDate) {\n      // if we couldn't find a target date at all, do nothing\n      return;\n    }\n\n    const findAvailableDateOptions: IAvailableDateOptions = {\n      initialDate: date,\n      targetDate,\n      direction,\n      restrictedDates,\n      minDate,\n      maxDate,\n    };\n\n    // target date is restricted, search in whatever direction until finding the next possible date,\n    // stopping at boundaries\n    let nextDate = findAvailableDate(findAvailableDateOptions);\n\n    if (!nextDate) {\n      // if no dates available in initial direction, try going backwards\n      findAvailableDateOptions.direction = -direction;\n      nextDate = findAvailableDate(findAvailableDateOptions);\n    }\n\n    // if the nextDate is still inside the same focusZone area, let the focusZone handle setting the focus so we\n    // don't jump the view unnecessarily\n    const isInCurrentView =\n      weeks &&\n      nextDate &&\n      weeks.slice(1, weeks.length - 1).some((week: IDayInfo[]) => {\n        return week.some((dayToCompare: IDayInfo) => {\n          return compareDates(dayToCompare.originalDate, nextDate!);\n        });\n      });\n    if (isInCurrentView) {\n      return;\n    }\n\n    // else, fire navigation on the date to change the view to show it\n    if (nextDate) {\n      onNavigateDate(nextDate, true);\n      ev.preventDefault();\n    }\n  };\n\n  const onMouseOverDay = (ev: React.MouseEvent<HTMLElement>) => {\n    const dayInfos = getDayInfosInRangeOfDay(day);\n    const dayRefs = getRefsFromDayInfos(dayInfos);\n\n    dayRefs.forEach((dayRef: HTMLElement, index: number) => {\n      if (dayRef) {\n        dayRef.classList.add('ms-CalendarDay-hoverStyle');\n        if (\n          !dayInfos[index].isSelected &&\n          dateRangeType === DateRangeType.Day &&\n          daysToSelectInDayView &&\n          daysToSelectInDayView > 1\n        ) {\n          // remove the static classes first to overwrite them\n          dayRef.classList.remove(\n            classNames.bottomLeftCornerDate!,\n            classNames.bottomRightCornerDate!,\n            classNames.topLeftCornerDate!,\n            classNames.topRightCornerDate!,\n          );\n\n          const classNamesToAdd = calculateRoundedStyles(\n            classNames,\n            false,\n            false,\n            index > 0,\n            index < dayRefs.length - 1,\n          ).trim();\n          if (classNamesToAdd) {\n            dayRef.classList.add(...classNamesToAdd.split(' '));\n          }\n        }\n      }\n    });\n  };\n\n  const onMouseDownDay = (ev: React.MouseEvent<HTMLElement>) => {\n    const dayInfos = getDayInfosInRangeOfDay(day);\n    const dayRefs = getRefsFromDayInfos(dayInfos);\n\n    dayRefs.forEach((dayRef: HTMLElement) => {\n      if (dayRef) {\n        dayRef.classList.add('ms-CalendarDay-pressedStyle');\n      }\n    });\n  };\n\n  const onMouseUpDay = (ev: React.MouseEvent<HTMLElement>) => {\n    const dayInfos = getDayInfosInRangeOfDay(day);\n    const dayRefs = getRefsFromDayInfos(dayInfos);\n\n    dayRefs.forEach((dayRef: HTMLElement) => {\n      if (dayRef) {\n        dayRef.classList.remove('ms-CalendarDay-pressedStyle');\n      }\n    });\n  };\n\n  const onMouseOutDay = (ev: React.MouseEvent<HTMLElement>) => {\n    const dayInfos = getDayInfosInRangeOfDay(day);\n    const dayRefs = getRefsFromDayInfos(dayInfos);\n\n    dayRefs.forEach((dayRef: HTMLElement, index: number) => {\n      if (dayRef) {\n        dayRef.classList.remove('ms-CalendarDay-hoverStyle');\n        dayRef.classList.remove('ms-CalendarDay-pressedStyle');\n        if (\n          !dayInfos[index].isSelected &&\n          dateRangeType === DateRangeType.Day &&\n          daysToSelectInDayView &&\n          daysToSelectInDayView > 1\n        ) {\n          const classNamesToAdd = calculateRoundedStyles(\n            classNames,\n            false,\n            false,\n            index > 0,\n            index < dayRefs.length - 1,\n          ).trim();\n          if (classNamesToAdd) {\n            dayRef.classList.remove(...classNamesToAdd.split(' '));\n          }\n        }\n      }\n    });\n  };\n\n  const onDayKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.enter) {\n      onSelectDate?.(day.originalDate);\n    } else {\n      navigateMonthEdge(ev, day.originalDate);\n    }\n  };\n\n  let ariaLabel =\n    day.originalDate.getDate() +\n    ', ' +\n    strings.months[day.originalDate.getMonth()] +\n    ', ' +\n    day.originalDate.getFullYear();\n\n  if (day.isMarked) {\n    ariaLabel = ariaLabel + ', ' + strings.dayMarkedAriaLabel;\n  }\n\n  return (\n    <td\n      className={css(\n        classNames.dayCell,\n        weekCorners && cornerStyle,\n        day.isSelected && classNames.daySelected,\n        day.isSelected && 'ms-CalendarDay-daySelected',\n        !day.isInBounds && classNames.dayOutsideBounds,\n        !day.isInMonth && classNames.dayOutsideNavigatedMonth,\n      )}\n      ref={(element: HTMLTableCellElement) => {\n        customDayCellRef?.(element, day.originalDate, classNames);\n        day.setRef(element);\n        isNavigatedDate && (navigatedDayRef.current = element);\n      }}\n      aria-hidden={ariaHidden}\n      aria-disabled={!ariaHidden && !day.isInBounds}\n      onClick={day.isInBounds && !ariaHidden ? day.onSelected : undefined}\n      onMouseOver={!ariaHidden ? onMouseOverDay : undefined}\n      onMouseDown={!ariaHidden ? onMouseDownDay : undefined}\n      onMouseUp={!ariaHidden ? onMouseUpDay : undefined}\n      onMouseOut={!ariaHidden ? onMouseOutDay : undefined}\n      onKeyDown={!ariaHidden ? onDayKeyDown : undefined}\n      role=\"gridcell\"\n      tabIndex={isNavigatedDate ? 0 : undefined}\n      aria-current={day.isSelected ? 'date' : undefined}\n      aria-selected={day.isInBounds ? day.isSelected : undefined}\n      data-is-focusable={!ariaHidden && (allFocusable || (day.isInBounds ? true : undefined))}\n    >\n      <button\n        key={day.key + 'button'}\n        aria-hidden={ariaHidden}\n        className={css(\n          classNames.dayButton,\n          day.isToday && classNames.dayIsToday,\n          day.isToday && 'ms-CalendarDay-dayIsToday',\n        )}\n        aria-label={ariaLabel}\n        id={isNavigatedDate ? activeDescendantId : undefined}\n        disabled={!ariaHidden && !day.isInBounds}\n        type=\"button\"\n        tabIndex={-1}\n        data-is-focusable=\"false\"\n      >\n        <span aria-hidden=\"true\">{dateTimeFormatter.formatDay(day.originalDate)}</span>\n        {day.isMarked && <div aria-hidden=\"true\" className={classNames.dayMarker} />}\n      </button>\n    </td>\n  );\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}