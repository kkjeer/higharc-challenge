{"ast":null,"code":"import { getGlobalClassNames, getFocusStyle, HighContrastSelector } from '../../../Styling';\nimport { ButtonGlobalClassNames } from '../../Button/BaseButton.classNames';\nimport { getRTL } from '../../../Utilities';\nvar GlobalClassNames = {\n  root: 'ms-TagItem',\n  text: 'ms-TagItem-text',\n  close: 'ms-TagItem-close',\n  isSelected: 'is-selected'\n};\nvar TAG_HEIGHT = 26;\nexport function getStyles(props) {\n  var _a, _b, _c, _d;\n\n  var className = props.className,\n      theme = props.theme,\n      selected = props.selected,\n      disabled = props.disabled;\n  var palette = theme.palette,\n      effects = theme.effects,\n      fonts = theme.fonts,\n      semanticColors = theme.semanticColors;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  return {\n    root: [classNames.root, fonts.medium, getFocusStyle(theme), {\n      boxSizing: 'content-box',\n      flexShrink: '1',\n      margin: 2,\n      height: TAG_HEIGHT,\n      lineHeight: TAG_HEIGHT,\n      cursor: 'default',\n      userSelect: 'none',\n      display: 'flex',\n      flexWrap: 'nowrap',\n      maxWidth: 300,\n      minWidth: 0,\n      borderRadius: effects.roundedCorner2,\n      color: semanticColors.inputText,\n      background: palette.neutralLighter,\n      selectors: (_a = {\n        ':hover': [!disabled && !selected && {\n          color: palette.neutralDark,\n          background: palette.neutralLight,\n          selectors: {\n            '.ms-TagItem-close': {\n              color: palette.neutralPrimary\n            }\n          }\n        }, disabled && {\n          background: palette.neutralLighter\n        }],\n        ':focus-within': [!disabled && {\n          background: palette.themePrimary,\n          color: palette.white\n        }]\n      }, _a[HighContrastSelector] = {\n        border: \"1px solid \" + (!selected ? 'WindowText' : 'WindowFrame')\n      }, _a)\n    }, disabled && {\n      selectors: (_b = {}, _b[HighContrastSelector] = {\n        borderColor: 'GrayText'\n      }, _b)\n    }, selected && !disabled && [classNames.isSelected], className],\n    text: [classNames.text, {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      minWidth: 30,\n      margin: '0 8px'\n    }, disabled && {\n      selectors: (_c = {}, _c[HighContrastSelector] = {\n        color: 'GrayText'\n      }, _c)\n    }],\n    close: [classNames.close, {\n      color: palette.neutralSecondary,\n      width: 30,\n      height: '100%',\n      flex: '0 0 auto',\n      borderRadius: getRTL(theme) ? effects.roundedCorner2 + \" 0 0 \" + effects.roundedCorner2 : \"0 \" + effects.roundedCorner2 + \" \" + effects.roundedCorner2 + \" 0\",\n      selectors: {\n        ':hover': {\n          background: palette.neutralQuaternaryAlt,\n          color: palette.neutralPrimary\n        },\n        ':focus': {\n          color: palette.white,\n          background: palette.themePrimary\n        },\n        ':focus:hover': {\n          color: palette.white,\n          background: palette.themeDark\n        },\n        ':active': {\n          color: palette.white,\n          backgroundColor: palette.themeDark\n        }\n      }\n    }, disabled && {\n      selectors: (_d = {}, _d[\".\" + ButtonGlobalClassNames.msButtonIcon] = {\n        color: palette.neutralSecondary\n      }, _d)\n    }]\n  };\n}","map":{"version":3,"sources":["components/pickers/TagPicker/TagItem.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { getGlobalClassNames, getFocusStyle, HighContrastSelector } from '../../../Styling';\nimport { ButtonGlobalClassNames } from '../../Button/BaseButton.classNames';\nimport { getRTL } from '../../../Utilities';\nimport type { ITagItemStyleProps, ITagItemStyles } from './TagPicker.types';\n\nconst GlobalClassNames = {\n  root: 'ms-TagItem',\n  text: 'ms-TagItem-text',\n  close: 'ms-TagItem-close',\n  isSelected: 'is-selected',\n};\n\nconst TAG_HEIGHT = 26;\n\nexport function getStyles(props: ITagItemStyleProps): ITagItemStyles {\n  const { className, theme, selected, disabled } = props;\n\n  const { palette, effects, fonts, semanticColors } = theme;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      fonts.medium,\n      getFocusStyle(theme),\n      {\n        boxSizing: 'content-box',\n        flexShrink: '1',\n        margin: 2,\n        height: TAG_HEIGHT,\n        lineHeight: TAG_HEIGHT,\n        cursor: 'default',\n        userSelect: 'none',\n        display: 'flex',\n        flexWrap: 'nowrap',\n        maxWidth: 300,\n        minWidth: 0, // needed to prevent long tags from overflowing container\n        borderRadius: effects.roundedCorner2,\n        color: semanticColors.inputText,\n        background: palette.neutralLighter,\n        selectors: {\n          ':hover': [\n            !disabled &&\n              !selected && {\n                color: palette.neutralDark,\n                background: palette.neutralLight,\n                selectors: {\n                  '.ms-TagItem-close': {\n                    color: palette.neutralPrimary,\n                  },\n                },\n              },\n            disabled && { background: palette.neutralLighter },\n          ],\n          ':focus-within': [\n            !disabled && {\n              background: palette.themePrimary,\n              color: palette.white,\n            },\n          ],\n          [HighContrastSelector]: {\n            border: `1px solid ${!selected ? 'WindowText' : 'WindowFrame'}`,\n          },\n        },\n      },\n      disabled && {\n        selectors: {\n          [HighContrastSelector]: {\n            borderColor: 'GrayText',\n          },\n        },\n      },\n      selected && !disabled && [classNames.isSelected],\n      className,\n    ],\n    text: [\n      classNames.text,\n      {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        minWidth: 30,\n        margin: '0 8px',\n      },\n      disabled && {\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'GrayText',\n          },\n        },\n      },\n    ],\n    close: [\n      classNames.close,\n      {\n        color: palette.neutralSecondary,\n        width: 30,\n        height: '100%',\n        flex: '0 0 auto',\n        borderRadius: getRTL(theme)\n          ? `${effects.roundedCorner2} 0 0 ${effects.roundedCorner2}`\n          : `0 ${effects.roundedCorner2} ${effects.roundedCorner2} 0`,\n        selectors: {\n          ':hover': {\n            background: palette.neutralQuaternaryAlt,\n            color: palette.neutralPrimary,\n          },\n          ':focus': {\n            color: palette.white,\n            background: palette.themePrimary,\n          },\n          ':focus:hover': {\n            color: palette.white,\n            background: palette.themeDark,\n          },\n          ':active': {\n            color: palette.white,\n            backgroundColor: palette.themeDark,\n          },\n        },\n      },\n      disabled && {\n        selectors: {\n          [`.${ButtonGlobalClassNames.msButtonIcon}`]: {\n            color: palette.neutralSecondary,\n          },\n        },\n      },\n    ],\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}