{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { buttonProperties, classNamesFunction, getId, getNativeProps, initializeComponentRef } from '../../Utilities';\nimport { OverflowButtonType } from './Facepile.types';\nimport { FacepileButton } from './FacepileButton';\nimport { Icon } from '../../Icon';\nimport { Persona } from '../../Persona';\nimport { PersonaCoin, PersonaSize, PersonaInitialsColor } from '../../PersonaCoin';\nvar getClassNames = classNamesFunction();\n/**\n * FacePile with no default styles.\n * [Use the `styles` API to add your own styles.](https://github.com/microsoft/fluentui/wiki/Component-Styling)\n */\n\nvar FacepileBase =\n/** @class */\nfunction (_super) {\n  __extends(FacepileBase, _super);\n\n  function FacepileBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._classNames = getClassNames(_this.props.styles, {\n      theme: _this.props.theme,\n      className: _this.props.className\n    });\n\n    _this._getPersonaControl = function (persona) {\n      var _a = _this.props,\n          getPersonaProps = _a.getPersonaProps,\n          personaSize = _a.personaSize;\n      var personaStyles = {\n        details: {\n          flex: '1 0 auto'\n        }\n      };\n      return React.createElement(Persona, __assign({\n        imageInitials: persona.imageInitials,\n        imageUrl: persona.imageUrl,\n        initialsColor: persona.initialsColor,\n        allowPhoneInitials: persona.allowPhoneInitials,\n        text: persona.personaName,\n        size: personaSize\n      }, getPersonaProps ? getPersonaProps(persona) : null, {\n        styles: personaStyles\n      }));\n    };\n\n    _this._getPersonaCoinControl = function (persona) {\n      var _a = _this.props,\n          getPersonaProps = _a.getPersonaProps,\n          personaSize = _a.personaSize;\n      return React.createElement(PersonaCoin, __assign({\n        imageInitials: persona.imageInitials,\n        imageUrl: persona.imageUrl,\n        initialsColor: persona.initialsColor,\n        allowPhoneInitials: persona.allowPhoneInitials,\n        text: persona.personaName,\n        size: personaSize\n      }, getPersonaProps ? getPersonaProps(persona) : null));\n    };\n\n    initializeComponentRef(_this);\n    _this._ariaDescriptionId = getId();\n    return _this;\n  }\n\n  FacepileBase.prototype.render = function () {\n    var overflowButtonProps = this.props.overflowButtonProps;\n    var _a = this.props,\n        chevronButtonProps = _a.chevronButtonProps,\n        // eslint-disable-line deprecation/deprecation\n    maxDisplayablePersonas = _a.maxDisplayablePersonas,\n        personas = _a.personas,\n        overflowPersonas = _a.overflowPersonas,\n        showAddButton = _a.showAddButton,\n        ariaLabel = _a.ariaLabel,\n        _b = _a.showTooltip,\n        showTooltip = _b === void 0 ? true : _b;\n    var _classNames = this._classNames; // Add a check to make sure maxDisplayalePersonas is defined to cover the edge case of it being 0.\n\n    var numPersonasToShow = typeof maxDisplayablePersonas === 'number' ? Math.min(personas.length, maxDisplayablePersonas) : personas.length; // Added for deprecating chevronButtonProps.  Can remove after v1.0\n\n    if (chevronButtonProps && !overflowButtonProps) {\n      overflowButtonProps = chevronButtonProps;\n    }\n\n    var hasOverflowPersonas = overflowPersonas && overflowPersonas.length > 0;\n    var personasPrimary = hasOverflowPersonas ? personas : personas.slice(0, numPersonasToShow);\n    var personasOverflow = (hasOverflowPersonas ? overflowPersonas : personas.slice(numPersonasToShow)) || [];\n    return React.createElement(\"div\", {\n      className: _classNames.root\n    }, this.onRenderAriaDescription(), React.createElement(\"div\", {\n      className: _classNames.itemContainer\n    }, showAddButton ? this._getAddNewElement() : null, React.createElement(\"ul\", {\n      className: _classNames.members,\n      \"aria-label\": ariaLabel\n    }, this._onRenderVisiblePersonas(personasPrimary, personasOverflow.length === 0 && personas.length === 1, showTooltip)), overflowButtonProps ? this._getOverflowElement(personasOverflow) : null));\n  };\n\n  FacepileBase.prototype.onRenderAriaDescription = function () {\n    var ariaDescription = this.props.ariaDescription;\n    var _classNames = this._classNames; // If ariaDescription is given, descriptionId will be assigned to ariaDescriptionSpan,\n    // otherwise it will be assigned to descriptionSpan.\n\n    return ariaDescription && React.createElement(\"span\", {\n      className: _classNames.screenReaderOnly,\n      id: this._ariaDescriptionId\n    }, ariaDescription);\n  };\n\n  FacepileBase.prototype._onRenderVisiblePersonas = function (personas, singlePersona, showTooltip) {\n    var _this = this;\n\n    var _a = this.props,\n        _b = _a.onRenderPersona,\n        onRenderPersona = _b === void 0 ? this._getPersonaControl : _b,\n        _c = _a.onRenderPersonaCoin,\n        onRenderPersonaCoin = _c === void 0 ? this._getPersonaCoinControl : _c,\n        onRenderPersonaWrapper = _a.onRenderPersonaWrapper;\n    return personas.map(function (persona, index) {\n      var personaControl = singlePersona ? onRenderPersona(persona, _this._getPersonaControl) : onRenderPersonaCoin(persona, _this._getPersonaCoinControl);\n      var defaultPersonaRender = persona.onClick ? function () {\n        return _this._getElementWithOnClickEvent(personaControl, persona, showTooltip, index);\n      } : function () {\n        return _this._getElementWithoutOnClickEvent(personaControl, persona, showTooltip, index);\n      };\n      return React.createElement(\"li\", {\n        key: (singlePersona ? 'persona' : 'personaCoin') + \"-\" + index,\n        className: _this._classNames.member\n      }, onRenderPersonaWrapper ? onRenderPersonaWrapper(persona, defaultPersonaRender) : defaultPersonaRender());\n    });\n  };\n\n  FacepileBase.prototype._getElementWithOnClickEvent = function (personaControl, persona, showTooltip, index) {\n    var keytipProps = persona.keytipProps;\n    return React.createElement(FacepileButton, __assign({}, getNativeProps(persona, buttonProperties), this._getElementProps(persona, showTooltip, index), {\n      keytipProps: keytipProps,\n      // eslint-disable-next-line react/jsx-no-bind\n      onClick: this._onPersonaClick.bind(this, persona)\n    }), personaControl);\n  };\n\n  FacepileBase.prototype._getElementWithoutOnClickEvent = function (personaControl, persona, showTooltip, index) {\n    return React.createElement(\"div\", __assign({}, getNativeProps(persona, buttonProperties), this._getElementProps(persona, showTooltip, index)), personaControl);\n  };\n\n  FacepileBase.prototype._getElementProps = function (persona, showTooltip, index) {\n    var _classNames = this._classNames;\n    return {\n      key: (persona.imageUrl ? 'i' : '') + index,\n      'data-is-focusable': true,\n      className: _classNames.itemButton,\n      title: showTooltip ? persona.personaName : undefined,\n      onMouseMove: this._onPersonaMouseMove.bind(this, persona),\n      onMouseOut: this._onPersonaMouseOut.bind(this, persona)\n    };\n  };\n\n  FacepileBase.prototype._getOverflowElement = function (personasOverflow) {\n    switch (this.props.overflowButtonType) {\n      case OverflowButtonType.descriptive:\n        return this._getDescriptiveOverflowElement(personasOverflow);\n\n      case OverflowButtonType.downArrow:\n        return this._getIconElement('ChevronDown');\n\n      case OverflowButtonType.more:\n        return this._getIconElement('More');\n\n      default:\n        return null;\n    }\n  };\n\n  FacepileBase.prototype._getDescriptiveOverflowElement = function (personasOverflow) {\n    var personaSize = this.props.personaSize;\n\n    if (!personasOverflow || personasOverflow.length < 1) {\n      return null;\n    }\n\n    var personaNames = personasOverflow.map(function (p) {\n      return p.personaName;\n    }).join(', ');\n\n    var overflowButtonProps = __assign({\n      title: personaNames\n    }, this.props.overflowButtonProps);\n\n    var numPersonasNotPictured = Math.max(personasOverflow.length, 0);\n    var _classNames = this._classNames;\n    return React.createElement(FacepileButton, __assign({}, overflowButtonProps, {\n      ariaDescription: overflowButtonProps.title,\n      className: _classNames.descriptiveOverflowButton\n    }), React.createElement(PersonaCoin, {\n      size: personaSize,\n      onRenderInitials: this._renderInitialsNotPictured(numPersonasNotPictured),\n      initialsColor: PersonaInitialsColor.transparent\n    }));\n  };\n\n  FacepileBase.prototype._getIconElement = function (icon) {\n    var _a = this.props,\n        overflowButtonProps = _a.overflowButtonProps,\n        personaSize = _a.personaSize;\n    var overflowInitialsIcon = true;\n    var _classNames = this._classNames;\n    return React.createElement(FacepileButton, __assign({}, overflowButtonProps, {\n      className: _classNames.overflowButton\n    }), React.createElement(PersonaCoin, {\n      size: personaSize,\n      onRenderInitials: this._renderInitials(icon, overflowInitialsIcon),\n      initialsColor: PersonaInitialsColor.transparent\n    }));\n  };\n\n  FacepileBase.prototype._getAddNewElement = function () {\n    var _a = this.props,\n        addButtonProps = _a.addButtonProps,\n        personaSize = _a.personaSize;\n    var _classNames = this._classNames;\n    return React.createElement(FacepileButton, __assign({}, addButtonProps, {\n      className: _classNames.addButton\n    }), React.createElement(PersonaCoin, {\n      size: personaSize,\n      onRenderInitials: this._renderInitials('AddFriend')\n    }));\n  };\n\n  FacepileBase.prototype._onPersonaClick = function (persona, ev) {\n    persona.onClick(ev, persona);\n    ev.preventDefault();\n    ev.stopPropagation();\n  };\n\n  FacepileBase.prototype._onPersonaMouseMove = function (persona, ev) {\n    if (persona.onMouseMove) {\n      persona.onMouseMove(ev, persona);\n    }\n  };\n\n  FacepileBase.prototype._onPersonaMouseOut = function (persona, ev) {\n    if (persona.onMouseOut) {\n      persona.onMouseOut(ev, persona);\n    }\n  };\n\n  FacepileBase.prototype._renderInitials = function (iconName, overflowButton) {\n    var _classNames = this._classNames;\n    return function () {\n      return React.createElement(Icon, {\n        iconName: iconName,\n        className: overflowButton ? _classNames.overflowInitialsIcon : ''\n      });\n    };\n  };\n\n  FacepileBase.prototype._renderInitialsNotPictured = function (numPersonasNotPictured) {\n    var _classNames = this._classNames;\n    return function () {\n      return React.createElement(\"span\", {\n        className: _classNames.overflowInitialsIcon\n      }, numPersonasNotPictured < 100 ? '+' + numPersonasNotPictured : '99+');\n    };\n  };\n\n  FacepileBase.defaultProps = {\n    maxDisplayablePersonas: 5,\n    personas: [],\n    overflowPersonas: [],\n    personaSize: PersonaSize.size32\n  };\n  return FacepileBase;\n}(React.Component);\n\nexport { FacepileBase };","map":{"version":3,"sources":["components/Facepile/Facepile.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { buttonProperties, classNamesFunction, getId, getNativeProps, initializeComponentRef } from '../../Utilities';\nimport { OverflowButtonType } from './Facepile.types';\nimport { FacepileButton } from './FacepileButton';\nimport { Icon } from '../../Icon';\nimport { Persona } from '../../Persona';\nimport { PersonaCoin, PersonaSize, PersonaInitialsColor } from '../../PersonaCoin';\nimport type { IFacepileProps, IFacepilePersona, IFacepileStyleProps, IFacepileStyles } from './Facepile.types';\nimport type { IPersonaStyles } from '../../Persona';\nimport type { IButtonProps } from '../../Button';\n\nconst getClassNames = classNamesFunction<IFacepileStyleProps, IFacepileStyles>();\n\n/**\n * FacePile with no default styles.\n * [Use the `styles` API to add your own styles.](https://github.com/microsoft/fluentui/wiki/Component-Styling)\n */\nexport class FacepileBase extends React.Component<IFacepileProps, {}> {\n  public static defaultProps: IFacepileProps = {\n    maxDisplayablePersonas: 5,\n    personas: [],\n    overflowPersonas: [],\n    personaSize: PersonaSize.size32,\n  };\n\n  private _ariaDescriptionId: string;\n\n  private _classNames = getClassNames(this.props.styles, {\n    theme: this.props.theme!,\n    className: this.props.className,\n  });\n\n  constructor(props: IFacepileProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    this._ariaDescriptionId = getId();\n  }\n\n  public render(): JSX.Element {\n    let { overflowButtonProps } = this.props;\n    const {\n      chevronButtonProps, // eslint-disable-line deprecation/deprecation\n      maxDisplayablePersonas,\n      personas,\n      overflowPersonas,\n      showAddButton,\n      ariaLabel,\n      showTooltip = true,\n    } = this.props;\n\n    const { _classNames } = this;\n\n    // Add a check to make sure maxDisplayalePersonas is defined to cover the edge case of it being 0.\n    const numPersonasToShow: number =\n      typeof maxDisplayablePersonas === 'number' ? Math.min(personas.length, maxDisplayablePersonas) : personas.length;\n\n    // Added for deprecating chevronButtonProps.  Can remove after v1.0\n    if (chevronButtonProps && !overflowButtonProps) {\n      overflowButtonProps = chevronButtonProps;\n    }\n\n    const hasOverflowPersonas = overflowPersonas && overflowPersonas.length > 0;\n    const personasPrimary: IFacepilePersona[] = hasOverflowPersonas ? personas : personas.slice(0, numPersonasToShow);\n    const personasOverflow: IFacepilePersona[] =\n      (hasOverflowPersonas ? overflowPersonas : personas.slice(numPersonasToShow)) || [];\n\n    return (\n      <div className={_classNames.root}>\n        {this.onRenderAriaDescription()}\n        <div className={_classNames.itemContainer}>\n          {showAddButton ? this._getAddNewElement() : null}\n          <ul className={_classNames.members} aria-label={ariaLabel}>\n            {this._onRenderVisiblePersonas(\n              personasPrimary,\n              personasOverflow.length === 0 && personas.length === 1,\n              showTooltip,\n            )}\n          </ul>\n          {overflowButtonProps ? this._getOverflowElement(personasOverflow) : null}\n        </div>\n      </div>\n    );\n  }\n\n  protected onRenderAriaDescription() {\n    const { ariaDescription } = this.props;\n\n    const { _classNames } = this;\n\n    // If ariaDescription is given, descriptionId will be assigned to ariaDescriptionSpan,\n    // otherwise it will be assigned to descriptionSpan.\n    return (\n      ariaDescription && (\n        <span className={_classNames.screenReaderOnly} id={this._ariaDescriptionId}>\n          {ariaDescription}\n        </span>\n      )\n    );\n  }\n\n  private _onRenderVisiblePersonas(\n    personas: IFacepilePersona[],\n    singlePersona: boolean,\n    showTooltip: boolean,\n  ): JSX.Element[] {\n    const {\n      onRenderPersona = this._getPersonaControl,\n      onRenderPersonaCoin = this._getPersonaCoinControl,\n      onRenderPersonaWrapper,\n    } = this.props;\n    return personas.map((persona: IFacepilePersona, index: number) => {\n      const personaControl: JSX.Element | null = singlePersona\n        ? onRenderPersona(persona, this._getPersonaControl)\n        : onRenderPersonaCoin(persona, this._getPersonaCoinControl);\n      const defaultPersonaRender = persona.onClick\n        ? () => this._getElementWithOnClickEvent(personaControl, persona, showTooltip, index)\n        : () => this._getElementWithoutOnClickEvent(personaControl, persona, showTooltip, index);\n\n      return (\n        <li key={`${singlePersona ? 'persona' : 'personaCoin'}-${index}`} className={this._classNames.member}>\n          {onRenderPersonaWrapper ? onRenderPersonaWrapper(persona, defaultPersonaRender) : defaultPersonaRender()}\n        </li>\n      );\n    });\n  }\n\n  private _getPersonaControl = (persona: IFacepilePersona): JSX.Element | null => {\n    const { getPersonaProps, personaSize } = this.props;\n    const personaStyles: Partial<IPersonaStyles> = {\n      details: {\n        flex: '1 0 auto',\n      },\n    };\n\n    return (\n      <Persona\n        imageInitials={persona.imageInitials}\n        imageUrl={persona.imageUrl}\n        initialsColor={persona.initialsColor}\n        allowPhoneInitials={persona.allowPhoneInitials}\n        text={persona.personaName}\n        size={personaSize}\n        {...(getPersonaProps ? getPersonaProps(persona) : null)}\n        styles={personaStyles}\n      />\n    );\n  };\n\n  private _getPersonaCoinControl = (persona: IFacepilePersona): JSX.Element | null => {\n    const { getPersonaProps, personaSize } = this.props;\n    return (\n      <PersonaCoin\n        imageInitials={persona.imageInitials}\n        imageUrl={persona.imageUrl}\n        initialsColor={persona.initialsColor}\n        allowPhoneInitials={persona.allowPhoneInitials}\n        text={persona.personaName}\n        size={personaSize}\n        {...(getPersonaProps ? getPersonaProps(persona) : null)}\n      />\n    );\n  };\n\n  private _getElementWithOnClickEvent(\n    personaControl: JSX.Element | null,\n    persona: IFacepilePersona,\n    showTooltip: boolean,\n    index: number,\n  ): JSX.Element {\n    const { keytipProps } = persona;\n    return (\n      <FacepileButton\n        {...getNativeProps(persona, buttonProperties)}\n        {...this._getElementProps(persona, showTooltip, index)}\n        keytipProps={keytipProps}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={this._onPersonaClick.bind(this, persona)}\n      >\n        {personaControl}\n      </FacepileButton>\n    );\n  }\n\n  private _getElementWithoutOnClickEvent(\n    personaControl: JSX.Element | null,\n    persona: IFacepilePersona,\n    showTooltip: boolean,\n    index: number,\n  ): JSX.Element {\n    return (\n      <div {...getNativeProps(persona, buttonProperties)} {...this._getElementProps(persona, showTooltip, index)}>\n        {personaControl}\n      </div>\n    );\n  }\n\n  private _getElementProps(\n    persona: IFacepilePersona,\n    showTooltip: boolean,\n    index: number,\n  ): { key: React.Key; ['data-is-focusable']: boolean } & React.HTMLAttributes<HTMLDivElement> {\n    const { _classNames } = this;\n\n    return {\n      key: (persona.imageUrl ? 'i' : '') + index,\n      'data-is-focusable': true,\n      className: _classNames.itemButton,\n      title: showTooltip ? persona.personaName : undefined,\n      onMouseMove: this._onPersonaMouseMove.bind(this, persona),\n      onMouseOut: this._onPersonaMouseOut.bind(this, persona),\n    };\n  }\n\n  private _getOverflowElement(personasOverflow: IFacepilePersona[]): JSX.Element | null {\n    switch (this.props.overflowButtonType) {\n      case OverflowButtonType.descriptive:\n        return this._getDescriptiveOverflowElement(personasOverflow);\n      case OverflowButtonType.downArrow:\n        return this._getIconElement('ChevronDown');\n      case OverflowButtonType.more:\n        return this._getIconElement('More');\n      default:\n        return null;\n    }\n  }\n\n  private _getDescriptiveOverflowElement(personasOverflow: IFacepilePersona[]): JSX.Element | null {\n    const { personaSize } = this.props;\n    if (!personasOverflow || personasOverflow.length < 1) {\n      return null;\n    }\n\n    const personaNames: string = personasOverflow.map((p: IFacepilePersona) => p.personaName).join(', ');\n    const overflowButtonProps: IButtonProps = { ...{ title: personaNames }, ...this.props.overflowButtonProps };\n    const numPersonasNotPictured: number = Math.max(personasOverflow.length, 0);\n\n    const { _classNames } = this;\n\n    return (\n      <FacepileButton\n        {...overflowButtonProps}\n        ariaDescription={overflowButtonProps.title}\n        className={_classNames.descriptiveOverflowButton}\n      >\n        <PersonaCoin\n          size={personaSize}\n          onRenderInitials={this._renderInitialsNotPictured(numPersonasNotPictured)}\n          initialsColor={PersonaInitialsColor.transparent}\n        />\n      </FacepileButton>\n    );\n  }\n\n  private _getIconElement(icon: string): JSX.Element {\n    const { overflowButtonProps, personaSize } = this.props;\n    const overflowInitialsIcon = true;\n\n    const { _classNames } = this;\n\n    return (\n      <FacepileButton {...overflowButtonProps} className={_classNames.overflowButton}>\n        <PersonaCoin\n          size={personaSize}\n          onRenderInitials={this._renderInitials(icon, overflowInitialsIcon)}\n          initialsColor={PersonaInitialsColor.transparent}\n        />\n      </FacepileButton>\n    );\n  }\n  private _getAddNewElement(): JSX.Element {\n    const { addButtonProps, personaSize } = this.props;\n\n    const { _classNames } = this;\n\n    return (\n      <FacepileButton {...addButtonProps} className={_classNames.addButton}>\n        <PersonaCoin size={personaSize} onRenderInitials={this._renderInitials('AddFriend')} />\n      </FacepileButton>\n    );\n  }\n\n  private _onPersonaClick(persona: IFacepilePersona, ev?: React.MouseEvent<HTMLElement>): void {\n    persona.onClick!(ev, persona);\n    ev!.preventDefault();\n    ev!.stopPropagation();\n  }\n\n  private _onPersonaMouseMove(persona: IFacepilePersona, ev?: React.MouseEvent<HTMLElement>): void {\n    if (persona.onMouseMove) {\n      persona.onMouseMove(ev, persona);\n    }\n  }\n\n  private _onPersonaMouseOut(persona: IFacepilePersona, ev?: React.MouseEvent<HTMLElement>): void {\n    if (persona.onMouseOut) {\n      persona.onMouseOut(ev, persona);\n    }\n  }\n\n  private _renderInitials(iconName: string, overflowButton?: boolean): () => JSX.Element {\n    const { _classNames } = this;\n\n    return (): JSX.Element => {\n      return <Icon iconName={iconName} className={overflowButton ? _classNames.overflowInitialsIcon : ''} />;\n    };\n  }\n\n  private _renderInitialsNotPictured(numPersonasNotPictured: number): () => JSX.Element {\n    const { _classNames } = this;\n\n    return (): JSX.Element => {\n      return (\n        <span className={_classNames.overflowInitialsIcon}>\n          {numPersonasNotPictured < 100 ? '+' + numPersonasNotPictured : '99+'}\n        </span>\n      );\n    };\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}