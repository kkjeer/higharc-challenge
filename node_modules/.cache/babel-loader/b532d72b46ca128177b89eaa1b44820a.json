{"ast":null,"code":"import { __assign, __rest } from \"tslib\";\nimport * as React from 'react';\nimport { Image } from '../../../Image';\nimport { Icon } from '../../../Icon';\nimport { classNamesFunction, getNativeProps, inputProperties, css, composeRenderFunction, getPropsWithDefaults } from '../../../Utilities';\nvar getClassNames = classNamesFunction();\nvar LARGE_IMAGE_SIZE = 71;\nvar DEFAULT_PROPS = {\n  // This ensures default imageSize value doesn't mutate. Mutation can cause style re-calcuation.\n  imageSize: {\n    width: 32,\n    height: 32\n  }\n};\nexport var ChoiceGroupOptionBase = function (propsWithoutDefaults) {\n  // Mix the `key` prop back in since custom render functions may be expecting it\n  // (React uses `key` internally rather than passing it through to the component)\n  var props = getPropsWithDefaults(__assign(__assign({}, DEFAULT_PROPS), {\n    key: propsWithoutDefaults.itemKey\n  }), propsWithoutDefaults);\n\n  var ariaLabel = props.ariaLabel,\n      focused = props.focused,\n      required = props.required,\n      theme = props.theme,\n      iconProps = props.iconProps,\n      imageSrc = props.imageSrc,\n      imageSize = props.imageSize,\n      disabled = props.disabled,\n      checked = props.checked,\n      id = props.id,\n      styles = props.styles,\n      name = props.name,\n      rest = __rest(props, [\"ariaLabel\", \"focused\", \"required\", \"theme\", \"iconProps\", \"imageSrc\", \"imageSize\", \"disabled\", \"checked\", \"id\", \"styles\", \"name\"]);\n\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    hasIcon: !!iconProps,\n    hasImage: !!imageSrc,\n    checked: checked,\n    disabled: disabled,\n    imageIsLarge: !!imageSrc && (imageSize.width > LARGE_IMAGE_SIZE || imageSize.height > LARGE_IMAGE_SIZE),\n    imageSize: imageSize,\n    focused: focused\n  });\n\n  var _a = getNativeProps(rest, inputProperties),\n      className = _a.className,\n      nativeProps = __rest(_a, [\"className\"]);\n\n  var defaultOnRenderLabel = function () {\n    return React.createElement(\"span\", {\n      id: props.labelId,\n      className: \"ms-ChoiceFieldLabel\"\n    }, props.text);\n  };\n\n  var defaultOnRenderField = function () {\n    var _a = props.imageAlt,\n        imageAlt = _a === void 0 ? '' : _a,\n        selectedImageSrc = props.selectedImageSrc;\n    var onRenderLabel = props.onRenderLabel ? composeRenderFunction(props.onRenderLabel, defaultOnRenderLabel) : defaultOnRenderLabel;\n    var label = onRenderLabel(props);\n    return React.createElement(\"label\", {\n      htmlFor: id,\n      className: classNames.field\n    }, imageSrc && React.createElement(\"div\", {\n      className: classNames.innerField\n    }, React.createElement(\"div\", {\n      className: classNames.imageWrapper\n    }, React.createElement(Image, __assign({\n      src: imageSrc,\n      alt: imageAlt\n    }, imageSize))), React.createElement(\"div\", {\n      className: classNames.selectedImageWrapper\n    }, React.createElement(Image, __assign({\n      src: selectedImageSrc,\n      alt: imageAlt\n    }, imageSize)))), iconProps && React.createElement(\"div\", {\n      className: classNames.innerField\n    }, React.createElement(\"div\", {\n      className: classNames.iconWrapper\n    }, React.createElement(Icon, __assign({}, iconProps)))), imageSrc || iconProps ? React.createElement(\"div\", {\n      className: classNames.labelWrapper\n    }, label) : label);\n  };\n\n  var _b = props.onRenderField,\n      onRenderField = _b === void 0 ? defaultOnRenderField : _b;\n\n  var onChange = function (evt) {\n    var _a;\n\n    (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, evt, props);\n  };\n\n  var onBlur = function (evt) {\n    var _a;\n\n    (_a = props.onBlur) === null || _a === void 0 ? void 0 : _a.call(props, evt);\n  };\n\n  var onFocus = function (evt) {\n    var _a;\n\n    (_a = props.onFocus) === null || _a === void 0 ? void 0 : _a.call(props, evt, props);\n  };\n\n  return React.createElement(\"div\", {\n    className: classNames.root\n  }, React.createElement(\"div\", {\n    className: classNames.choiceFieldWrapper\n  }, React.createElement(\"input\", __assign({\n    \"aria-label\": ariaLabel,\n    id: id,\n    className: css(classNames.input, className),\n    type: \"radio\",\n    name: name,\n    disabled: disabled,\n    checked: checked,\n    required: required\n  }, nativeProps, {\n    onChange: onChange,\n    onFocus: onFocus,\n    onBlur: onBlur\n  })), onRenderField(props, defaultOnRenderField)));\n};\nChoiceGroupOptionBase.displayName = 'ChoiceGroupOption';","map":{"version":3,"sources":["components/ChoiceGroup/ChoiceGroupOption/ChoiceGroupOption.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Image } from '../../../Image';\nimport { Icon } from '../../../Icon';\nimport {\n  classNamesFunction,\n  getNativeProps,\n  inputProperties,\n  css,\n  composeRenderFunction,\n  getPropsWithDefaults,\n} from '../../../Utilities';\nimport type {\n  IChoiceGroupOptionProps,\n  IChoiceGroupOptionStyleProps,\n  IChoiceGroupOptionStyles,\n} from './ChoiceGroupOption.types';\n\nconst getClassNames = classNamesFunction<IChoiceGroupOptionStyleProps, IChoiceGroupOptionStyles>();\n\nconst LARGE_IMAGE_SIZE = 71;\n\nconst DEFAULT_PROPS: Partial<IChoiceGroupOptionProps> = {\n  // This ensures default imageSize value doesn't mutate. Mutation can cause style re-calcuation.\n  imageSize: { width: 32, height: 32 },\n};\n\nexport const ChoiceGroupOptionBase: React.FunctionComponent<IChoiceGroupOptionProps> = propsWithoutDefaults => {\n  // Mix the `key` prop back in since custom render functions may be expecting it\n  // (React uses `key` internally rather than passing it through to the component)\n  const props = getPropsWithDefaults({ ...DEFAULT_PROPS, key: propsWithoutDefaults.itemKey }, propsWithoutDefaults);\n\n  const {\n    ariaLabel,\n    focused,\n    required,\n    theme,\n    iconProps,\n    imageSrc,\n    imageSize,\n    disabled,\n    checked,\n    id,\n    styles,\n    name,\n    ...rest\n  } = props;\n\n  const classNames = getClassNames(styles!, {\n    theme: theme!,\n    hasIcon: !!iconProps,\n    hasImage: !!imageSrc,\n    checked,\n    disabled,\n    imageIsLarge: !!imageSrc && (imageSize!.width > LARGE_IMAGE_SIZE || imageSize!.height > LARGE_IMAGE_SIZE),\n    imageSize,\n    focused,\n  });\n\n  const { className, ...nativeProps } = getNativeProps<{ className: string }>(rest, inputProperties);\n\n  const defaultOnRenderLabel = (): JSX.Element => {\n    return (\n      <span id={props.labelId} className=\"ms-ChoiceFieldLabel\">\n        {props.text}\n      </span>\n    );\n  };\n\n  const defaultOnRenderField = (): JSX.Element => {\n    const { imageAlt = '', selectedImageSrc } = props;\n\n    const onRenderLabel = props.onRenderLabel\n      ? composeRenderFunction(props.onRenderLabel, defaultOnRenderLabel)\n      : defaultOnRenderLabel;\n\n    const label = onRenderLabel(props);\n\n    return (\n      <label htmlFor={id} className={classNames.field}>\n        {imageSrc && (\n          <div className={classNames.innerField}>\n            <div className={classNames.imageWrapper}>\n              <Image src={imageSrc} alt={imageAlt} {...imageSize} />\n            </div>\n            <div className={classNames.selectedImageWrapper}>\n              <Image src={selectedImageSrc} alt={imageAlt} {...imageSize} />\n            </div>\n          </div>\n        )}\n        {iconProps && (\n          <div className={classNames.innerField}>\n            <div className={classNames.iconWrapper}>\n              <Icon {...iconProps} />\n            </div>\n          </div>\n        )}\n        {imageSrc || iconProps ? <div className={classNames.labelWrapper}>{label}</div> : label}\n      </label>\n    );\n  };\n\n  const { onRenderField = defaultOnRenderField } = props;\n\n  const onChange = (evt: React.FormEvent<HTMLInputElement>): void => {\n    props.onChange?.(evt, props);\n  };\n\n  const onBlur = (evt: React.FocusEvent<HTMLElement>) => {\n    props.onBlur?.(evt);\n  };\n\n  const onFocus = (evt: React.FocusEvent<HTMLElement>) => {\n    props.onFocus?.(evt, props);\n  };\n\n  return (\n    <div className={classNames.root}>\n      <div className={classNames.choiceFieldWrapper}>\n        <input\n          aria-label={ariaLabel}\n          id={id}\n          className={css(classNames.input, className)}\n          type=\"radio\"\n          name={name}\n          disabled={disabled}\n          checked={checked}\n          required={required}\n          {...nativeProps}\n          onChange={onChange}\n          onFocus={onFocus}\n          onBlur={onBlur}\n        />\n        {onRenderField(props, defaultOnRenderField)}\n      </div>\n    </div>\n  );\n};\nChoiceGroupOptionBase.displayName = 'ChoiceGroupOption';\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}