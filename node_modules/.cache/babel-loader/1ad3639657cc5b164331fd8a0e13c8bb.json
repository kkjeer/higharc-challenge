{"ast":null,"code":"import { __assign, __rest, __spreadArray } from \"tslib\";\nimport * as React from 'react';\nimport { ContextualMenuItemType } from './ContextualMenu.types';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport { FocusZone, FocusZoneDirection, FocusZoneTabbableElements } from '../../FocusZone';\nimport { divProperties, getNativeProps, shallowCompare, assign, classNamesFunction, css, getFirstFocusable, getLastFocusable, getRTL, KeyCodes, shouldWrapFocus, isIOS, isMac, memoizeFunction, getPropsWithDefaults, getDocument } from '../../Utilities';\nimport { hasSubmenu, getIsChecked, isItemDisabled } from '../../utilities/contextualMenu/index';\nimport { Callout } from '../../Callout';\nimport { ContextualMenuItem } from './ContextualMenuItem';\nimport { ContextualMenuSplitButton, ContextualMenuButton, ContextualMenuAnchor } from './ContextualMenuItemWrapper/index';\nimport { concatStyleSetsWithProps } from '../../Styling';\nimport { getItemStyles } from './ContextualMenu.classNames';\nimport { useTarget, usePrevious, useAsync, useWarnings, useId, useIsomorphicLayoutEffect } from '@fluentui/react-hooks';\nimport { useResponsiveMode, ResponsiveMode } from '../../ResponsiveMode';\nimport { MenuContext } from '../../utilities/MenuContext/index';\nvar getClassNames = classNamesFunction();\nvar getContextualMenuItemClassNames = classNamesFunction(); // The default ContextualMenu properties have no items and beak, the default submenu direction is right and top.\n\nvar DEFAULT_PROPS = {\n  items: [],\n  shouldFocusOnMount: true,\n  gapSpace: 0,\n  directionalHint: DirectionalHint.bottomAutoEdge,\n  beakWidth: 16\n};\nexport function getSubmenuItems(item, options) {\n  var target = options === null || options === void 0 ? void 0 : options.target; // eslint-disable-next-line deprecation/deprecation\n\n  var items = item.subMenuProps ? item.subMenuProps.items : item.items;\n\n  if (items) {\n    var overrideItems = [];\n\n    for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n      var subItem = items_1[_i];\n\n      if (subItem.preferMenuTargetAsEventTarget) {\n        // For sub-items which need an overridden target, intercept `onClick`\n        var onClick = subItem.onClick,\n            contextItem = __rest(subItem, [\"onClick\"]);\n\n        overrideItems.push(__assign(__assign({}, contextItem), {\n          onClick: getOnClickWithOverrideTarget(onClick, target)\n        }));\n      } else {\n        overrideItems.push(subItem);\n      }\n    }\n\n    return overrideItems;\n  }\n}\n/**\n * Returns true if a list of menu items can contain a checkbox\n */\n\nexport function canAnyMenuItemsCheck(items) {\n  return items.some(function (item) {\n    if (item.canCheck) {\n      return true;\n    } // If the item is a section, check if any of the items in the section can check.\n\n\n    if (item.sectionProps && item.sectionProps.items.some(function (submenuItem) {\n      return submenuItem.canCheck === true;\n    })) {\n      return true;\n    }\n\n    return false;\n  });\n}\nvar NavigationIdleDelay = 250;\n/* ms */\n\nvar COMPONENT_NAME = 'ContextualMenu';\n\nvar _getMenuItemStylesFunction = memoizeFunction(function () {\n  var styles = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    styles[_i] = arguments[_i];\n  }\n\n  return function (styleProps) {\n    return concatStyleSetsWithProps.apply(void 0, __spreadArray([styleProps, getItemStyles], styles));\n  };\n}); //#region Custom hooks\n\n\nfunction useVisibility(props, targetWindow) {\n  var _a = props.hidden,\n      hidden = _a === void 0 ? false : _a,\n      onMenuDismissed = props.onMenuDismissed,\n      onMenuOpened = props.onMenuOpened;\n  var previousHidden = usePrevious(hidden);\n  var onMenuOpenedRef = React.useRef(onMenuOpened);\n  var onMenuClosedRef = React.useRef(onMenuDismissed);\n  var propsRef = React.useRef(props);\n  onMenuOpenedRef.current = onMenuOpened;\n  onMenuClosedRef.current = onMenuDismissed;\n  propsRef.current = props;\n  React.useEffect(function () {\n    var _a, _b; // Don't issue dismissed callbacks on initial mount\n\n\n    if (hidden && previousHidden === false) {\n      (_a = onMenuClosedRef.current) === null || _a === void 0 ? void 0 : _a.call(onMenuClosedRef, propsRef.current);\n    } else if (!hidden && previousHidden !== false) {\n      (_b = onMenuOpenedRef.current) === null || _b === void 0 ? void 0 : _b.call(onMenuOpenedRef, propsRef.current);\n    }\n  }, [hidden, previousHidden]); // Issue onDismissedCallback on unmount\n\n  React.useEffect(function () {\n    return function () {\n      var _a;\n\n      return (_a = onMenuClosedRef.current) === null || _a === void 0 ? void 0 : _a.call(onMenuClosedRef, propsRef.current);\n    };\n  }, []);\n}\n\nfunction useSubMenuState(_a, dismiss) {\n  var hidden = _a.hidden,\n      items = _a.items,\n      theme = _a.theme,\n      className = _a.className,\n      id = _a.id,\n      menuTarget = _a.target;\n\n  var _b = React.useState(),\n      expandedMenuItemKey = _b[0],\n      setExpandedMenuItemKey = _b[1];\n\n  var _c = React.useState(),\n      submenuTarget = _c[0],\n      setSubmenuTarget = _c[1];\n  /** True if the menu was expanded by mouse click OR hover (as opposed to by keyboard) */\n\n\n  var _d = React.useState(),\n      shouldFocusOnContainer = _d[0],\n      setShouldFocusOnContainer = _d[1];\n\n  var subMenuId = useId(COMPONENT_NAME, id);\n  var closeSubMenu = React.useCallback(function () {\n    setShouldFocusOnContainer(undefined);\n    setExpandedMenuItemKey(undefined);\n    setSubmenuTarget(undefined);\n  }, []);\n  var openSubMenu = React.useCallback(function (_a, target, focusContainer) {\n    var submenuItemKey = _a.key;\n\n    if (expandedMenuItemKey === submenuItemKey) {\n      return;\n    }\n\n    target.focus();\n    setShouldFocusOnContainer(focusContainer);\n    setExpandedMenuItemKey(submenuItemKey);\n    setSubmenuTarget(target);\n  }, [expandedMenuItemKey]);\n  React.useEffect(function () {\n    if (hidden) {\n      closeSubMenu();\n    }\n  }, [hidden, closeSubMenu]);\n  var onSubMenuDismiss = useOnSubmenuDismiss(dismiss, closeSubMenu);\n\n  var getSubmenuProps = function () {\n    var item = findItemByKeyFromItems(expandedMenuItemKey, items);\n    var submenuProps = null;\n\n    if (item) {\n      submenuProps = {\n        items: getSubmenuItems(item, {\n          target: menuTarget\n        }),\n        target: submenuTarget,\n        onDismiss: onSubMenuDismiss,\n        isSubMenu: true,\n        id: subMenuId,\n        shouldFocusOnMount: true,\n        shouldFocusOnContainer: shouldFocusOnContainer,\n        directionalHint: getRTL(theme) ? DirectionalHint.leftTopEdge : DirectionalHint.rightTopEdge,\n        className: className,\n        gapSpace: 0,\n        isBeakVisible: false\n      };\n\n      if (item.subMenuProps) {\n        assign(submenuProps, item.subMenuProps);\n      }\n\n      if (item.preferMenuTargetAsEventTarget) {\n        var onItemClick = item.onItemClick;\n        submenuProps.onItemClick = getOnClickWithOverrideTarget(onItemClick, menuTarget);\n      }\n    }\n\n    return submenuProps;\n  };\n\n  return [expandedMenuItemKey, openSubMenu, getSubmenuProps, onSubMenuDismiss];\n}\n\nfunction useShouldUpdateFocusOnMouseMove(_a) {\n  var delayUpdateFocusOnHover = _a.delayUpdateFocusOnHover,\n      hidden = _a.hidden;\n  var shouldUpdateFocusOnMouseEvent = React.useRef(!delayUpdateFocusOnHover);\n  var gotMouseMove = React.useRef(false);\n  React.useEffect(function () {\n    shouldUpdateFocusOnMouseEvent.current = !delayUpdateFocusOnHover;\n    gotMouseMove.current = hidden ? false : !delayUpdateFocusOnHover && gotMouseMove.current;\n  }, [delayUpdateFocusOnHover, hidden]);\n  var onMenuFocusCapture = React.useCallback(function () {\n    if (delayUpdateFocusOnHover) {\n      shouldUpdateFocusOnMouseEvent.current = false;\n    }\n  }, [delayUpdateFocusOnHover]);\n  return [shouldUpdateFocusOnMouseEvent, gotMouseMove, onMenuFocusCapture];\n}\n\nfunction usePreviousActiveElement(_a, targetWindow) {\n  var hidden = _a.hidden,\n      onRestoreFocus = _a.onRestoreFocus;\n  var previousActiveElement = React.useRef();\n  var tryFocusPreviousActiveElement = React.useCallback(function (options) {\n    var _a, _b;\n\n    if (onRestoreFocus) {\n      onRestoreFocus(options);\n    } else if (options === null || options === void 0 ? void 0 : options.documentContainsFocus) {\n      // Make sure that the focus method actually exists\n      // In some cases the object might exist but not be a real element.\n      // This is primarily for IE 11 and should be removed once IE 11 is no longer in use.\n      (_b = (_a = previousActiveElement.current) === null || _a === void 0 ? void 0 : _a.focus) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n  }, [onRestoreFocus]);\n  useIsomorphicLayoutEffect(function () {\n    var _a;\n\n    if (!hidden) {\n      previousActiveElement.current = targetWindow === null || targetWindow === void 0 ? void 0 : targetWindow.document.activeElement;\n    } else if (previousActiveElement.current) {\n      tryFocusPreviousActiveElement({\n        originalElement: previousActiveElement.current,\n        containsFocus: true,\n        documentContainsFocus: ((_a = getDocument()) === null || _a === void 0 ? void 0 : _a.hasFocus()) || false\n      });\n      previousActiveElement.current = undefined;\n    }\n  }, [hidden, targetWindow === null || targetWindow === void 0 ? void 0 : targetWindow.document.activeElement, tryFocusPreviousActiveElement]);\n  return [tryFocusPreviousActiveElement];\n}\n\nfunction useKeyHandlers(_a, dismiss, hostElement, openSubMenu) {\n  var theme = _a.theme,\n      isSubMenu = _a.isSubMenu,\n      _b = _a.focusZoneProps,\n      _c = _b === void 0 ? {} : _b,\n      checkForNoWrap = _c.checkForNoWrap,\n      _d = _c.direction,\n      focusZoneDirection = _d === void 0 ? FocusZoneDirection.vertical : _d;\n  /** True if the most recent keydown event was for alt (option) or meta (command). */\n\n\n  var lastKeyDownWasAltOrMeta = React.useRef();\n  /**\n   * Calls `shouldHandleKey` to determine whether the keyboard event should be handled;\n   * if so, stops event propagation and dismisses menu(s).\n   * @param ev - The keyboard event.\n   * @param shouldHandleKey - Returns whether we should handle this keyboard event.\n   * @param dismissAllMenus - If true, dismiss all menus. Otherwise, dismiss only the current menu.\n   * Only does anything if `shouldHandleKey` returns true.\n   * @returns Whether the event was handled.\n   */\n\n  var keyHandler = function (ev, shouldHandleKey, dismissAllMenus) {\n    var handled = false;\n\n    if (shouldHandleKey(ev)) {\n      dismiss(ev, dismissAllMenus);\n      ev.preventDefault();\n      ev.stopPropagation();\n      handled = true;\n    }\n\n    return handled;\n  };\n  /**\n   * Checks if the submenu should be closed\n   */\n\n\n  var shouldCloseSubMenu = function (ev) {\n    var submenuCloseKey = getRTL(theme) ? KeyCodes.right : KeyCodes.left; // eslint-disable-next-line deprecation/deprecation\n\n    if (ev.which !== submenuCloseKey || !isSubMenu) {\n      return false;\n    }\n\n    return !!(focusZoneDirection === FocusZoneDirection.vertical || checkForNoWrap && !shouldWrapFocus(ev.target, 'data-no-horizontal-wrap'));\n  };\n\n  var shouldHandleKeyDown = function (ev) {\n    return (// eslint-disable-next-line deprecation/deprecation\n      ev.which === KeyCodes.escape || shouldCloseSubMenu(ev) || // eslint-disable-next-line deprecation/deprecation\n      ev.which === KeyCodes.up && (ev.altKey || ev.metaKey)\n    );\n  };\n\n  var onKeyDown = function (ev) {\n    // Take note if we are processing an alt (option) or meta (command) keydown.\n    // See comment in shouldHandleKeyUp for reasoning.\n    lastKeyDownWasAltOrMeta.current = isAltOrMeta(ev); // On Mac, pressing escape dismisses all levels of native context menus\n    // eslint-disable-next-line deprecation/deprecation\n\n    var dismissAllMenus = ev.which === KeyCodes.escape && (isMac() || isIOS());\n    return keyHandler(ev, shouldHandleKeyDown, dismissAllMenus);\n  };\n  /**\n   * We close the menu on key up only if ALL of the following are true:\n   * - Most recent key down was alt or meta (command)\n   * - The alt/meta key down was NOT followed by some other key (such as down/up arrow to\n   *   expand/collapse the menu)\n   * - We're not on a Mac (or iOS)\n   *\n   * This is because on Windows, pressing alt moves focus to the application menu bar or similar,\n   * closing any open context menus. There is not a similar behavior on Macs.\n   */\n\n\n  var shouldHandleKeyUp = function (ev) {\n    var keyPressIsAltOrMetaAlone = lastKeyDownWasAltOrMeta.current && isAltOrMeta(ev);\n    lastKeyDownWasAltOrMeta.current = false;\n    return !!keyPressIsAltOrMetaAlone && !(isIOS() || isMac());\n  };\n\n  var onKeyUp = function (ev) {\n    return keyHandler(ev, shouldHandleKeyUp, true\n    /* dismissAllMenus */\n    );\n  };\n\n  var onMenuKeyDown = function (ev) {\n    // Mark as handled if onKeyDown returns true (for handling collapse cases)\n    // or if we are attempting to expand a submenu\n    var handled = onKeyDown(ev);\n\n    if (handled || !hostElement.current) {\n      return;\n    } // If we have a modifier key being pressed, we do not want to move focus.\n    // Otherwise, handle up and down keys.\n\n\n    var hasModifier = !!(ev.altKey || ev.metaKey); // eslint-disable-next-line deprecation/deprecation\n\n    var isUp = ev.which === KeyCodes.up; // eslint-disable-next-line deprecation/deprecation\n\n    var isDown = ev.which === KeyCodes.down;\n\n    if (!hasModifier && (isUp || isDown)) {\n      var elementToFocus = isUp ? getLastFocusable(hostElement.current, hostElement.current.lastChild, true) : getFirstFocusable(hostElement.current, hostElement.current.firstChild, true);\n\n      if (elementToFocus) {\n        elementToFocus.focus();\n        ev.preventDefault();\n        ev.stopPropagation();\n      }\n    }\n  };\n\n  var onItemKeyDown = function (item, ev) {\n    var openKey = getRTL(theme) ? KeyCodes.left : KeyCodes.right;\n\n    if (!item.disabled && ( // eslint-disable-next-line deprecation/deprecation\n    ev.which === openKey || ev.which === KeyCodes.enter || ev.which === KeyCodes.down && (ev.altKey || ev.metaKey))) {\n      openSubMenu(item, ev.currentTarget);\n      ev.preventDefault();\n    }\n  };\n\n  return [onKeyDown, onKeyUp, onMenuKeyDown, onItemKeyDown];\n}\n\nfunction useScrollHandler(asyncTracker) {\n  var isScrollIdle = React.useRef(true);\n  var scrollIdleTimeoutId = React.useRef();\n  /**\n   * Scroll handler for the callout to make sure the mouse events\n   * for updating focus are not interacting during scroll\n   */\n\n  var onScroll = function () {\n    if (!isScrollIdle.current && scrollIdleTimeoutId.current !== undefined) {\n      asyncTracker.clearTimeout(scrollIdleTimeoutId.current);\n      scrollIdleTimeoutId.current = undefined;\n    } else {\n      isScrollIdle.current = false;\n    }\n\n    scrollIdleTimeoutId.current = asyncTracker.setTimeout(function () {\n      isScrollIdle.current = true;\n    }, NavigationIdleDelay);\n  };\n\n  return [onScroll, isScrollIdle];\n}\n\nfunction useOnSubmenuDismiss(dismiss, closeSubMenu) {\n  var isMountedRef = React.useRef(false);\n  React.useEffect(function () {\n    isMountedRef.current = true;\n    return function () {\n      isMountedRef.current = false;\n    };\n  }, []);\n  /**\n   * This function is called ASYNCHRONOUSLY, and so there is a chance it is called\n   * after the component is unmounted. The isMountedRef is added to prevent\n   * from calling setState() after unmount. Do NOT copy this pattern in synchronous\n   * code.\n   */\n\n  var onSubMenuDismiss = function (ev, dismissAll) {\n    if (dismissAll) {\n      dismiss(ev, dismissAll);\n    } else if (isMountedRef.current) {\n      closeSubMenu();\n    }\n  };\n\n  return onSubMenuDismiss;\n}\n\nfunction useSubmenuEnterTimer(_a, asyncTracker) {\n  var _b = _a.subMenuHoverDelay,\n      subMenuHoverDelay = _b === void 0 ? NavigationIdleDelay : _b;\n  var enterTimerRef = React.useRef(undefined);\n\n  var cancelSubMenuTimer = function () {\n    if (enterTimerRef.current !== undefined) {\n      asyncTracker.clearTimeout(enterTimerRef.current);\n      enterTimerRef.current = undefined;\n    }\n  };\n\n  var startSubmenuTimer = function (onTimerExpired) {\n    enterTimerRef.current = asyncTracker.setTimeout(function () {\n      onTimerExpired();\n      cancelSubMenuTimer();\n    }, subMenuHoverDelay);\n  };\n\n  return [cancelSubMenuTimer, startSubmenuTimer, enterTimerRef];\n}\n\nfunction useMouseHandlers(props, isScrollIdle, subMenuEntryTimer, targetWindow, shouldUpdateFocusOnMouseEvent, gotMouseMove, expandedMenuItemKey, hostElement, startSubmenuTimer, cancelSubMenuTimer, openSubMenu, onSubMenuDismiss, dismiss) {\n  var menuTarget = props.target;\n\n  var onItemMouseEnterBase = function (item, ev, target) {\n    if (shouldUpdateFocusOnMouseEvent.current) {\n      gotMouseMove.current = true;\n    }\n\n    if (shouldIgnoreMouseEvent()) {\n      return;\n    }\n\n    updateFocusOnMouseEvent(item, ev, target);\n  };\n\n  var onItemMouseMoveBase = function (item, ev, target) {\n    var targetElement = ev.currentTarget; // Always do this check to make sure we record a mouseMove if needed (even if we are timed out)\n\n    if (shouldUpdateFocusOnMouseEvent.current) {\n      gotMouseMove.current = true;\n    } else {\n      return;\n    }\n\n    if (!isScrollIdle.current || subMenuEntryTimer.current !== undefined || targetElement === (targetWindow === null || targetWindow === void 0 ? void 0 : targetWindow.document.activeElement)) {\n      return;\n    }\n\n    updateFocusOnMouseEvent(item, ev, target);\n  };\n\n  var shouldIgnoreMouseEvent = function () {\n    return !isScrollIdle.current || !gotMouseMove.current;\n  };\n\n  var onMouseItemLeave = function (item, ev) {\n    var _a;\n\n    if (shouldIgnoreMouseEvent()) {\n      return;\n    }\n\n    cancelSubMenuTimer();\n\n    if (expandedMenuItemKey !== undefined) {\n      return;\n    }\n    /**\n     * IE11 focus() method forces parents to scroll to top of element.\n     * Edge and IE expose a setActive() function for focusable divs that\n     * sets the page focus but does not scroll the parent element.\n     */\n\n\n    if (hostElement.current.setActive) {\n      try {\n        hostElement.current.setActive();\n      } catch (e) {\n        /* no-op */\n      }\n    } else {\n      (_a = hostElement.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  };\n  /**\n   * Handles updating focus when mouseEnter or mouseMove fire.\n   * As part of updating focus, This function will also update\n   * the expand/collapse state accordingly.\n   */\n\n\n  var updateFocusOnMouseEvent = function (item, ev, target) {\n    var targetElement = target ? target : ev.currentTarget;\n\n    if (item.key === expandedMenuItemKey) {\n      return;\n    }\n\n    cancelSubMenuTimer(); // If the menu is not expanded we can update focus without any delay\n\n    if (expandedMenuItemKey === undefined) {\n      targetElement.focus();\n    } // Delay updating expanding/dismissing the submenu\n    // and only set focus if we have not already done so\n\n\n    if (hasSubmenu(item)) {\n      ev.stopPropagation();\n      startSubmenuTimer(function () {\n        targetElement.focus();\n        openSubMenu(item, targetElement, true);\n      });\n    } else {\n      startSubmenuTimer(function () {\n        onSubMenuDismiss(ev);\n        targetElement.focus();\n      });\n    }\n  };\n\n  var onItemClick = function (item, ev) {\n    onItemClickBase(item, ev, ev.currentTarget);\n  };\n\n  var onItemClickBase = function (item, ev, target) {\n    var items = getSubmenuItems(item, {\n      target: menuTarget\n    }); // Cancel an async menu item hover timeout action from being taken and instead\n    // just trigger the click event instead.\n\n    cancelSubMenuTimer();\n\n    if (!hasSubmenu(item) && (!items || !items.length)) {\n      // This is an item without a menu. Click it.\n      executeItemClick(item, ev);\n    } else {\n      if (item.key !== expandedMenuItemKey) {\n        // This has a collapsed sub menu. Expand it.\n        // focus on the container by default when the menu is opened with a click event\n        // this differentiates from a keyboard interaction triggering the click event\n        var shouldFocusOnContainer = typeof props.shouldFocusOnContainer === 'boolean' ? props.shouldFocusOnContainer : ev.nativeEvent.pointerType === 'mouse';\n        openSubMenu(item, target, shouldFocusOnContainer);\n      }\n    }\n\n    ev.stopPropagation();\n    ev.preventDefault();\n  };\n\n  var onAnchorClick = function (item, ev) {\n    executeItemClick(item, ev);\n    ev.stopPropagation();\n  };\n\n  var executeItemClick = function (item, ev) {\n    if (item.disabled || item.isDisabled) {\n      return;\n    }\n\n    if (item.preferMenuTargetAsEventTarget) {\n      overrideTarget(ev, menuTarget);\n    }\n\n    var shouldDismiss = false;\n\n    if (item.onClick) {\n      shouldDismiss = !!item.onClick(ev, item);\n    } else if (props.onItemClick) {\n      shouldDismiss = !!props.onItemClick(ev, item);\n    }\n\n    if (shouldDismiss || !ev.defaultPrevented) {\n      dismiss(ev, true);\n    }\n  };\n\n  return [onItemMouseEnterBase, onItemMouseMoveBase, onMouseItemLeave, onItemClick, onAnchorClick, executeItemClick, onItemClickBase];\n} //#endregion\n\n\nexport var ContextualMenuBase = React.memo(React.forwardRef(function (propsWithoutDefaults, forwardedRef) {\n  var _a;\n\n  var _b = getPropsWithDefaults(DEFAULT_PROPS, propsWithoutDefaults),\n      ref = _b.ref,\n      props = __rest(_b, [\"ref\"]);\n\n  var hostElement = React.useRef(null);\n  var asyncTracker = useAsync();\n  var menuId = useId(COMPONENT_NAME, props.id);\n  useWarnings({\n    name: COMPONENT_NAME,\n    props: props,\n    deprecations: {\n      getMenuClassNames: 'styles'\n    }\n  });\n\n  var dismiss = function (ev, dismissAll) {\n    var _a;\n\n    return (_a = props.onDismiss) === null || _a === void 0 ? void 0 : _a.call(props, ev, dismissAll);\n  };\n\n  var _c = useTarget(props.target, hostElement),\n      targetRef = _c[0],\n      targetWindow = _c[1];\n\n  var tryFocusPreviousActiveElement = usePreviousActiveElement(props, targetWindow)[0];\n\n  var _d = useSubMenuState(props, dismiss),\n      expandedMenuItemKey = _d[0],\n      openSubMenu = _d[1],\n      getSubmenuProps = _d[2],\n      onSubMenuDismiss = _d[3];\n\n  var _e = useShouldUpdateFocusOnMouseMove(props),\n      shouldUpdateFocusOnMouseEvent = _e[0],\n      gotMouseMove = _e[1],\n      onMenuFocusCapture = _e[2];\n\n  var _f = useScrollHandler(asyncTracker),\n      onScroll = _f[0],\n      isScrollIdle = _f[1];\n\n  var _g = useSubmenuEnterTimer(props, asyncTracker),\n      cancelSubMenuTimer = _g[0],\n      startSubmenuTimer = _g[1],\n      subMenuEntryTimer = _g[2];\n\n  var responsiveMode = useResponsiveMode(hostElement, props.responsiveMode);\n  useVisibility(props, targetWindow);\n\n  var _h = useKeyHandlers(props, dismiss, hostElement, openSubMenu),\n      onKeyDown = _h[0],\n      onKeyUp = _h[1],\n      onMenuKeyDown = _h[2],\n      onItemKeyDown = _h[3];\n\n  var _j = useMouseHandlers(props, isScrollIdle, subMenuEntryTimer, targetWindow, shouldUpdateFocusOnMouseEvent, gotMouseMove, expandedMenuItemKey, hostElement, startSubmenuTimer, cancelSubMenuTimer, openSubMenu, onSubMenuDismiss, dismiss),\n      onItemMouseEnterBase = _j[0],\n      onItemMouseMoveBase = _j[1],\n      onMouseItemLeave = _j[2],\n      onItemClick = _j[3],\n      onAnchorClick = _j[4],\n      executeItemClick = _j[5],\n      onItemClickBase = _j[6]; //#region Render helpers\n\n\n  var onDefaultRenderMenuList = function (menuListProps, // eslint-disable-next-line deprecation/deprecation\n  menuClassNames, defaultRender) {\n    var indexCorrection = 0;\n    var items = menuListProps.items,\n        totalItemCount = menuListProps.totalItemCount,\n        hasCheckmarks = menuListProps.hasCheckmarks,\n        hasIcons = menuListProps.hasIcons;\n    return React.createElement(\"ul\", {\n      className: menuClassNames.list,\n      onKeyDown: onKeyDown,\n      onKeyUp: onKeyUp,\n      role: 'presentation'\n    }, items.map(function (item, index) {\n      var menuItem = renderMenuItem(item, index, indexCorrection, totalItemCount, hasCheckmarks, hasIcons, menuClassNames);\n\n      if (item.itemType !== ContextualMenuItemType.Divider && item.itemType !== ContextualMenuItemType.Header) {\n        var indexIncrease = item.customOnRenderListLength ? item.customOnRenderListLength : 1;\n        indexCorrection += indexIncrease;\n      }\n\n      return menuItem;\n    }));\n  };\n\n  var renderFocusZone = function (children, adjustedFocusZoneProps) {\n    var _a = props.focusZoneAs,\n        ChildrenRenderer = _a === void 0 ? FocusZone : _a;\n    return React.createElement(ChildrenRenderer, __assign({}, adjustedFocusZoneProps), children);\n  };\n  /**\n   * !!!IMPORTANT!!! Avoid mutating `item: IContextualMenuItem` argument. It will\n   * cause the menu items to always re-render because the component update is based on shallow comparison.\n   */\n\n\n  var renderMenuItem = function (item, index, focusableElementIndex, totalItemCount, hasCheckmarks, hasIcons, // eslint-disable-next-line deprecation/deprecation\n  menuClassNames) {\n    var _a;\n\n    var renderedItems = [];\n    var iconProps = item.iconProps || {\n      iconName: 'None'\n    };\n    var getItemClassNames = item.getItemClassNames,\n        // eslint-disable-line deprecation/deprecation\n    itemProps = item.itemProps;\n    var styles = itemProps ? itemProps.styles : undefined; // We only send a dividerClassName when the item to be rendered is a divider.\n    // For all other cases, the default divider style is used.\n\n    var dividerClassName = item.itemType === ContextualMenuItemType.Divider ? item.className : undefined;\n    var subMenuIconClassName = item.submenuIconProps ? item.submenuIconProps.className : ''; // eslint-disable-next-line deprecation/deprecation\n\n    var itemClassNames; // IContextualMenuItem#getItemClassNames for backwards compatibility\n    // otherwise uses mergeStyles for class names.\n\n    if (getItemClassNames) {\n      itemClassNames = getItemClassNames(props.theme, isItemDisabled(item), expandedMenuItemKey === item.key, !!getIsChecked(item), !!item.href, iconProps.iconName !== 'None', item.className, dividerClassName, iconProps.className, subMenuIconClassName, item.primaryDisabled);\n    } else {\n      var itemStyleProps = {\n        theme: props.theme,\n        disabled: isItemDisabled(item),\n        expanded: expandedMenuItemKey === item.key,\n        checked: !!getIsChecked(item),\n        isAnchorLink: !!item.href,\n        knownIcon: iconProps.iconName !== 'None',\n        itemClassName: item.className,\n        dividerClassName: dividerClassName,\n        iconClassName: iconProps.className,\n        subMenuClassName: subMenuIconClassName,\n        primaryDisabled: item.primaryDisabled\n      }; // We need to generate default styles then override if styles are provided\n      // since the ContextualMenu currently handles item classNames.\n\n      itemClassNames = getContextualMenuItemClassNames(_getMenuItemStylesFunction((_a = menuClassNames.subComponentStyles) === null || _a === void 0 ? void 0 : _a.menuItem, styles), itemStyleProps);\n    } // eslint-disable-next-line deprecation/deprecation\n\n\n    if (item.text === '-' || item.name === '-') {\n      item.itemType = ContextualMenuItemType.Divider;\n    }\n\n    switch (item.itemType) {\n      case ContextualMenuItemType.Divider:\n        renderedItems.push(renderSeparator(index, itemClassNames));\n        break;\n\n      case ContextualMenuItemType.Header:\n        renderedItems.push(renderSeparator(index, itemClassNames));\n        var headerItem = renderHeaderMenuItem(item, itemClassNames, menuClassNames, index, hasCheckmarks, hasIcons);\n        renderedItems.push(renderListItem(headerItem, item.key || index, itemClassNames, item.title));\n        break;\n\n      case ContextualMenuItemType.Section:\n        renderedItems.push(renderSectionItem(item, itemClassNames, menuClassNames, index, hasCheckmarks, hasIcons));\n        break;\n\n      default:\n        var defaultRenderNormalItem = function () {\n          return renderNormalItem(item, itemClassNames, index, focusableElementIndex, totalItemCount, hasCheckmarks, hasIcons);\n        };\n\n        var menuItem = props.onRenderContextualMenuItem ? props.onRenderContextualMenuItem(item, defaultRenderNormalItem) : defaultRenderNormalItem();\n        renderedItems.push(renderListItem(menuItem, item.key || index, itemClassNames, item.title));\n        break;\n    } // Since multiple nodes *could* be rendered, wrap them all in a fragment with this item's key.\n    // This ensures the reconciler handles multi-item output per-node correctly and does not re-mount content.\n\n\n    return React.createElement(React.Fragment, {\n      key: item.key\n    }, renderedItems);\n  };\n\n  var defaultMenuItemRenderer = function (item, // eslint-disable-next-line deprecation/deprecation\n  menuClassNames) {\n    var index = item.index,\n        focusableElementIndex = item.focusableElementIndex,\n        totalItemCount = item.totalItemCount,\n        hasCheckmarks = item.hasCheckmarks,\n        hasIcons = item.hasIcons;\n    return renderMenuItem(item, index, focusableElementIndex, totalItemCount, hasCheckmarks, hasIcons, menuClassNames);\n  };\n\n  var renderSectionItem = function (sectionItem, // eslint-disable-next-line deprecation/deprecation\n  itemClassNames, // eslint-disable-next-line deprecation/deprecation\n  menuClassNames, index, hasCheckmarks, hasIcons) {\n    var sectionProps = sectionItem.sectionProps;\n\n    if (!sectionProps) {\n      return;\n    }\n\n    var headerItem;\n    var groupProps;\n\n    if (sectionProps.title) {\n      var headerContextualMenuItem = undefined;\n      var ariaLabelledby = '';\n\n      if (typeof sectionProps.title === 'string') {\n        // Since title is a user-facing string, it needs to be stripped\n        // of whitespace in order to build a valid element ID\n        var id_1 = menuId + sectionProps.title.replace(/\\s/g, '');\n        headerContextualMenuItem = {\n          key: \"section-\" + sectionProps.title + \"-title\",\n          itemType: ContextualMenuItemType.Header,\n          text: sectionProps.title,\n          id: id_1\n        };\n        ariaLabelledby = id_1;\n      } else {\n        var id_2 = sectionProps.title.id || menuId + sectionProps.title.key.replace(/\\s/g, '');\n        headerContextualMenuItem = __assign(__assign({}, sectionProps.title), {\n          id: id_2\n        });\n        ariaLabelledby = id_2;\n      }\n\n      if (headerContextualMenuItem) {\n        groupProps = {\n          role: 'group',\n          'aria-labelledby': ariaLabelledby\n        };\n        headerItem = renderHeaderMenuItem(headerContextualMenuItem, itemClassNames, menuClassNames, index, hasCheckmarks, hasIcons);\n      }\n    }\n\n    if (sectionProps.items && sectionProps.items.length > 0) {\n      return React.createElement(\"li\", {\n        role: \"presentation\",\n        key: sectionProps.key || sectionItem.key || \"section-\" + index\n      }, React.createElement(\"div\", __assign({}, groupProps), React.createElement(\"ul\", {\n        className: menuClassNames.list,\n        role: \"presentation\"\n      }, sectionProps.topDivider && renderSeparator(index, itemClassNames, true, true), headerItem && renderListItem(headerItem, sectionItem.key || index, itemClassNames, sectionItem.title), sectionProps.items.map(function (contextualMenuItem, itemsIndex) {\n        return renderMenuItem(contextualMenuItem, itemsIndex, itemsIndex, sectionProps.items.length, hasCheckmarks, hasIcons, menuClassNames);\n      }), sectionProps.bottomDivider && renderSeparator(index, itemClassNames, false, true))));\n    }\n  };\n\n  var renderListItem = function (content, key, classNames, // eslint-disable-line deprecation/deprecation\n  title) {\n    return React.createElement(\"li\", {\n      role: \"presentation\",\n      title: title,\n      key: key,\n      className: classNames.item\n    }, content);\n  };\n\n  var renderSeparator = function (index, classNames, // eslint-disable-line deprecation/deprecation\n  top, fromSection) {\n    if (fromSection || index > 0) {\n      return React.createElement(\"li\", {\n        role: \"separator\",\n        key: 'separator-' + index + (top === undefined ? '' : top ? '-top' : '-bottom'),\n        className: classNames.divider,\n        \"aria-hidden\": \"true\"\n      });\n    }\n\n    return null;\n  };\n\n  var renderNormalItem = function (item, classNames, // eslint-disable-line deprecation/deprecation\n  index, focusableElementIndex, totalItemCount, hasCheckmarks, hasIcons) {\n    if (item.onRender) {\n      return item.onRender(__assign({\n        'aria-posinset': focusableElementIndex + 1,\n        'aria-setsize': totalItemCount\n      }, item), dismiss);\n    }\n\n    var contextualMenuItemAs = props.contextualMenuItemAs;\n    var commonProps = {\n      item: item,\n      classNames: classNames,\n      index: index,\n      focusableElementIndex: focusableElementIndex,\n      totalItemCount: totalItemCount,\n      hasCheckmarks: hasCheckmarks,\n      hasIcons: hasIcons,\n      contextualMenuItemAs: contextualMenuItemAs,\n      onItemMouseEnter: onItemMouseEnterBase,\n      onItemMouseLeave: onMouseItemLeave,\n      onItemMouseMove: onItemMouseMoveBase,\n      onItemMouseDown: onItemMouseDown,\n      executeItemClick: executeItemClick,\n      onItemKeyDown: onItemKeyDown,\n      expandedMenuItemKey: expandedMenuItemKey,\n      openSubMenu: openSubMenu,\n      dismissSubMenu: onSubMenuDismiss,\n      dismissMenu: dismiss\n    };\n\n    if (item.href) {\n      return React.createElement(ContextualMenuAnchor, __assign({}, commonProps, {\n        onItemClick: onAnchorClick\n      }));\n    }\n\n    if (item.split && hasSubmenu(item)) {\n      return React.createElement(ContextualMenuSplitButton, __assign({}, commonProps, {\n        onItemClick: onItemClick,\n        onItemClickBase: onItemClickBase,\n        onTap: cancelSubMenuTimer\n      }));\n    }\n\n    return React.createElement(ContextualMenuButton, __assign({}, commonProps, {\n      onItemClick: onItemClick,\n      onItemClickBase: onItemClickBase\n    }));\n  };\n\n  var renderHeaderMenuItem = function (item, // eslint-disable-next-line deprecation/deprecation\n  itemClassNames, // eslint-disable-next-line deprecation/deprecation\n  menuClassNames, index, hasCheckmarks, hasIcons) {\n    var _a = props.contextualMenuItemAs,\n        ChildrenRenderer = _a === void 0 ? ContextualMenuItem : _a;\n    var itemProps = item.itemProps,\n        id = item.id;\n    var divHtmlProperties = itemProps && getNativeProps(itemProps, divProperties);\n    return (// eslint-disable-next-line deprecation/deprecation\n      React.createElement(\"div\", __assign({\n        id: id,\n        className: menuClassNames.header\n      }, divHtmlProperties, {\n        style: item.style\n      }), React.createElement(ChildrenRenderer, __assign({\n        item: item,\n        classNames: itemClassNames,\n        index: index,\n        onCheckmarkClick: hasCheckmarks ? onItemClick : undefined,\n        hasIcons: hasIcons\n      }, itemProps)))\n    );\n  }; //#endregion\n  //#region Main render\n\n\n  var isBeakVisible = props.isBeakVisible;\n  var items = props.items,\n      labelElementId = props.labelElementId,\n      id = props.id,\n      className = props.className,\n      beakWidth = props.beakWidth,\n      directionalHint = props.directionalHint,\n      directionalHintForRTL = props.directionalHintForRTL,\n      alignTargetEdge = props.alignTargetEdge,\n      gapSpace = props.gapSpace,\n      coverTarget = props.coverTarget,\n      ariaLabel = props.ariaLabel,\n      doNotLayer = props.doNotLayer,\n      target = props.target,\n      bounds = props.bounds,\n      useTargetWidth = props.useTargetWidth,\n      useTargetAsMinWidth = props.useTargetAsMinWidth,\n      directionalHintFixed = props.directionalHintFixed,\n      shouldFocusOnMount = props.shouldFocusOnMount,\n      shouldFocusOnContainer = props.shouldFocusOnContainer,\n      title = props.title,\n      styles = props.styles,\n      theme = props.theme,\n      calloutProps = props.calloutProps,\n      _k = props.onRenderSubMenu,\n      onRenderSubMenu = _k === void 0 ? onDefaultRenderSubMenu : _k,\n      _l = props.onRenderMenuList,\n      onRenderMenuList = _l === void 0 ? function (menuListProps, defaultRender) {\n    return onDefaultRenderMenuList(menuListProps, classNames, defaultRender);\n  } : _l,\n      focusZoneProps = props.focusZoneProps,\n      // eslint-disable-next-line deprecation/deprecation\n  getMenuClassNames = props.getMenuClassNames;\n  var classNames = getMenuClassNames ? getMenuClassNames(theme, className) : getClassNames(styles, {\n    theme: theme,\n    className: className\n  });\n  var hasIcons = itemsHaveIcons(items);\n\n  function itemsHaveIcons(contextualMenuItems) {\n    for (var _i = 0, contextualMenuItems_1 = contextualMenuItems; _i < contextualMenuItems_1.length; _i++) {\n      var item = contextualMenuItems_1[_i];\n\n      if (item.iconProps) {\n        return true;\n      }\n\n      if (item.itemType === ContextualMenuItemType.Section && item.sectionProps && itemsHaveIcons(item.sectionProps.items)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  var adjustedFocusZoneProps = __assign(__assign({\n    direction: FocusZoneDirection.vertical,\n    handleTabKey: FocusZoneTabbableElements.all,\n    isCircularNavigation: true\n  }, focusZoneProps), {\n    className: css(classNames.root, (_a = props.focusZoneProps) === null || _a === void 0 ? void 0 : _a.className)\n  });\n\n  var hasCheckmarks = canAnyMenuItemsCheck(items);\n  var submenuProps = expandedMenuItemKey && props.hidden !== true ? getSubmenuProps() : null;\n  isBeakVisible = isBeakVisible === undefined ? responsiveMode <= ResponsiveMode.medium : isBeakVisible;\n  /**\n   * When useTargetWidth is true, get the width of the target element and apply it for the context menu container\n   */\n\n  var contextMenuStyle;\n  var targetAsHtmlElement = targetRef.current;\n\n  if ((useTargetWidth || useTargetAsMinWidth) && targetAsHtmlElement && targetAsHtmlElement.offsetWidth) {\n    var targetBoundingRect = targetAsHtmlElement.getBoundingClientRect();\n    var targetWidth = targetBoundingRect.width - 2;\n    /* Accounts for 1px border */\n\n    if (useTargetWidth) {\n      contextMenuStyle = {\n        width: targetWidth\n      };\n    } else if (useTargetAsMinWidth) {\n      contextMenuStyle = {\n        minWidth: targetWidth\n      };\n    }\n  } // The menu should only return if items were provided, if no items were provided then it should not appear.\n\n\n  if (items && items.length > 0) {\n    var totalItemCount_1 = 0;\n\n    for (var _i = 0, items_2 = items; _i < items_2.length; _i++) {\n      var item = items_2[_i];\n\n      if (item.itemType !== ContextualMenuItemType.Divider && item.itemType !== ContextualMenuItemType.Header) {\n        var itemCount = item.customOnRenderListLength ? item.customOnRenderListLength : 1;\n        totalItemCount_1 += itemCount;\n      }\n    }\n\n    var calloutStyles_1 = classNames.subComponentStyles ? classNames.subComponentStyles.callout : undefined;\n    return React.createElement(MenuContext.Consumer, null, function (menuContext) {\n      return React.createElement(Callout, __assign({\n        styles: calloutStyles_1,\n        onRestoreFocus: tryFocusPreviousActiveElement\n      }, calloutProps, {\n        target: target || menuContext.target,\n        isBeakVisible: isBeakVisible,\n        beakWidth: beakWidth,\n        directionalHint: directionalHint,\n        directionalHintForRTL: directionalHintForRTL,\n        gapSpace: gapSpace,\n        coverTarget: coverTarget,\n        doNotLayer: doNotLayer,\n        className: css('ms-ContextualMenu-Callout', calloutProps && calloutProps.className),\n        setInitialFocus: shouldFocusOnMount,\n        onDismiss: props.onDismiss || menuContext.onDismiss,\n        onScroll: onScroll,\n        bounds: bounds,\n        directionalHintFixed: directionalHintFixed,\n        alignTargetEdge: alignTargetEdge,\n        hidden: props.hidden || menuContext.hidden,\n        ref: forwardedRef\n      }), React.createElement(\"div\", {\n        style: contextMenuStyle,\n        ref: hostElement,\n        id: id,\n        className: classNames.container,\n        tabIndex: shouldFocusOnContainer ? 0 : -1,\n        onKeyDown: onMenuKeyDown,\n        onKeyUp: onKeyUp,\n        onFocusCapture: onMenuFocusCapture,\n        \"aria-label\": ariaLabel,\n        \"aria-labelledby\": labelElementId,\n        role: 'menu'\n      }, title && React.createElement(\"div\", {\n        className: classNames.title\n      }, \" \", title, \" \"), items && items.length ? renderFocusZone(onRenderMenuList({\n        ariaLabel: ariaLabel,\n        items: items,\n        totalItemCount: totalItemCount_1,\n        hasCheckmarks: hasCheckmarks,\n        hasIcons: hasIcons,\n        defaultMenuItemRenderer: function (item) {\n          return defaultMenuItemRenderer(item, classNames);\n        },\n        labelElementId: labelElementId\n      }, function (menuListProps, defaultRender) {\n        return onDefaultRenderMenuList(menuListProps, classNames, defaultRender);\n      }), adjustedFocusZoneProps) : null, submenuProps && onRenderSubMenu(submenuProps, onDefaultRenderSubMenu)));\n    });\n  } else {\n    return null;\n  } //#endregion\n\n}), function (prevProps, newProps) {\n  if (!newProps.shouldUpdateWhenHidden && prevProps.hidden && newProps.hidden) {\n    // Do not update when hidden.\n    return true;\n  }\n\n  return shallowCompare(prevProps, newProps);\n});\nContextualMenuBase.displayName = 'ContextualMenuBase';\n/**\n * Returns true if the key for the event is alt (Mac option) or meta (Mac command).\n */\n\nfunction isAltOrMeta(ev) {\n  // eslint-disable-next-line deprecation/deprecation\n  return ev.which === KeyCodes.alt || ev.key === 'Meta';\n}\n\nfunction onItemMouseDown(item, ev) {\n  var _a;\n\n  (_a = item.onMouseDown) === null || _a === void 0 ? void 0 : _a.call(item, item, ev);\n}\n\nfunction onDefaultRenderSubMenu(subMenuProps, defaultRender) {\n  throw Error('ContextualMenuBase: onRenderSubMenu callback is null or undefined. ' + 'Please ensure to set `onRenderSubMenu` property either manually or with `styled` helper.');\n}\n/**\n * Returns the item that matches a given key if any.\n * @param key - The key of the item to match\n * @param items - The items to look for the key\n */\n\n\nfunction findItemByKeyFromItems(key, items) {\n  for (var _i = 0, items_3 = items; _i < items_3.length; _i++) {\n    var item = items_3[_i];\n\n    if (item.itemType === ContextualMenuItemType.Section && item.sectionProps) {\n      var match = findItemByKeyFromItems(key, item.sectionProps.items);\n\n      if (match) {\n        return match;\n      }\n    } else if (item.key && item.key === key) {\n      return item;\n    }\n  }\n}\n\nfunction getOnClickWithOverrideTarget(onClick, target) {\n  return onClick ? function (ev, item) {\n    overrideTarget(ev, target);\n    return onClick(ev, item);\n  } : onClick;\n}\n\nfunction overrideTarget(ev, target) {\n  if (ev && target) {\n    ev.persist();\n\n    if (target instanceof Event) {\n      ev.target = target.target;\n    } else if (target instanceof Element) {\n      ev.target = target;\n    }\n  }\n}","map":{"version":3,"sources":["components/ContextualMenu/ContextualMenu.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { ContextualMenuItemType } from './ContextualMenu.types';\nimport { DirectionalHint } from '../../common/DirectionalHint';\nimport { FocusZone, FocusZoneDirection, FocusZoneTabbableElements } from '../../FocusZone';\nimport {\n  divProperties,\n  getNativeProps,\n  shallowCompare,\n  Async,\n  assign,\n  classNamesFunction,\n  css,\n  getFirstFocusable,\n  getLastFocusable,\n  getRTL,\n  KeyCodes,\n  shouldWrapFocus,\n  isIOS,\n  isMac,\n  memoizeFunction,\n  getPropsWithDefaults,\n  getDocument,\n} from '../../Utilities';\nimport { hasSubmenu, getIsChecked, isItemDisabled } from '../../utilities/contextualMenu/index';\nimport { Callout } from '../../Callout';\nimport { ContextualMenuItem } from './ContextualMenuItem';\nimport {\n  ContextualMenuSplitButton,\n  ContextualMenuButton,\n  ContextualMenuAnchor,\n} from './ContextualMenuItemWrapper/index';\nimport { concatStyleSetsWithProps } from '../../Styling';\nimport { getItemStyles } from './ContextualMenu.classNames';\nimport {\n  useTarget,\n  usePrevious,\n  useAsync,\n  useWarnings,\n  useId,\n  Target,\n  useIsomorphicLayoutEffect,\n} from '@fluentui/react-hooks';\nimport { useResponsiveMode, ResponsiveMode } from '../../ResponsiveMode';\nimport { MenuContext } from '../../utilities/MenuContext/index';\nimport type {\n  IContextualMenuProps,\n  IContextualMenuItem,\n  IContextualMenuListProps,\n  IContextualMenuStyleProps,\n  IContextualMenuStyles,\n  IContextualMenuItemRenderProps,\n} from './ContextualMenu.types';\nimport type { IFocusZoneProps } from '../../FocusZone';\nimport type { IMenuItemClassNames, IContextualMenuClassNames } from './ContextualMenu.classNames';\nimport type { IRenderFunction, IStyleFunctionOrObject } from '../../Utilities';\nimport type { ICalloutContentStyleProps, ICalloutContentStyles } from '../../Callout';\nimport type { IProcessedStyleSet } from '../../Styling';\nimport type { IContextualMenuItemStyleProps, IContextualMenuItemStyles } from './ContextualMenuItem.types';\nimport type { IPopupRestoreFocusParams } from '../../Popup';\n\nconst getClassNames = classNamesFunction<IContextualMenuStyleProps, IContextualMenuStyles>();\nconst getContextualMenuItemClassNames = classNamesFunction<IContextualMenuItemStyleProps, IContextualMenuItemStyles>();\n\n// The default ContextualMenu properties have no items and beak, the default submenu direction is right and top.\nconst DEFAULT_PROPS: Partial<IContextualMenuProps> = {\n  items: [],\n  shouldFocusOnMount: true,\n  gapSpace: 0,\n  directionalHint: DirectionalHint.bottomAutoEdge,\n  beakWidth: 16,\n};\n\nexport function getSubmenuItems(\n  item: IContextualMenuItem,\n  options?: {\n    target?: Target;\n  },\n): IContextualMenuItem[] | undefined {\n  const target = options?.target;\n\n  // eslint-disable-next-line deprecation/deprecation\n  const items = item.subMenuProps ? item.subMenuProps.items : item.items;\n\n  if (items) {\n    const overrideItems: typeof items = [];\n\n    for (const subItem of items) {\n      if (subItem.preferMenuTargetAsEventTarget) {\n        // For sub-items which need an overridden target, intercept `onClick`\n        const { onClick, ...contextItem } = subItem;\n\n        overrideItems.push({\n          ...contextItem,\n          onClick: getOnClickWithOverrideTarget(onClick, target),\n        });\n      } else {\n        overrideItems.push(subItem);\n      }\n    }\n\n    return overrideItems;\n  }\n}\n\n/**\n * Returns true if a list of menu items can contain a checkbox\n */\nexport function canAnyMenuItemsCheck(items: IContextualMenuItem[]): boolean {\n  return items.some(item => {\n    if (item.canCheck) {\n      return true;\n    }\n\n    // If the item is a section, check if any of the items in the section can check.\n    if (item.sectionProps && item.sectionProps.items.some(submenuItem => submenuItem.canCheck === true)) {\n      return true;\n    }\n\n    return false;\n  });\n}\n\nconst NavigationIdleDelay = 250; /* ms */\n\nconst COMPONENT_NAME = 'ContextualMenu';\n\nconst _getMenuItemStylesFunction = memoizeFunction(\n  (\n    ...styles: (IStyleFunctionOrObject<IContextualMenuItemStyleProps, IContextualMenuItemStyles> | undefined)[]\n  ): IStyleFunctionOrObject<IContextualMenuItemStyleProps, IContextualMenuItemStyles> => {\n    return (styleProps: IContextualMenuItemStyleProps) =>\n      concatStyleSetsWithProps(styleProps, getItemStyles, ...styles);\n  },\n);\n\n//#region Custom hooks\nfunction useVisibility(props: IContextualMenuProps, targetWindow: Window | undefined) {\n  const { hidden = false, onMenuDismissed, onMenuOpened } = props;\n  const previousHidden = usePrevious(hidden);\n\n  const onMenuOpenedRef = React.useRef(onMenuOpened);\n  const onMenuClosedRef = React.useRef(onMenuDismissed);\n  const propsRef = React.useRef(props);\n\n  onMenuOpenedRef.current = onMenuOpened;\n  onMenuClosedRef.current = onMenuDismissed;\n  propsRef.current = props;\n\n  React.useEffect(() => {\n    // Don't issue dismissed callbacks on initial mount\n    if (hidden && previousHidden === false) {\n      onMenuClosedRef.current?.(propsRef.current);\n    } else if (!hidden && previousHidden !== false) {\n      onMenuOpenedRef.current?.(propsRef.current);\n    }\n  }, [hidden, previousHidden]);\n\n  // Issue onDismissedCallback on unmount\n  React.useEffect(() => () => onMenuClosedRef.current?.(propsRef.current), []);\n}\n\nfunction useSubMenuState(\n  { hidden, items, theme, className, id, target: menuTarget }: IContextualMenuProps,\n  dismiss: () => void,\n) {\n  const [expandedMenuItemKey, setExpandedMenuItemKey] = React.useState<string>();\n  const [submenuTarget, setSubmenuTarget] = React.useState<HTMLElement>();\n  /** True if the menu was expanded by mouse click OR hover (as opposed to by keyboard) */\n  const [shouldFocusOnContainer, setShouldFocusOnContainer] = React.useState<boolean>();\n  const subMenuId = useId(COMPONENT_NAME, id);\n\n  const closeSubMenu = React.useCallback(() => {\n    setShouldFocusOnContainer(undefined);\n    setExpandedMenuItemKey(undefined);\n    setSubmenuTarget(undefined);\n  }, []);\n\n  const openSubMenu = React.useCallback(\n    ({ key: submenuItemKey }: IContextualMenuItem, target: HTMLElement, focusContainer?: boolean) => {\n      if (expandedMenuItemKey === submenuItemKey) {\n        return;\n      }\n\n      target.focus();\n\n      setShouldFocusOnContainer(focusContainer);\n      setExpandedMenuItemKey(submenuItemKey);\n      setSubmenuTarget(target);\n    },\n    [expandedMenuItemKey],\n  );\n\n  React.useEffect(() => {\n    if (hidden) {\n      closeSubMenu();\n    }\n  }, [hidden, closeSubMenu]);\n\n  const onSubMenuDismiss = useOnSubmenuDismiss(dismiss, closeSubMenu);\n\n  const getSubmenuProps = (): IContextualMenuProps | null => {\n    const item = findItemByKeyFromItems(expandedMenuItemKey!, items);\n    let submenuProps: IContextualMenuProps | null = null;\n\n    if (item) {\n      submenuProps = {\n        items: getSubmenuItems(item, { target: menuTarget })!,\n        target: submenuTarget,\n        onDismiss: onSubMenuDismiss,\n        isSubMenu: true,\n        id: subMenuId,\n        shouldFocusOnMount: true,\n        shouldFocusOnContainer,\n        directionalHint: getRTL(theme) ? DirectionalHint.leftTopEdge : DirectionalHint.rightTopEdge,\n        className,\n        gapSpace: 0,\n        isBeakVisible: false,\n      };\n\n      if (item.subMenuProps) {\n        assign(submenuProps, item.subMenuProps);\n      }\n\n      if (item.preferMenuTargetAsEventTarget) {\n        const { onItemClick } = item;\n\n        submenuProps.onItemClick = getOnClickWithOverrideTarget(onItemClick, menuTarget);\n      }\n    }\n    return submenuProps;\n  };\n\n  return [expandedMenuItemKey, openSubMenu, getSubmenuProps, onSubMenuDismiss] as const;\n}\n\nfunction useShouldUpdateFocusOnMouseMove({ delayUpdateFocusOnHover, hidden }: IContextualMenuProps) {\n  const shouldUpdateFocusOnMouseEvent = React.useRef<boolean>(!delayUpdateFocusOnHover);\n  const gotMouseMove = React.useRef<boolean>(false);\n\n  React.useEffect(() => {\n    shouldUpdateFocusOnMouseEvent.current = !delayUpdateFocusOnHover;\n    gotMouseMove.current = hidden ? false : !delayUpdateFocusOnHover && gotMouseMove.current;\n  }, [delayUpdateFocusOnHover, hidden]);\n\n  const onMenuFocusCapture = React.useCallback(() => {\n    if (delayUpdateFocusOnHover) {\n      shouldUpdateFocusOnMouseEvent.current = false;\n    }\n  }, [delayUpdateFocusOnHover]);\n\n  return [shouldUpdateFocusOnMouseEvent, gotMouseMove, onMenuFocusCapture] as const;\n}\n\nfunction usePreviousActiveElement({ hidden, onRestoreFocus }: IContextualMenuProps, targetWindow: Window | undefined) {\n  const previousActiveElement = React.useRef<undefined | HTMLElement>();\n\n  const tryFocusPreviousActiveElement = React.useCallback(\n    (options: IPopupRestoreFocusParams) => {\n      if (onRestoreFocus) {\n        onRestoreFocus(options);\n      } else if (options?.documentContainsFocus) {\n        // Make sure that the focus method actually exists\n        // In some cases the object might exist but not be a real element.\n        // This is primarily for IE 11 and should be removed once IE 11 is no longer in use.\n        previousActiveElement.current?.focus?.();\n      }\n    },\n    [onRestoreFocus],\n  );\n\n  useIsomorphicLayoutEffect(() => {\n    if (!hidden) {\n      previousActiveElement.current = targetWindow?.document.activeElement as HTMLElement;\n    } else if (previousActiveElement.current) {\n      tryFocusPreviousActiveElement({\n        originalElement: previousActiveElement.current,\n        containsFocus: true,\n        documentContainsFocus: getDocument()?.hasFocus() || false,\n      });\n\n      previousActiveElement.current = undefined;\n    }\n  }, [hidden, targetWindow?.document.activeElement, tryFocusPreviousActiveElement]);\n\n  return [tryFocusPreviousActiveElement] as const;\n}\n\nfunction useKeyHandlers(\n  {\n    theme,\n    isSubMenu,\n    focusZoneProps: { checkForNoWrap, direction: focusZoneDirection = FocusZoneDirection.vertical } = {},\n  }: IContextualMenuProps,\n  dismiss: (ev?: any, dismissAll?: boolean | undefined) => void | undefined,\n  hostElement: React.RefObject<HTMLDivElement>,\n  openSubMenu: (submenuItemKey: IContextualMenuItem, target: HTMLElement) => void,\n) {\n  /** True if the most recent keydown event was for alt (option) or meta (command). */\n  const lastKeyDownWasAltOrMeta = React.useRef<boolean | undefined>();\n\n  /**\n   * Calls `shouldHandleKey` to determine whether the keyboard event should be handled;\n   * if so, stops event propagation and dismisses menu(s).\n   * @param ev - The keyboard event.\n   * @param shouldHandleKey - Returns whether we should handle this keyboard event.\n   * @param dismissAllMenus - If true, dismiss all menus. Otherwise, dismiss only the current menu.\n   * Only does anything if `shouldHandleKey` returns true.\n   * @returns Whether the event was handled.\n   */\n  const keyHandler = (\n    ev: React.KeyboardEvent<HTMLElement>,\n    shouldHandleKey: (ev: React.KeyboardEvent<HTMLElement>) => boolean,\n    dismissAllMenus?: boolean,\n  ): boolean => {\n    let handled = false;\n\n    if (shouldHandleKey(ev)) {\n      dismiss(ev, dismissAllMenus);\n      ev.preventDefault();\n      ev.stopPropagation();\n      handled = true;\n    }\n\n    return handled;\n  };\n\n  /**\n   * Checks if the submenu should be closed\n   */\n  const shouldCloseSubMenu = (ev: React.KeyboardEvent<HTMLElement>): boolean => {\n    const submenuCloseKey = getRTL(theme) ? KeyCodes.right : KeyCodes.left;\n\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which !== submenuCloseKey || !isSubMenu) {\n      return false;\n    }\n\n    return !!(\n      focusZoneDirection === FocusZoneDirection.vertical ||\n      (checkForNoWrap && !shouldWrapFocus(ev.target as HTMLElement, 'data-no-horizontal-wrap'))\n    );\n  };\n\n  const shouldHandleKeyDown = (ev: React.KeyboardEvent<HTMLElement>) => {\n    return (\n      // eslint-disable-next-line deprecation/deprecation\n      ev.which === KeyCodes.escape ||\n      shouldCloseSubMenu(ev) ||\n      // eslint-disable-next-line deprecation/deprecation\n      (ev.which === KeyCodes.up && (ev.altKey || ev.metaKey))\n    );\n  };\n\n  const onKeyDown = (ev: React.KeyboardEvent<HTMLElement>): boolean => {\n    // Take note if we are processing an alt (option) or meta (command) keydown.\n    // See comment in shouldHandleKeyUp for reasoning.\n    lastKeyDownWasAltOrMeta.current = isAltOrMeta(ev);\n\n    // On Mac, pressing escape dismisses all levels of native context menus\n    // eslint-disable-next-line deprecation/deprecation\n    const dismissAllMenus = ev.which === KeyCodes.escape && (isMac() || isIOS());\n\n    return keyHandler(ev, shouldHandleKeyDown, dismissAllMenus);\n  };\n\n  /**\n   * We close the menu on key up only if ALL of the following are true:\n   * - Most recent key down was alt or meta (command)\n   * - The alt/meta key down was NOT followed by some other key (such as down/up arrow to\n   *   expand/collapse the menu)\n   * - We're not on a Mac (or iOS)\n   *\n   * This is because on Windows, pressing alt moves focus to the application menu bar or similar,\n   * closing any open context menus. There is not a similar behavior on Macs.\n   */\n  const shouldHandleKeyUp = (ev: React.KeyboardEvent<HTMLElement>) => {\n    const keyPressIsAltOrMetaAlone = lastKeyDownWasAltOrMeta.current && isAltOrMeta(ev);\n    lastKeyDownWasAltOrMeta.current = false;\n    return !!keyPressIsAltOrMetaAlone && !(isIOS() || isMac());\n  };\n\n  const onKeyUp = (ev: React.KeyboardEvent<HTMLElement>): boolean => {\n    return keyHandler(ev, shouldHandleKeyUp, true /* dismissAllMenus */);\n  };\n\n  const onMenuKeyDown = (ev: React.KeyboardEvent<HTMLElement>) => {\n    // Mark as handled if onKeyDown returns true (for handling collapse cases)\n    // or if we are attempting to expand a submenu\n    const handled = onKeyDown(ev);\n\n    if (handled || !hostElement.current) {\n      return;\n    }\n\n    // If we have a modifier key being pressed, we do not want to move focus.\n    // Otherwise, handle up and down keys.\n    const hasModifier = !!(ev.altKey || ev.metaKey);\n    // eslint-disable-next-line deprecation/deprecation\n    const isUp = ev.which === KeyCodes.up;\n    // eslint-disable-next-line deprecation/deprecation\n    const isDown = ev.which === KeyCodes.down;\n    if (!hasModifier && (isUp || isDown)) {\n      const elementToFocus = isUp\n        ? getLastFocusable(hostElement.current, hostElement.current.lastChild as HTMLElement, true)\n        : getFirstFocusable(hostElement.current, hostElement.current.firstChild as HTMLElement, true);\n\n      if (elementToFocus) {\n        elementToFocus.focus();\n        ev.preventDefault();\n        ev.stopPropagation();\n      }\n    }\n  };\n\n  const onItemKeyDown = (item: any, ev: React.KeyboardEvent<HTMLElement>): void => {\n    const openKey = getRTL(theme) ? KeyCodes.left : KeyCodes.right;\n\n    if (\n      !item.disabled &&\n      // eslint-disable-next-line deprecation/deprecation\n      (ev.which === openKey || ev.which === KeyCodes.enter || (ev.which === KeyCodes.down && (ev.altKey || ev.metaKey)))\n    ) {\n      openSubMenu(item, ev.currentTarget as HTMLElement);\n      ev.preventDefault();\n    }\n  };\n\n  return [onKeyDown, onKeyUp, onMenuKeyDown, onItemKeyDown] as const;\n}\n\nfunction useScrollHandler(asyncTracker: Async) {\n  const isScrollIdle = React.useRef<boolean>(true);\n  const scrollIdleTimeoutId = React.useRef<number | undefined>();\n\n  /**\n   * Scroll handler for the callout to make sure the mouse events\n   * for updating focus are not interacting during scroll\n   */\n  const onScroll = (): void => {\n    if (!isScrollIdle.current && scrollIdleTimeoutId.current !== undefined) {\n      asyncTracker.clearTimeout(scrollIdleTimeoutId.current);\n      scrollIdleTimeoutId.current = undefined;\n    } else {\n      isScrollIdle.current = false;\n    }\n\n    scrollIdleTimeoutId.current = asyncTracker.setTimeout(() => {\n      isScrollIdle.current = true;\n    }, NavigationIdleDelay);\n  };\n\n  return [onScroll, isScrollIdle] as const;\n}\n\nfunction useOnSubmenuDismiss(dismiss: (ev?: any, dismissAll?: boolean) => void, closeSubMenu: () => void) {\n  const isMountedRef = React.useRef(false);\n  React.useEffect(() => {\n    isMountedRef.current = true;\n    return () => {\n      isMountedRef.current = false;\n    };\n  }, []);\n\n  /**\n   * This function is called ASYNCHRONOUSLY, and so there is a chance it is called\n   * after the component is unmounted. The isMountedRef is added to prevent\n   * from calling setState() after unmount. Do NOT copy this pattern in synchronous\n   * code.\n   */\n  const onSubMenuDismiss = (ev?: any, dismissAll?: boolean): void => {\n    if (dismissAll) {\n      dismiss(ev, dismissAll);\n    } else if (isMountedRef.current) {\n      closeSubMenu();\n    }\n  };\n\n  return onSubMenuDismiss;\n}\n\nfunction useSubmenuEnterTimer({ subMenuHoverDelay = NavigationIdleDelay }: IContextualMenuProps, asyncTracker: Async) {\n  const enterTimerRef = React.useRef<number | undefined>(undefined);\n\n  const cancelSubMenuTimer = () => {\n    if (enterTimerRef.current !== undefined) {\n      asyncTracker.clearTimeout(enterTimerRef.current);\n      enterTimerRef.current = undefined;\n    }\n  };\n\n  const startSubmenuTimer = (onTimerExpired: () => void) => {\n    enterTimerRef.current = asyncTracker.setTimeout(() => {\n      onTimerExpired();\n      cancelSubMenuTimer();\n    }, subMenuHoverDelay);\n  };\n\n  return [cancelSubMenuTimer, startSubmenuTimer, enterTimerRef as React.RefObject<number | undefined>] as const;\n}\n\nfunction useMouseHandlers(\n  props: IContextualMenuProps,\n  isScrollIdle: React.MutableRefObject<boolean>,\n  subMenuEntryTimer: React.RefObject<number | undefined>,\n  targetWindow: Window | undefined,\n  shouldUpdateFocusOnMouseEvent: React.MutableRefObject<boolean>,\n  gotMouseMove: React.MutableRefObject<boolean>,\n  expandedMenuItemKey: string | undefined,\n  hostElement: React.RefObject<HTMLDivElement>,\n  startSubmenuTimer: (onTimerExpired: () => void) => void,\n  cancelSubMenuTimer: () => void,\n  openSubMenu: (submenuItemKey: IContextualMenuItem, target: HTMLElement, openedByMouseClick?: boolean) => void,\n  onSubMenuDismiss: (ev?: any, dismissAll?: boolean) => void,\n  dismiss: (ev?: any, dismissAll?: boolean) => void,\n) {\n  const { target: menuTarget } = props;\n\n  const onItemMouseEnterBase = (item: any, ev: React.MouseEvent<HTMLElement>, target?: HTMLElement): void => {\n    if (shouldUpdateFocusOnMouseEvent.current) {\n      gotMouseMove.current = true;\n    }\n\n    if (shouldIgnoreMouseEvent()) {\n      return;\n    }\n\n    updateFocusOnMouseEvent(item, ev, target);\n  };\n\n  const onItemMouseMoveBase = (item: any, ev: React.MouseEvent<HTMLElement>, target: HTMLElement): void => {\n    const targetElement = ev.currentTarget as HTMLElement;\n\n    // Always do this check to make sure we record a mouseMove if needed (even if we are timed out)\n    if (shouldUpdateFocusOnMouseEvent.current) {\n      gotMouseMove.current = true;\n    } else {\n      return;\n    }\n\n    if (\n      !isScrollIdle.current ||\n      subMenuEntryTimer.current !== undefined ||\n      targetElement === (targetWindow?.document.activeElement as HTMLElement)\n    ) {\n      return;\n    }\n\n    updateFocusOnMouseEvent(item, ev, target);\n  };\n\n  const shouldIgnoreMouseEvent = (): boolean => {\n    return !isScrollIdle.current || !gotMouseMove.current;\n  };\n\n  const onMouseItemLeave = (item: any, ev: React.MouseEvent<HTMLElement>): void => {\n    if (shouldIgnoreMouseEvent()) {\n      return;\n    }\n\n    cancelSubMenuTimer();\n\n    if (expandedMenuItemKey !== undefined) {\n      return;\n    }\n\n    /**\n     * IE11 focus() method forces parents to scroll to top of element.\n     * Edge and IE expose a setActive() function for focusable divs that\n     * sets the page focus but does not scroll the parent element.\n     */\n    if ((hostElement.current as any).setActive) {\n      try {\n        (hostElement.current as any).setActive();\n      } catch (e) {\n        /* no-op */\n      }\n    } else {\n      hostElement.current?.focus();\n    }\n  };\n\n  /**\n   * Handles updating focus when mouseEnter or mouseMove fire.\n   * As part of updating focus, This function will also update\n   * the expand/collapse state accordingly.\n   */\n  const updateFocusOnMouseEvent = (\n    item: IContextualMenuItem,\n    ev: React.MouseEvent<HTMLElement>,\n    target?: HTMLElement,\n  ) => {\n    const targetElement = target ? target : (ev.currentTarget as HTMLElement);\n\n    if (item.key === expandedMenuItemKey) {\n      return;\n    }\n\n    cancelSubMenuTimer();\n\n    // If the menu is not expanded we can update focus without any delay\n    if (expandedMenuItemKey === undefined) {\n      targetElement.focus();\n    }\n\n    // Delay updating expanding/dismissing the submenu\n    // and only set focus if we have not already done so\n    if (hasSubmenu(item)) {\n      ev.stopPropagation();\n      startSubmenuTimer(() => {\n        targetElement.focus();\n        openSubMenu(item, targetElement, true);\n      });\n    } else {\n      startSubmenuTimer(() => {\n        onSubMenuDismiss(ev);\n        targetElement.focus();\n      });\n    }\n  };\n\n  const onItemClick = (\n    item: IContextualMenuItem,\n    ev: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>,\n  ): void => {\n    onItemClickBase(item, ev, ev.currentTarget as HTMLElement);\n  };\n\n  const onItemClickBase = (\n    item: IContextualMenuItem,\n    ev: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>,\n    target: HTMLElement,\n  ): void => {\n    const items = getSubmenuItems(item, { target: menuTarget });\n\n    // Cancel an async menu item hover timeout action from being taken and instead\n    // just trigger the click event instead.\n    cancelSubMenuTimer();\n\n    if (!hasSubmenu(item) && (!items || !items.length)) {\n      // This is an item without a menu. Click it.\n      executeItemClick(item, ev);\n    } else {\n      if (item.key !== expandedMenuItemKey) {\n        // This has a collapsed sub menu. Expand it.\n\n        // focus on the container by default when the menu is opened with a click event\n        // this differentiates from a keyboard interaction triggering the click event\n        const shouldFocusOnContainer =\n          typeof props.shouldFocusOnContainer === 'boolean'\n            ? props.shouldFocusOnContainer\n            : (ev.nativeEvent as PointerEvent).pointerType === 'mouse';\n        openSubMenu(item, target, shouldFocusOnContainer);\n      }\n    }\n\n    ev.stopPropagation();\n    ev.preventDefault();\n  };\n\n  const onAnchorClick = (item: IContextualMenuItem, ev: React.MouseEvent<HTMLElement>) => {\n    executeItemClick(item, ev);\n    ev.stopPropagation();\n  };\n\n  const executeItemClick = (\n    item: IContextualMenuItem,\n    ev: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>,\n  ): void => {\n    if (item.disabled || item.isDisabled) {\n      return;\n    }\n\n    if (item.preferMenuTargetAsEventTarget) {\n      overrideTarget(ev, menuTarget);\n    }\n\n    let shouldDismiss = false;\n    if (item.onClick) {\n      shouldDismiss = !!item.onClick(ev, item);\n    } else if (props.onItemClick) {\n      shouldDismiss = !!props.onItemClick(ev, item);\n    }\n\n    if (shouldDismiss || !ev.defaultPrevented) {\n      dismiss(ev, true);\n    }\n  };\n\n  return [\n    onItemMouseEnterBase,\n    onItemMouseMoveBase,\n    onMouseItemLeave,\n    onItemClick,\n    onAnchorClick,\n    executeItemClick,\n    onItemClickBase,\n  ] as const;\n}\n//#endregion\n\nexport const ContextualMenuBase: React.FunctionComponent<IContextualMenuProps> = React.memo(\n  React.forwardRef<HTMLDivElement, IContextualMenuProps>((propsWithoutDefaults, forwardedRef) => {\n    const { ref, ...props } = getPropsWithDefaults(DEFAULT_PROPS, propsWithoutDefaults);\n    const hostElement = React.useRef<HTMLDivElement>(null);\n    const asyncTracker = useAsync();\n    const menuId = useId(COMPONENT_NAME, props.id);\n\n    useWarnings({\n      name: COMPONENT_NAME,\n      props,\n      deprecations: {\n        getMenuClassNames: 'styles',\n      },\n    });\n\n    const dismiss = (ev?: any, dismissAll?: boolean) => props.onDismiss?.(ev, dismissAll);\n    const [targetRef, targetWindow] = useTarget(props.target, hostElement);\n    const [tryFocusPreviousActiveElement] = usePreviousActiveElement(props, targetWindow);\n    const [expandedMenuItemKey, openSubMenu, getSubmenuProps, onSubMenuDismiss] = useSubMenuState(props, dismiss);\n    const [shouldUpdateFocusOnMouseEvent, gotMouseMove, onMenuFocusCapture] = useShouldUpdateFocusOnMouseMove(props);\n    const [onScroll, isScrollIdle] = useScrollHandler(asyncTracker);\n    const [cancelSubMenuTimer, startSubmenuTimer, subMenuEntryTimer] = useSubmenuEnterTimer(props, asyncTracker);\n\n    const responsiveMode = useResponsiveMode(hostElement, props.responsiveMode);\n\n    useVisibility(props, targetWindow);\n\n    const [onKeyDown, onKeyUp, onMenuKeyDown, onItemKeyDown] = useKeyHandlers(props, dismiss, hostElement, openSubMenu);\n    const [\n      onItemMouseEnterBase,\n      onItemMouseMoveBase,\n      onMouseItemLeave,\n      onItemClick,\n      onAnchorClick,\n      executeItemClick,\n      onItemClickBase,\n    ] = useMouseHandlers(\n      props,\n      isScrollIdle,\n      subMenuEntryTimer,\n      targetWindow,\n      shouldUpdateFocusOnMouseEvent,\n      gotMouseMove,\n      expandedMenuItemKey,\n      hostElement,\n      startSubmenuTimer,\n      cancelSubMenuTimer,\n      openSubMenu,\n      onSubMenuDismiss,\n      dismiss,\n    );\n\n    //#region Render helpers\n\n    const onDefaultRenderMenuList = (\n      menuListProps: IContextualMenuListProps,\n      // eslint-disable-next-line deprecation/deprecation\n      menuClassNames: IProcessedStyleSet<IContextualMenuStyles> | IContextualMenuClassNames,\n      defaultRender?: IRenderFunction<IContextualMenuListProps>,\n    ): JSX.Element => {\n      let indexCorrection = 0;\n      const { items, totalItemCount, hasCheckmarks, hasIcons } = menuListProps;\n\n      return (\n        <ul className={menuClassNames.list} onKeyDown={onKeyDown} onKeyUp={onKeyUp} role={'presentation'}>\n          {items.map((item, index) => {\n            const menuItem = renderMenuItem(\n              item,\n              index,\n              indexCorrection,\n              totalItemCount,\n              hasCheckmarks,\n              hasIcons,\n              menuClassNames,\n            );\n            if (item.itemType !== ContextualMenuItemType.Divider && item.itemType !== ContextualMenuItemType.Header) {\n              const indexIncrease = item.customOnRenderListLength ? item.customOnRenderListLength : 1;\n              indexCorrection += indexIncrease;\n            }\n            return menuItem;\n          })}\n        </ul>\n      );\n    };\n\n    const renderFocusZone = (children: JSX.Element | null, adjustedFocusZoneProps: IFocusZoneProps): JSX.Element => {\n      const { focusZoneAs: ChildrenRenderer = FocusZone } = props;\n      return <ChildrenRenderer {...adjustedFocusZoneProps}>{children}</ChildrenRenderer>;\n    };\n\n    /**\n     * !!!IMPORTANT!!! Avoid mutating `item: IContextualMenuItem` argument. It will\n     * cause the menu items to always re-render because the component update is based on shallow comparison.\n     */\n    const renderMenuItem = (\n      item: IContextualMenuItem,\n      index: number,\n      focusableElementIndex: number,\n      totalItemCount: number,\n      hasCheckmarks: boolean,\n      hasIcons: boolean,\n      // eslint-disable-next-line deprecation/deprecation\n      menuClassNames: IProcessedStyleSet<IContextualMenuStyles> | IContextualMenuClassNames,\n    ): JSX.Element => {\n      const renderedItems: React.ReactNode[] = [];\n      const iconProps = item.iconProps || { iconName: 'None' };\n      const {\n        getItemClassNames, // eslint-disable-line deprecation/deprecation\n        itemProps,\n      } = item;\n      const styles = itemProps ? itemProps.styles : undefined;\n\n      // We only send a dividerClassName when the item to be rendered is a divider.\n      // For all other cases, the default divider style is used.\n      const dividerClassName = item.itemType === ContextualMenuItemType.Divider ? item.className : undefined;\n      const subMenuIconClassName = item.submenuIconProps ? item.submenuIconProps.className : '';\n\n      // eslint-disable-next-line deprecation/deprecation\n      let itemClassNames: IMenuItemClassNames;\n\n      // IContextualMenuItem#getItemClassNames for backwards compatibility\n      // otherwise uses mergeStyles for class names.\n      if (getItemClassNames) {\n        itemClassNames = getItemClassNames(\n          props.theme!,\n          isItemDisabled(item),\n          expandedMenuItemKey === item.key,\n          !!getIsChecked(item),\n          !!item.href,\n          iconProps.iconName !== 'None',\n          item.className,\n          dividerClassName,\n          iconProps.className,\n          subMenuIconClassName,\n          item.primaryDisabled,\n        );\n      } else {\n        const itemStyleProps: IContextualMenuItemStyleProps = {\n          theme: props.theme!,\n          disabled: isItemDisabled(item),\n          expanded: expandedMenuItemKey === item.key,\n          checked: !!getIsChecked(item),\n          isAnchorLink: !!item.href,\n          knownIcon: iconProps.iconName !== 'None',\n          itemClassName: item.className,\n          dividerClassName,\n          iconClassName: iconProps.className,\n          subMenuClassName: subMenuIconClassName,\n          primaryDisabled: item.primaryDisabled,\n        };\n\n        // We need to generate default styles then override if styles are provided\n        // since the ContextualMenu currently handles item classNames.\n        itemClassNames = getContextualMenuItemClassNames(\n          _getMenuItemStylesFunction(menuClassNames.subComponentStyles?.menuItem, styles),\n          itemStyleProps,\n        );\n      }\n\n      // eslint-disable-next-line deprecation/deprecation\n      if (item.text === '-' || item.name === '-') {\n        item.itemType = ContextualMenuItemType.Divider;\n      }\n      switch (item.itemType) {\n        case ContextualMenuItemType.Divider:\n          renderedItems.push(renderSeparator(index, itemClassNames));\n          break;\n        case ContextualMenuItemType.Header:\n          renderedItems.push(renderSeparator(index, itemClassNames));\n          const headerItem = renderHeaderMenuItem(item, itemClassNames, menuClassNames, index, hasCheckmarks, hasIcons);\n          renderedItems.push(renderListItem(headerItem, item.key || index, itemClassNames, item.title));\n          break;\n        case ContextualMenuItemType.Section:\n          renderedItems.push(renderSectionItem(item, itemClassNames, menuClassNames, index, hasCheckmarks, hasIcons));\n          break;\n        default:\n          const defaultRenderNormalItem = () =>\n            renderNormalItem(\n              item,\n              itemClassNames,\n              index,\n              focusableElementIndex,\n              totalItemCount,\n              hasCheckmarks,\n              hasIcons,\n            ) as JSX.Element;\n\n          const menuItem = props.onRenderContextualMenuItem\n            ? props.onRenderContextualMenuItem(item, defaultRenderNormalItem)\n            : defaultRenderNormalItem();\n          renderedItems.push(renderListItem(menuItem, item.key || index, itemClassNames, item.title));\n          break;\n      }\n\n      // Since multiple nodes *could* be rendered, wrap them all in a fragment with this item's key.\n      // This ensures the reconciler handles multi-item output per-node correctly and does not re-mount content.\n      return <React.Fragment key={item.key}>{renderedItems}</React.Fragment>;\n    };\n\n    const defaultMenuItemRenderer = (\n      item: IContextualMenuItemRenderProps,\n      // eslint-disable-next-line deprecation/deprecation\n      menuClassNames: IProcessedStyleSet<IContextualMenuStyles> | IContextualMenuClassNames,\n    ): React.ReactNode => {\n      const { index, focusableElementIndex, totalItemCount, hasCheckmarks, hasIcons } = item;\n      return renderMenuItem(\n        item,\n        index,\n        focusableElementIndex,\n        totalItemCount,\n        hasCheckmarks,\n        hasIcons,\n        menuClassNames,\n      );\n    };\n\n    const renderSectionItem = (\n      sectionItem: IContextualMenuItem,\n      // eslint-disable-next-line deprecation/deprecation\n      itemClassNames: IMenuItemClassNames,\n      // eslint-disable-next-line deprecation/deprecation\n      menuClassNames: IProcessedStyleSet<IContextualMenuStyles> | IContextualMenuClassNames,\n      index: number,\n      hasCheckmarks: boolean,\n      hasIcons: boolean,\n    ) => {\n      const sectionProps = sectionItem.sectionProps;\n      if (!sectionProps) {\n        return;\n      }\n\n      let headerItem;\n      let groupProps;\n      if (sectionProps.title) {\n        let headerContextualMenuItem: IContextualMenuItem | undefined = undefined;\n        let ariaLabelledby = '';\n        if (typeof sectionProps.title === 'string') {\n          // Since title is a user-facing string, it needs to be stripped\n          // of whitespace in order to build a valid element ID\n          const id = menuId + sectionProps.title.replace(/\\s/g, '');\n          headerContextualMenuItem = {\n            key: `section-${sectionProps.title}-title`,\n            itemType: ContextualMenuItemType.Header,\n            text: sectionProps.title,\n            id: id,\n          };\n          ariaLabelledby = id;\n        } else {\n          const id = sectionProps.title.id || menuId + sectionProps.title.key.replace(/\\s/g, '');\n          headerContextualMenuItem = { ...sectionProps.title, id };\n          ariaLabelledby = id;\n        }\n\n        if (headerContextualMenuItem) {\n          groupProps = {\n            role: 'group',\n            'aria-labelledby': ariaLabelledby,\n          };\n          headerItem = renderHeaderMenuItem(\n            headerContextualMenuItem,\n            itemClassNames,\n            menuClassNames,\n            index,\n            hasCheckmarks,\n            hasIcons,\n          );\n        }\n      }\n\n      if (sectionProps.items && sectionProps.items.length > 0) {\n        return (\n          <li role=\"presentation\" key={sectionProps.key || sectionItem.key || `section-${index}`}>\n            <div {...groupProps}>\n              <ul className={menuClassNames.list} role=\"presentation\">\n                {sectionProps.topDivider && renderSeparator(index, itemClassNames, true, true)}\n                {headerItem && renderListItem(headerItem, sectionItem.key || index, itemClassNames, sectionItem.title)}\n                {sectionProps.items.map((contextualMenuItem, itemsIndex) =>\n                  renderMenuItem(\n                    contextualMenuItem,\n                    itemsIndex,\n                    itemsIndex,\n                    sectionProps.items.length,\n                    hasCheckmarks,\n                    hasIcons,\n                    menuClassNames,\n                  ),\n                )}\n                {sectionProps.bottomDivider && renderSeparator(index, itemClassNames, false, true)}\n              </ul>\n            </div>\n          </li>\n        );\n      }\n    };\n\n    const renderListItem = (\n      content: React.ReactNode,\n      key: string | number,\n      classNames: IMenuItemClassNames, // eslint-disable-line deprecation/deprecation\n      title?: string,\n    ) => {\n      return (\n        <li role=\"presentation\" title={title} key={key} className={classNames.item}>\n          {content}\n        </li>\n      );\n    };\n\n    const renderSeparator = (\n      index: number,\n      classNames: IMenuItemClassNames, // eslint-disable-line deprecation/deprecation\n      top?: boolean,\n      fromSection?: boolean,\n    ): React.ReactNode => {\n      if (fromSection || index > 0) {\n        return (\n          <li\n            role=\"separator\"\n            key={'separator-' + index + (top === undefined ? '' : top ? '-top' : '-bottom')}\n            className={classNames.divider}\n            aria-hidden=\"true\"\n          />\n        );\n      }\n      return null;\n    };\n\n    const renderNormalItem = (\n      item: IContextualMenuItem,\n      classNames: IMenuItemClassNames, // eslint-disable-line deprecation/deprecation\n      index: number,\n      focusableElementIndex: number,\n      totalItemCount: number,\n      hasCheckmarks: boolean,\n      hasIcons: boolean,\n    ): React.ReactNode => {\n      if (item.onRender) {\n        return item.onRender(\n          { 'aria-posinset': focusableElementIndex + 1, 'aria-setsize': totalItemCount, ...item },\n          dismiss,\n        );\n      }\n\n      const { contextualMenuItemAs } = props;\n\n      const commonProps = {\n        item,\n        classNames,\n        index,\n        focusableElementIndex,\n        totalItemCount,\n        hasCheckmarks,\n        hasIcons,\n        contextualMenuItemAs,\n        onItemMouseEnter: onItemMouseEnterBase,\n        onItemMouseLeave: onMouseItemLeave,\n        onItemMouseMove: onItemMouseMoveBase,\n        onItemMouseDown: onItemMouseDown,\n        executeItemClick: executeItemClick,\n        onItemKeyDown: onItemKeyDown,\n        expandedMenuItemKey,\n        openSubMenu,\n        dismissSubMenu: onSubMenuDismiss,\n        dismissMenu: dismiss,\n      } as const;\n\n      if (item.href) {\n        return <ContextualMenuAnchor {...commonProps} onItemClick={onAnchorClick} />;\n      }\n\n      if (item.split && hasSubmenu(item)) {\n        return (\n          <ContextualMenuSplitButton\n            {...commonProps}\n            onItemClick={onItemClick}\n            onItemClickBase={onItemClickBase}\n            onTap={cancelSubMenuTimer}\n          />\n        );\n      }\n\n      return <ContextualMenuButton {...commonProps} onItemClick={onItemClick} onItemClickBase={onItemClickBase} />;\n    };\n\n    const renderHeaderMenuItem = (\n      item: IContextualMenuItem,\n      // eslint-disable-next-line deprecation/deprecation\n      itemClassNames: IMenuItemClassNames,\n      // eslint-disable-next-line deprecation/deprecation\n      menuClassNames: IProcessedStyleSet<IContextualMenuStyles> | IContextualMenuClassNames,\n      index: number,\n      hasCheckmarks: boolean,\n      hasIcons: boolean,\n    ): React.ReactNode => {\n      const { contextualMenuItemAs: ChildrenRenderer = ContextualMenuItem } = props;\n      const { itemProps, id } = item;\n      const divHtmlProperties =\n        itemProps && getNativeProps<React.HTMLAttributes<HTMLDivElement>>(itemProps, divProperties);\n      return (\n        // eslint-disable-next-line deprecation/deprecation\n        <div id={id} className={menuClassNames.header} {...divHtmlProperties} style={item.style}>\n          <ChildrenRenderer\n            item={item}\n            classNames={itemClassNames}\n            index={index}\n            onCheckmarkClick={hasCheckmarks ? onItemClick : undefined}\n            hasIcons={hasIcons}\n            {...itemProps}\n          />\n        </div>\n      );\n    };\n    //#endregion\n\n    //#region Main render\n    let { isBeakVisible } = props;\n\n    const {\n      items,\n      labelElementId,\n      id,\n      className,\n      beakWidth,\n      directionalHint,\n      directionalHintForRTL,\n      alignTargetEdge,\n      gapSpace,\n      coverTarget,\n      ariaLabel,\n      doNotLayer,\n      target,\n      bounds,\n      useTargetWidth,\n      useTargetAsMinWidth,\n      directionalHintFixed,\n      shouldFocusOnMount,\n      shouldFocusOnContainer,\n      title,\n      styles,\n      theme,\n      calloutProps,\n      onRenderSubMenu = onDefaultRenderSubMenu,\n      onRenderMenuList = (\n        menuListProps: IContextualMenuListProps,\n        defaultRender?: IRenderFunction<IContextualMenuListProps>,\n      ) => onDefaultRenderMenuList(menuListProps, classNames, defaultRender),\n      focusZoneProps,\n      // eslint-disable-next-line deprecation/deprecation\n      getMenuClassNames,\n    } = props;\n\n    const classNames = getMenuClassNames\n      ? getMenuClassNames(theme!, className)\n      : getClassNames(styles, {\n          theme: theme!,\n          className: className,\n        });\n\n    const hasIcons = itemsHaveIcons(items);\n\n    function itemsHaveIcons(contextualMenuItems: IContextualMenuItem[]): boolean {\n      for (const item of contextualMenuItems) {\n        if (item.iconProps) {\n          return true;\n        }\n\n        if (\n          item.itemType === ContextualMenuItemType.Section &&\n          item.sectionProps &&\n          itemsHaveIcons(item.sectionProps.items)\n        ) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    const adjustedFocusZoneProps = {\n      direction: FocusZoneDirection.vertical,\n      handleTabKey: FocusZoneTabbableElements.all,\n      isCircularNavigation: true,\n      ...focusZoneProps,\n      className: css(classNames.root, props.focusZoneProps?.className),\n    };\n\n    const hasCheckmarks = canAnyMenuItemsCheck(items);\n    const submenuProps = expandedMenuItemKey && props.hidden !== true ? getSubmenuProps() : null;\n\n    isBeakVisible = isBeakVisible === undefined ? responsiveMode! <= ResponsiveMode.medium : isBeakVisible;\n    /**\n     * When useTargetWidth is true, get the width of the target element and apply it for the context menu container\n     */\n    let contextMenuStyle: React.CSSProperties;\n    const targetAsHtmlElement = targetRef.current as HTMLElement;\n    if ((useTargetWidth || useTargetAsMinWidth) && targetAsHtmlElement && targetAsHtmlElement.offsetWidth) {\n      const targetBoundingRect = targetAsHtmlElement.getBoundingClientRect();\n      const targetWidth = targetBoundingRect.width - 2; /* Accounts for 1px border */\n\n      if (useTargetWidth) {\n        contextMenuStyle = {\n          width: targetWidth,\n        };\n      } else if (useTargetAsMinWidth) {\n        contextMenuStyle = {\n          minWidth: targetWidth,\n        };\n      }\n    }\n\n    // The menu should only return if items were provided, if no items were provided then it should not appear.\n    if (items && items.length > 0) {\n      let totalItemCount = 0;\n      for (const item of items) {\n        if (item.itemType !== ContextualMenuItemType.Divider && item.itemType !== ContextualMenuItemType.Header) {\n          const itemCount = item.customOnRenderListLength ? item.customOnRenderListLength : 1;\n          totalItemCount += itemCount;\n        }\n      }\n\n      const calloutStyles = classNames.subComponentStyles\n        ? (classNames.subComponentStyles.callout as IStyleFunctionOrObject<\n            ICalloutContentStyleProps,\n            ICalloutContentStyles\n          >)\n        : undefined;\n\n      return (\n        <MenuContext.Consumer>\n          {menuContext => (\n            <Callout\n              styles={calloutStyles}\n              onRestoreFocus={tryFocusPreviousActiveElement}\n              {...calloutProps}\n              target={target || (menuContext.target as IContextualMenuProps['target'])}\n              isBeakVisible={isBeakVisible}\n              beakWidth={beakWidth}\n              directionalHint={directionalHint}\n              directionalHintForRTL={directionalHintForRTL}\n              gapSpace={gapSpace}\n              coverTarget={coverTarget}\n              doNotLayer={doNotLayer}\n              className={css('ms-ContextualMenu-Callout', calloutProps && calloutProps.className)}\n              setInitialFocus={shouldFocusOnMount}\n              onDismiss={props.onDismiss || menuContext.onDismiss}\n              onScroll={onScroll}\n              bounds={bounds}\n              directionalHintFixed={directionalHintFixed}\n              alignTargetEdge={alignTargetEdge}\n              hidden={props.hidden || menuContext.hidden}\n              ref={forwardedRef}\n            >\n              <div\n                style={contextMenuStyle}\n                ref={hostElement}\n                id={id}\n                className={classNames.container}\n                tabIndex={shouldFocusOnContainer ? 0 : -1}\n                onKeyDown={onMenuKeyDown}\n                onKeyUp={onKeyUp}\n                onFocusCapture={onMenuFocusCapture}\n                aria-label={ariaLabel}\n                aria-labelledby={labelElementId}\n                role={'menu'}\n              >\n                {title && <div className={classNames.title}> {title} </div>}\n                {items && items.length\n                  ? renderFocusZone(\n                      onRenderMenuList(\n                        {\n                          ariaLabel,\n                          items,\n                          totalItemCount,\n                          hasCheckmarks,\n                          hasIcons,\n                          defaultMenuItemRenderer: (item: IContextualMenuItemRenderProps) =>\n                            defaultMenuItemRenderer(item, classNames),\n                          labelElementId,\n                        },\n                        (\n                          menuListProps: IContextualMenuListProps,\n                          defaultRender?: IRenderFunction<IContextualMenuListProps>,\n                        ) => onDefaultRenderMenuList(menuListProps, classNames, defaultRender),\n                      ),\n                      adjustedFocusZoneProps,\n                    )\n                  : null}\n                {submenuProps && onRenderSubMenu(submenuProps, onDefaultRenderSubMenu)}\n              </div>\n            </Callout>\n          )}\n        </MenuContext.Consumer>\n      );\n    } else {\n      return null;\n    }\n    //#endregion\n  }),\n  (prevProps, newProps) => {\n    if (!newProps.shouldUpdateWhenHidden && prevProps.hidden && newProps.hidden) {\n      // Do not update when hidden.\n      return true;\n    }\n\n    return shallowCompare(prevProps, newProps);\n  },\n);\nContextualMenuBase.displayName = 'ContextualMenuBase';\n\n/**\n * Returns true if the key for the event is alt (Mac option) or meta (Mac command).\n */\nfunction isAltOrMeta(ev: React.KeyboardEvent<HTMLElement>): boolean {\n  // eslint-disable-next-line deprecation/deprecation\n  return ev.which === KeyCodes.alt || ev.key === 'Meta';\n}\n\nfunction onItemMouseDown(item: IContextualMenuItem, ev: React.MouseEvent<HTMLElement>): void {\n  item.onMouseDown?.(item, ev);\n}\n\nfunction onDefaultRenderSubMenu(\n  subMenuProps: IContextualMenuProps,\n  defaultRender?: IRenderFunction<IContextualMenuProps>,\n): JSX.Element {\n  throw Error(\n    'ContextualMenuBase: onRenderSubMenu callback is null or undefined. ' +\n      'Please ensure to set `onRenderSubMenu` property either manually or with `styled` helper.',\n  );\n}\n\n/**\n * Returns the item that matches a given key if any.\n * @param key - The key of the item to match\n * @param items - The items to look for the key\n */\nfunction findItemByKeyFromItems(key: string, items: IContextualMenuItem[]): IContextualMenuItem | undefined {\n  for (const item of items) {\n    if (item.itemType === ContextualMenuItemType.Section && item.sectionProps) {\n      const match = findItemByKeyFromItems(key, item.sectionProps.items);\n      if (match) {\n        return match;\n      }\n    } else if (item.key && item.key === key) {\n      return item;\n    }\n  }\n}\n\nfunction getOnClickWithOverrideTarget(\n  onClick:\n    | ((\n        ev?: React.MouseEvent<HTMLElement, MouseEvent> | React.KeyboardEvent<HTMLElement> | undefined,\n        item?: IContextualMenuItem | undefined,\n      ) => boolean | void)\n    | undefined,\n  target: Target | undefined,\n) {\n  return onClick\n    ? (\n        ev?: React.MouseEvent<HTMLElement, MouseEvent> | React.KeyboardEvent<HTMLElement> | undefined,\n        item?: IContextualMenuItem | undefined,\n      ) => {\n        overrideTarget(ev, target);\n\n        return onClick(ev, item);\n      }\n    : onClick;\n}\n\nfunction overrideTarget(\n  ev?: React.MouseEvent<HTMLElement, MouseEvent> | React.KeyboardEvent<HTMLElement> | undefined,\n  target?: Target,\n): void {\n  if (ev && target) {\n    ev.persist();\n\n    if (target instanceof Event) {\n      ev.target = target.target as HTMLElement;\n    } else if (target instanceof Element) {\n      ev.target = target;\n    }\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}