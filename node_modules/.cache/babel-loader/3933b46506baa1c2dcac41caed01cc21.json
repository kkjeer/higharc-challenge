{"ast":null,"code":"import * as React from 'react';\nimport { classNamesFunction } from '../../../Utilities';\nimport { getStyles } from './Beak.styles';\nimport { RectangleEdge } from '../../../Positioning';\nexport var BEAK_HEIGHT = 10;\nexport var BEAK_WIDTH = 18;\nexport var Beak = React.forwardRef(function (props, forwardedRef) {\n  var left = props.left,\n      top = props.top,\n      bottom = props.bottom,\n      right = props.right,\n      color = props.color,\n      _a = props.direction,\n      direction = _a === void 0 ? RectangleEdge.top : _a;\n  var svgHeight;\n  var svgWidth;\n\n  if (direction === RectangleEdge.top || direction === RectangleEdge.bottom) {\n    svgHeight = BEAK_HEIGHT;\n    svgWidth = BEAK_WIDTH;\n  } else {\n    svgHeight = BEAK_WIDTH;\n    svgWidth = BEAK_HEIGHT;\n  }\n\n  var pointOne;\n  var pointTwo;\n  var pointThree;\n  var transform;\n\n  switch (direction) {\n    case RectangleEdge.top:\n    default:\n      pointOne = BEAK_WIDTH / 2 + \", 0\";\n      pointTwo = BEAK_WIDTH + \", \" + BEAK_HEIGHT;\n      pointThree = \"0, \" + BEAK_HEIGHT;\n      transform = 'translateY(-100%)';\n      break;\n\n    case RectangleEdge.right:\n      pointOne = \"0, 0\";\n      pointTwo = BEAK_HEIGHT + \", \" + BEAK_HEIGHT;\n      pointThree = \"0, \" + BEAK_WIDTH;\n      transform = 'translateX(100%)';\n      break;\n\n    case RectangleEdge.bottom:\n      pointOne = \"0, 0\";\n      pointTwo = BEAK_WIDTH + \", 0\";\n      pointThree = BEAK_WIDTH / 2 + \", \" + BEAK_HEIGHT;\n      transform = 'translateY(100%)';\n      break;\n\n    case RectangleEdge.left:\n      pointOne = BEAK_HEIGHT + \", 0\";\n      pointTwo = \"0, \" + BEAK_HEIGHT;\n      pointThree = BEAK_HEIGHT + \", \" + BEAK_WIDTH;\n      transform = 'translateX(-100%)';\n      break;\n  }\n\n  var getClassNames = classNamesFunction();\n  var classNames = getClassNames(getStyles, {\n    left: left,\n    top: top,\n    bottom: bottom,\n    right: right,\n    height: svgHeight + \"px\",\n    width: svgWidth + \"px\",\n    transform: transform,\n    color: color\n  });\n  return React.createElement(\"div\", {\n    className: classNames.root,\n    role: \"presentation\",\n    ref: forwardedRef\n  }, React.createElement(\"svg\", {\n    height: svgHeight,\n    width: svgWidth,\n    className: classNames.beak\n  }, React.createElement(\"polygon\", {\n    points: pointOne + ' ' + pointTwo + ' ' + pointThree\n  })));\n});\nBeak.displayName = 'Beak';","map":{"version":3,"sources":["components/Coachmark/Beak/Beak.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { classNamesFunction } from '../../../Utilities';\nimport { getStyles } from './Beak.styles';\nimport { RectangleEdge } from '../../../Positioning';\nimport type { IBeakProps, IBeakStylesProps } from './Beak.types';\nimport type { IBeakStyles } from './Beak.styles';\n\nexport const BEAK_HEIGHT = 10;\nexport const BEAK_WIDTH = 18;\n\nexport const Beak: React.FunctionComponent<IBeakProps> = React.forwardRef<HTMLDivElement, IBeakProps>(\n  (props, forwardedRef) => {\n    const { left, top, bottom, right, color, direction = RectangleEdge.top } = props;\n\n    let svgHeight: number;\n    let svgWidth: number;\n\n    if (direction === RectangleEdge.top || direction === RectangleEdge.bottom) {\n      svgHeight = BEAK_HEIGHT;\n      svgWidth = BEAK_WIDTH;\n    } else {\n      svgHeight = BEAK_WIDTH;\n      svgWidth = BEAK_HEIGHT;\n    }\n\n    let pointOne: string;\n    let pointTwo: string;\n    let pointThree: string;\n    let transform: string;\n\n    switch (direction) {\n      case RectangleEdge.top:\n      default:\n        pointOne = `${BEAK_WIDTH / 2}, 0`;\n        pointTwo = `${BEAK_WIDTH}, ${BEAK_HEIGHT}`;\n        pointThree = `0, ${BEAK_HEIGHT}`;\n        transform = 'translateY(-100%)';\n        break;\n      case RectangleEdge.right:\n        pointOne = `0, 0`;\n        pointTwo = `${BEAK_HEIGHT}, ${BEAK_HEIGHT}`;\n        pointThree = `0, ${BEAK_WIDTH}`;\n        transform = 'translateX(100%)';\n        break;\n      case RectangleEdge.bottom:\n        pointOne = `0, 0`;\n        pointTwo = `${BEAK_WIDTH}, 0`;\n        pointThree = `${BEAK_WIDTH / 2}, ${BEAK_HEIGHT}`;\n        transform = 'translateY(100%)';\n        break;\n      case RectangleEdge.left:\n        pointOne = `${BEAK_HEIGHT}, 0`;\n        pointTwo = `0, ${BEAK_HEIGHT}`;\n        pointThree = `${BEAK_HEIGHT}, ${BEAK_WIDTH}`;\n        transform = 'translateX(-100%)';\n        break;\n    }\n\n    const getClassNames = classNamesFunction<IBeakStylesProps, IBeakStyles>();\n    const classNames = getClassNames(getStyles, {\n      left,\n      top,\n      bottom,\n      right,\n      height: `${svgHeight}px`,\n      width: `${svgWidth}px`,\n      transform: transform,\n      color,\n    });\n\n    return (\n      <div className={classNames.root} role=\"presentation\" ref={forwardedRef}>\n        <svg height={svgHeight} width={svgWidth} className={classNames.beak}>\n          <polygon points={pointOne + ' ' + pointTwo + ' ' + pointThree} />\n        </svg>\n      </div>\n    );\n  },\n);\nBeak.displayName = 'Beak';\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}