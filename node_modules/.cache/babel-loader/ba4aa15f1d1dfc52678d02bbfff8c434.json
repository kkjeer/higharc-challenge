{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { styled, classNamesFunction } from '../../../Utilities';\nimport { IconButton } from '../../../Button';\nimport { getStyles } from './TagItem.styles';\nimport { useId } from '@fluentui/react-hooks';\nvar getClassNames = classNamesFunction();\n/**\n * {@docCategory TagPicker}\n */\n\nexport var TagItemBase = function (props) {\n  var theme = props.theme,\n      styles = props.styles,\n      selected = props.selected,\n      disabled = props.disabled,\n      enableTagFocusInDisabledPicker = props.enableTagFocusInDisabledPicker,\n      children = props.children,\n      className = props.className,\n      index = props.index,\n      onRemoveItem = props.onRemoveItem,\n      removeButtonAriaLabel = props.removeButtonAriaLabel,\n      _a = props.title,\n      title = _a === void 0 ? typeof props.children === 'string' ? props.children : props.item.name : _a,\n      removeButtonIconProps = props.removeButtonIconProps;\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className,\n    selected: selected,\n    disabled: disabled\n  });\n  var itemId = useId();\n  var disabledAttrs = enableTagFocusInDisabledPicker ? {\n    'aria-disabled': disabled,\n    tabindex: 0\n  } : {\n    disabled: disabled\n  };\n  return React.createElement(\"div\", {\n    className: classNames.root,\n    role: 'listitem',\n    key: index\n  }, React.createElement(\"span\", {\n    className: classNames.text,\n    title: title,\n    id: itemId + \"-text\"\n  }, children), React.createElement(IconButton, __assign({\n    id: itemId,\n    onClick: onRemoveItem\n  }, disabledAttrs, {\n    iconProps: removeButtonIconProps !== null && removeButtonIconProps !== void 0 ? removeButtonIconProps : {\n      iconName: 'Cancel'\n    },\n    styles: {\n      icon: {\n        fontSize: '12px'\n      }\n    },\n    className: classNames.close,\n    ariaLabel: removeButtonAriaLabel,\n    \"aria-labelledby\": itemId + \" \" + itemId + \"-text\",\n    \"data-selection-index\": index\n  })));\n};\nexport var TagItem = styled(TagItemBase, getStyles, undefined, {\n  scope: 'TagItem'\n});","map":{"version":3,"sources":["components/pickers/TagPicker/TagItem.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAEA,SAAS,MAAT,EAAiB,kBAAjB,QAA2C,oBAA3C;AACA,SAAS,UAAT,QAA2B,iBAA3B;AACA,SAAS,SAAT,QAA0B,kBAA1B;AACA,SAAS,KAAT,QAAsB,uBAAtB;AAGA,IAAM,aAAa,GAAG,kBAAkB,EAAxC;AAEA;;AAEG;;AACH,OAAO,IAAM,WAAW,GAAG,UAAC,KAAD,EAAqB;EAE5C,IAAA,KAAK,GAYH,KAAK,CAZF,KAAL;EAAA,IACA,MAAM,GAWJ,KAAK,CAXD,MADN;EAAA,IAEA,QAAQ,GAUN,KAAK,CAVC,QAFR;EAAA,IAGA,QAAQ,GASN,KAAK,CATC,QAHR;EAAA,IAIA,8BAA8B,GAQ5B,KAAK,CARuB,8BAJ9B;EAAA,IAKA,QAAQ,GAON,KAAK,CAPC,QALR;EAAA,IAMA,SAAS,GAMP,KAAK,CANE,SANT;EAAA,IAOA,KAAK,GAKH,KAAK,CALF,KAPL;EAAA,IAQA,YAAY,GAIV,KAAK,CAJK,YARZ;EAAA,IASA,qBAAqB,GAGnB,KAAK,CAHc,qBATrB;EAAA,IAUA,EAAA,GAEE,KAAK,CAFsE,KAV7E;EAAA,IAUA,KAAK,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,OAAO,KAAK,CAAC,QAAb,KAA0B,QAA1B,GAAqC,KAAK,CAAC,QAA3C,GAAsD,KAAK,CAAC,IAAN,CAAW,IAApE,GAAwE,EAV7E;EAAA,IAWA,qBAAqB,GACnB,KAAK,CADc,qBAXrB;EAcF,IAAM,UAAU,GAAG,aAAa,CAAC,MAAD,EAAS;IACvC,KAAK,EAAE,KADgC;IAEvC,SAAS,EAAA,SAF8B;IAGvC,QAAQ,EAAA,QAH+B;IAIvC,QAAQ,EAAA;EAJ+B,CAAT,CAAhC;EAOA,IAAM,MAAM,GAAG,KAAK,EAApB;EAEA,IAAM,aAAa,GAAG,8BAA8B,GAChD;IACE,iBAAiB,QADnB;IAEE,QAAQ,EAAE;EAFZ,CADgD,GAKhD;IACE,QAAQ,EAAE;EADZ,CALJ;EASA,OACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAE,UAAU,CAAC,IAA3B;IAAiC,IAAI,EAAE,UAAvC;IAAmD,GAAG,EAAE;EAAxD,CAAA,EACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;IAAM,SAAS,EAAE,UAAU,CAAC,IAA5B;IAAkC,KAAK,EAAE,KAAzC;IAAgD,EAAE,EAAK,MAAM,GAAA;EAA7D,CAAA,EACG,QADH,CADF,EAIE,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW,QAAA,CAAA;IACT,EAAE,EAAE,MADK;IAET,OAAO,EAAE;EAFA,CAAA,EAGL,aAHK,EAGQ;IACjB,SAAS,EAAE,qBAAqB,KAAA,IAArB,IAAA,qBAAqB,KAAA,KAAA,CAArB,GAAA,qBAAA,GAAyB;MAAE,QAAQ,EAAE;IAAZ,CADnB;IAEjB,MAAM,EAAE;MAAE,IAAI,EAAE;QAAE,QAAQ,EAAE;MAAZ;IAAR,CAFS;IAGjB,SAAS,EAAE,UAAU,CAAC,KAHL;IAIjB,SAAS,EAAE,qBAJM;IAIe,mBACZ,MAAM,GAAA,GAAN,GAAU,MAAV,GAAgB,OALnB;IAK0B,wBACrB;EANL,CAHR,CAAX,CAJF,CADF;AAkBD,CApDM;AAsDP,OAAO,IAAM,OAAO,GAAG,MAAM,CAAoD,WAApD,EAAiE,SAAjE,EAA4E,SAA5E,EAAuF;EAClH,KAAK,EAAE;AAD2G,CAAvF,CAAtB","sourcesContent":["import * as React from 'react';\n\nimport { styled, classNamesFunction } from '../../../Utilities';\nimport { IconButton } from '../../../Button';\nimport { getStyles } from './TagItem.styles';\nimport { useId } from '@fluentui/react-hooks';\nimport type { ITagItemProps, ITagItemStyleProps, ITagItemStyles } from './TagPicker.types';\n\nconst getClassNames = classNamesFunction<ITagItemStyleProps, ITagItemStyles>();\n\n/**\n * {@docCategory TagPicker}\n */\nexport const TagItemBase = (props: ITagItemProps) => {\n  const {\n    theme,\n    styles,\n    selected,\n    disabled,\n    enableTagFocusInDisabledPicker,\n    children,\n    className,\n    index,\n    onRemoveItem,\n    removeButtonAriaLabel,\n    title = typeof props.children === 'string' ? props.children : props.item.name,\n    removeButtonIconProps,\n  } = props;\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className,\n    selected,\n    disabled,\n  });\n\n  const itemId = useId();\n\n  const disabledAttrs = enableTagFocusInDisabledPicker\n    ? {\n        'aria-disabled': disabled,\n        tabindex: 0,\n      }\n    : {\n        disabled: disabled,\n      };\n\n  return (\n    <div className={classNames.root} role={'listitem'} key={index}>\n      <span className={classNames.text} title={title} id={`${itemId}-text`}>\n        {children}\n      </span>\n      <IconButton\n        id={itemId}\n        onClick={onRemoveItem}\n        {...disabledAttrs}\n        iconProps={removeButtonIconProps ?? { iconName: 'Cancel' }}\n        styles={{ icon: { fontSize: '12px' } }}\n        className={classNames.close}\n        ariaLabel={removeButtonAriaLabel}\n        aria-labelledby={`${itemId} ${itemId}-text`}\n        data-selection-index={index}\n      />\n    </div>\n  );\n};\n\nexport const TagItem = styled<ITagItemProps, ITagItemStyleProps, ITagItemStyles>(TagItemBase, getStyles, undefined, {\n  scope: 'TagItem',\n});\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}