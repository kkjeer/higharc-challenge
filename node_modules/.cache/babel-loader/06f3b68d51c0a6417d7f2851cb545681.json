{"ast":null,"code":"import { isVirtualElement } from './isVirtualElement';\n/**\n * Gets the elements which are child elements of the given element.\n * If `allowVirtualChildren` is `true`, this method enumerates virtual child elements\n * after the original children.\n * @param parent - The element to get the children of.\n * @param allowVirtualChildren - true if the method should enumerate virtual child elements.\n */\n\nexport function getChildren(parent, allowVirtualChildren) {\n  if (allowVirtualChildren === void 0) {\n    allowVirtualChildren = true;\n  }\n\n  var children = [];\n\n  if (parent) {\n    for (var i = 0; i < parent.children.length; i++) {\n      children.push(parent.children.item(i));\n    }\n\n    if (allowVirtualChildren && isVirtualElement(parent)) {\n      children.push.apply(children, parent._virtual.children);\n    }\n  }\n\n  return children;\n}","map":{"version":3,"sources":["getChildren.ts"],"names":[],"mappings":"AAAA,SAAS,gBAAT,QAAiC,oBAAjC;AACA;;;;;;AAMG;;AACH,OAAM,SAAU,WAAV,CAAsB,MAAtB,EAA2C,oBAA3C,EAA+E;EAApC,IAAA,oBAAA,KAAA,KAAA,CAAA,EAAA;IAAA,oBAAA,GAAA,IAAA;EAAoC;;EACnF,IAAM,QAAQ,GAAkB,EAAhC;;EACA,IAAI,MAAJ,EAAY;IACV,KAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,QAAP,CAAgB,MAApC,EAA4C,CAAC,EAA7C,EAAiD;MAC/C,QAAQ,CAAC,IAAT,CAAc,MAAM,CAAC,QAAP,CAAgB,IAAhB,CAAqB,CAArB,CAAd;IACD;;IACD,IAAI,oBAAoB,IAAI,gBAAgB,CAAC,MAAD,CAA5C,EAAsD;MACpD,QAAQ,CAAC,IAAT,CAAa,KAAb,CAAA,QAAA,EAAiB,MAAM,CAAC,QAAP,CAAgB,QAAjC;IACD;EACF;;EACD,OAAO,QAAP;AACD","sourcesContent":["import { isVirtualElement } from './isVirtualElement';\n/**\n * Gets the elements which are child elements of the given element.\n * If `allowVirtualChildren` is `true`, this method enumerates virtual child elements\n * after the original children.\n * @param parent - The element to get the children of.\n * @param allowVirtualChildren - true if the method should enumerate virtual child elements.\n */\nexport function getChildren(parent: HTMLElement, allowVirtualChildren: boolean = true): HTMLElement[] {\n  const children: HTMLElement[] = [];\n  if (parent) {\n    for (let i = 0; i < parent.children.length; i++) {\n      children.push(parent.children.item(i) as HTMLElement);\n    }\n    if (allowVirtualChildren && isVirtualElement(parent)) {\n      children.push(...parent._virtual.children);\n    }\n  }\n  return children;\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}