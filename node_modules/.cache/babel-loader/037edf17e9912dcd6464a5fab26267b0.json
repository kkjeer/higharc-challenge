{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { concatStyleSets, getFocusStyle, HighContrastSelector, getScreenSelector, ScreenWidthMaxMedium, IconFontSizes, getHighContrastNoAdjustStyle } from '../../Styling';\nimport { memoizeFunction } from '../../Utilities';\nexport var CONTEXTUAL_MENU_ITEM_HEIGHT = 36;\nvar MediumScreenSelector = getScreenSelector(0, ScreenWidthMaxMedium);\nexport var getMenuItemStyles = memoizeFunction(function (theme) {\n  var _a, _b, _c, _d, _e;\n\n  var semanticColors = theme.semanticColors,\n      fonts = theme.fonts,\n      palette = theme.palette;\n  var ContextualMenuItemBackgroundHoverColor = semanticColors.menuItemBackgroundHovered;\n  var ContextualMenuItemTextHoverColor = semanticColors.menuItemTextHovered;\n  var ContextualMenuItemBackgroundSelectedColor = semanticColors.menuItemBackgroundPressed;\n  var ContextualMenuItemDividerColor = semanticColors.bodyDivider;\n  var menuItemStyles = {\n    item: [fonts.medium, {\n      color: semanticColors.bodyText,\n      position: 'relative',\n      boxSizing: 'border-box'\n    }],\n    divider: {\n      display: 'block',\n      height: '1px',\n      backgroundColor: ContextualMenuItemDividerColor,\n      position: 'relative'\n    },\n    root: [getFocusStyle(theme), fonts.medium, {\n      color: semanticColors.bodyText,\n      backgroundColor: 'transparent',\n      border: 'none',\n      width: '100%',\n      height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n      lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n      display: 'block',\n      cursor: 'pointer',\n      padding: '0px 8px 0 4px',\n      textAlign: 'left'\n    }],\n    rootDisabled: {\n      color: semanticColors.disabledBodyText,\n      cursor: 'default',\n      pointerEvents: 'none',\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        // ensure disabled text looks different than enabled\n        color: 'GrayText',\n        opacity: 1\n      }, _a)\n    },\n    rootHovered: {\n      backgroundColor: ContextualMenuItemBackgroundHoverColor,\n      color: ContextualMenuItemTextHoverColor,\n      selectors: {\n        '.ms-ContextualMenu-icon': {\n          color: palette.themeDarkAlt\n        },\n        '.ms-ContextualMenu-submenuIcon': {\n          color: palette.neutralPrimary\n        }\n      }\n    },\n    rootFocused: {\n      backgroundColor: palette.white\n    },\n    rootChecked: {\n      selectors: {\n        '.ms-ContextualMenu-checkmarkIcon': {\n          color: palette.neutralPrimary\n        }\n      }\n    },\n    rootPressed: {\n      backgroundColor: ContextualMenuItemBackgroundSelectedColor,\n      selectors: {\n        '.ms-ContextualMenu-icon': {\n          color: palette.themeDark\n        },\n        '.ms-ContextualMenu-submenuIcon': {\n          color: palette.neutralPrimary\n        }\n      }\n    },\n    rootExpanded: {\n      backgroundColor: ContextualMenuItemBackgroundSelectedColor,\n      color: semanticColors.bodyTextChecked,\n      selectors: (_b = {\n        '.ms-ContextualMenu-submenuIcon': (_c = {}, _c[HighContrastSelector] = {\n          // icons inside of anchor tags are not properly inheriting color in high contrast\n          color: 'inherit'\n        }, _c)\n      }, _b[HighContrastSelector] = __assign({}, getHighContrastNoAdjustStyle()), _b)\n    },\n    linkContent: {\n      whiteSpace: 'nowrap',\n      height: 'inherit',\n      display: 'flex',\n      alignItems: 'center',\n      maxWidth: '100%'\n    },\n    anchorLink: {\n      padding: '0px 8px 0 4px',\n      textRendering: 'auto',\n      color: 'inherit',\n      letterSpacing: 'normal',\n      wordSpacing: 'normal',\n      textTransform: 'none',\n      textIndent: '0px',\n      textShadow: 'none',\n      textDecoration: 'none',\n      boxSizing: 'border-box'\n    },\n    label: {\n      margin: '0 4px',\n      verticalAlign: 'middle',\n      display: 'inline-block',\n      flexGrow: '1',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n    secondaryText: {\n      color: theme.palette.neutralSecondary,\n      paddingLeft: '20px',\n      textAlign: 'right'\n    },\n    icon: {\n      display: 'inline-block',\n      minHeight: '1px',\n      maxHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n      fontSize: IconFontSizes.medium,\n      width: IconFontSizes.medium,\n      margin: '0 4px',\n      verticalAlign: 'middle',\n      flexShrink: '0',\n      selectors: (_d = {}, _d[MediumScreenSelector] = {\n        fontSize: IconFontSizes.large,\n        width: IconFontSizes.large\n      }, _d)\n    },\n    iconColor: {\n      color: semanticColors.menuIcon\n    },\n    iconDisabled: {\n      color: semanticColors.disabledBodyText\n    },\n    checkmarkIcon: {\n      color: semanticColors.bodySubtext\n    },\n    subMenuIcon: {\n      height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n      lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n      color: palette.neutralSecondary,\n      textAlign: 'center',\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      flexShrink: '0',\n      fontSize: IconFontSizes.small,\n      selectors: (_e = {\n        ':hover': {\n          color: palette.neutralPrimary\n        },\n        ':active': {\n          color: palette.neutralPrimary\n        }\n      }, _e[MediumScreenSelector] = {\n        fontSize: IconFontSizes.medium // 16px\n\n      }, _e)\n    },\n    splitButtonFlexContainer: [getFocusStyle(theme), {\n      display: 'flex',\n      height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n      flexWrap: 'nowrap',\n      justifyContent: 'center',\n      alignItems: 'flex-start'\n    }]\n  };\n  return concatStyleSets(menuItemStyles);\n});","map":{"version":3,"sources":["components/ContextualMenu/ContextualMenu.cnstyles.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  concatStyleSets,\n  getFocusStyle,\n  HighContrastSelector,\n  getScreenSelector,\n  ScreenWidthMaxMedium,\n  IconFontSizes,\n  getHighContrastNoAdjustStyle,\n} from '../../Styling';\nimport { memoizeFunction } from '../../Utilities';\nimport type { ITheme } from '../../Styling';\nimport type { IMenuItemStyles } from './ContextualMenu.types';\n\nexport const CONTEXTUAL_MENU_ITEM_HEIGHT = 36;\n\nconst MediumScreenSelector = getScreenSelector(0, ScreenWidthMaxMedium);\n\nexport const getMenuItemStyles = memoizeFunction(\n  (theme: ITheme): IMenuItemStyles => {\n    const { semanticColors, fonts, palette } = theme;\n    const ContextualMenuItemBackgroundHoverColor = semanticColors.menuItemBackgroundHovered;\n    const ContextualMenuItemTextHoverColor = semanticColors.menuItemTextHovered;\n    const ContextualMenuItemBackgroundSelectedColor = semanticColors.menuItemBackgroundPressed;\n    const ContextualMenuItemDividerColor = semanticColors.bodyDivider;\n\n    const menuItemStyles: IMenuItemStyles = {\n      item: [\n        fonts.medium,\n        {\n          color: semanticColors.bodyText,\n          position: 'relative',\n          boxSizing: 'border-box',\n        },\n      ],\n      divider: {\n        display: 'block',\n        height: '1px',\n        backgroundColor: ContextualMenuItemDividerColor,\n        position: 'relative',\n      },\n      root: [\n        getFocusStyle(theme),\n        fonts.medium,\n        {\n          color: semanticColors.bodyText,\n          backgroundColor: 'transparent',\n          border: 'none',\n          width: '100%',\n          height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n          lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n          display: 'block',\n          cursor: 'pointer',\n          padding: '0px 8px 0 4px', // inner elements have a margin of 4px (4 + 4 = 8px as on right side)\n          textAlign: 'left',\n        },\n      ],\n      rootDisabled: {\n        color: semanticColors.disabledBodyText,\n        cursor: 'default',\n        pointerEvents: 'none',\n        selectors: {\n          [HighContrastSelector]: {\n            // ensure disabled text looks different than enabled\n            color: 'GrayText',\n            opacity: 1,\n          },\n        },\n      },\n      rootHovered: {\n        backgroundColor: ContextualMenuItemBackgroundHoverColor,\n        color: ContextualMenuItemTextHoverColor,\n        selectors: {\n          '.ms-ContextualMenu-icon': {\n            color: palette.themeDarkAlt,\n          },\n          '.ms-ContextualMenu-submenuIcon': {\n            color: palette.neutralPrimary,\n          },\n        },\n      },\n      rootFocused: {\n        backgroundColor: palette.white,\n      },\n      rootChecked: {\n        selectors: {\n          '.ms-ContextualMenu-checkmarkIcon': {\n            color: palette.neutralPrimary,\n          },\n        },\n      },\n      rootPressed: {\n        backgroundColor: ContextualMenuItemBackgroundSelectedColor,\n        selectors: {\n          '.ms-ContextualMenu-icon': {\n            color: palette.themeDark,\n          },\n          '.ms-ContextualMenu-submenuIcon': {\n            color: palette.neutralPrimary,\n          },\n        },\n      },\n      rootExpanded: {\n        backgroundColor: ContextualMenuItemBackgroundSelectedColor,\n        color: semanticColors.bodyTextChecked,\n        selectors: {\n          '.ms-ContextualMenu-submenuIcon': {\n            [HighContrastSelector]: {\n              // icons inside of anchor tags are not properly inheriting color in high contrast\n              color: 'inherit',\n            },\n          },\n          [HighContrastSelector]: {\n            // allow change in background/text to be visible\n            ...getHighContrastNoAdjustStyle(),\n          },\n        },\n      },\n      linkContent: {\n        whiteSpace: 'nowrap',\n        height: 'inherit',\n        display: 'flex',\n        alignItems: 'center',\n        maxWidth: '100%',\n      },\n      anchorLink: {\n        padding: '0px 8px 0 4px', // inner elements have a margin of 4px (4 + 4 = 8px as on right side)\n        textRendering: 'auto',\n        color: 'inherit',\n        letterSpacing: 'normal',\n        wordSpacing: 'normal',\n        textTransform: 'none',\n        textIndent: '0px',\n        textShadow: 'none',\n        textDecoration: 'none',\n        boxSizing: 'border-box',\n      },\n      label: {\n        margin: '0 4px',\n        verticalAlign: 'middle',\n        display: 'inline-block',\n        flexGrow: '1',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n      },\n      secondaryText: {\n        color: theme.palette.neutralSecondary,\n        paddingLeft: '20px',\n        textAlign: 'right',\n      },\n      icon: {\n        display: 'inline-block',\n        minHeight: '1px',\n        maxHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n        fontSize: IconFontSizes.medium,\n        width: IconFontSizes.medium,\n        margin: '0 4px',\n        verticalAlign: 'middle',\n        flexShrink: '0',\n        selectors: {\n          [MediumScreenSelector]: {\n            fontSize: IconFontSizes.large,\n            width: IconFontSizes.large,\n          },\n        },\n      },\n      iconColor: {\n        color: semanticColors.menuIcon,\n      },\n      iconDisabled: {\n        color: semanticColors.disabledBodyText,\n      },\n      checkmarkIcon: {\n        color: semanticColors.bodySubtext,\n      },\n      subMenuIcon: {\n        height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n        lineHeight: CONTEXTUAL_MENU_ITEM_HEIGHT,\n        color: palette.neutralSecondary,\n        textAlign: 'center',\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        flexShrink: '0',\n        fontSize: IconFontSizes.small, // 12px\n        selectors: {\n          ':hover': {\n            color: palette.neutralPrimary,\n          },\n          ':active': {\n            color: palette.neutralPrimary,\n          },\n          [MediumScreenSelector]: {\n            fontSize: IconFontSizes.medium, // 16px\n          },\n        },\n      },\n      splitButtonFlexContainer: [\n        getFocusStyle(theme),\n        {\n          display: 'flex',\n          height: CONTEXTUAL_MENU_ITEM_HEIGHT,\n          flexWrap: 'nowrap',\n          justifyContent: 'center',\n          alignItems: 'flex-start',\n        },\n      ],\n    };\n\n    return concatStyleSets(menuItemStyles);\n  },\n);\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}