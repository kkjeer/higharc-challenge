{"ast":null,"code":"import { memoizeFunction } from '../../Utilities';\nimport { mergeStyles } from '../../Styling';\nexport var getClassNames = memoizeFunction(function (className, isDragging) {\n  return {\n    root: mergeStyles(className, isDragging && {\n      touchAction: 'none',\n      selectors: {\n        '& *': {\n          userSelect: 'none'\n        }\n      }\n    })\n  };\n});","map":{"version":3,"sources":["utilities/DraggableZone/DraggableZone.styles.ts"],"names":[],"mappings":"AAAA,SAAS,eAAT,QAAgC,iBAAhC;AACA,SAAS,WAAT,QAA4B,eAA5B;AAMA,OAAO,IAAM,aAAa,GAAG,eAAe,CAC1C,UAAC,SAAD,EAAoB,UAApB,EAAuC;EACrC,OAAO;IACL,IAAI,EAAE,WAAW,CACf,SADe,EAEf,UAAU,IAAI;MACZ,WAAW,EAAE,MADD;MAEZ,SAAS,EAAE;QACT,OAAO;UACL,UAAU,EAAE;QADP;MADE;IAFC,CAFC;EADZ,CAAP;AAaD,CAfyC,CAArC","sourcesContent":["import { memoizeFunction } from '../../Utilities';\nimport { mergeStyles } from '../../Styling';\n\nexport interface IDraggableZoneStyles {\n  root: string;\n}\n\nexport const getClassNames = memoizeFunction(\n  (className: string, isDragging: boolean): IDraggableZoneStyles => {\n    return {\n      root: mergeStyles(\n        className,\n        isDragging && {\n          touchAction: 'none',\n          selectors: {\n            '& *': {\n              userSelect: 'none',\n            },\n          },\n        },\n      ),\n    };\n  },\n);\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}