{"ast":null,"code":"import { MAX_COLOR_ALPHA } from './consts';\nimport { hsv2rgb } from './hsv2rgb';\nimport { hsv2hex } from './hsv2hex';\nimport { _rgbaOrHexString } from './_rgbaOrHexString';\n/**\n * Converts an HSV color (and optional alpha value) to a color object.\n * If `a` is not given, a default of 100 is used.\n * Hex in the returned value will *not* be prefixed with #.\n * If `a` is unspecified or 100, the result's `str` property will contain a hex value\n * (*not* prefixed with #)\n */\n\nexport function getColorFromHSV(hsv, a) {\n  var h = hsv.h,\n      s = hsv.s,\n      v = hsv.v;\n  a = typeof a === 'number' ? a : MAX_COLOR_ALPHA;\n\n  var _a = hsv2rgb(h, s, v),\n      r = _a.r,\n      g = _a.g,\n      b = _a.b;\n\n  var hex = hsv2hex(h, s, v);\n\n  var str = _rgbaOrHexString(r, g, b, a, hex);\n\n  var t = MAX_COLOR_ALPHA - a;\n  return {\n    a: a,\n    b: b,\n    g: g,\n    h: h,\n    hex: hex,\n    r: r,\n    s: s,\n    str: str,\n    v: v,\n    t: t\n  };\n}","map":{"version":3,"sources":["utilities/color/getColorFromHSV.ts"],"names":[],"mappings":"AAAA,SAAS,eAAT,QAAgC,UAAhC;AACA,SAAS,OAAT,QAAwB,WAAxB;AACA,SAAS,OAAT,QAAwB,WAAxB;AACA,SAAS,gBAAT,QAAiC,oBAAjC;AAGA;;;;;;AAMG;;AACH,OAAM,SAAU,eAAV,CAA0B,GAA1B,EAAqC,CAArC,EAA+C;EAC3C,IAAA,CAAC,GAAW,GAAG,CAAd,CAAD;EAAA,IAAG,CAAC,GAAQ,GAAG,CAAX,CAAJ;EAAA,IAAM,CAAC,GAAK,GAAG,CAAR,CAAP;EACR,CAAC,GAAG,OAAO,CAAP,KAAa,QAAb,GAAwB,CAAxB,GAA4B,eAAhC;;EAEM,IAAA,EAAA,GAAc,OAAO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAArB;EAAA,IAAE,CAAC,GAAA,EAAA,CAAA,CAAH;EAAA,IAAK,CAAC,GAAA,EAAA,CAAA,CAAN;EAAA,IAAQ,CAAC,GAAA,EAAA,CAAA,CAAT;;EACN,IAAM,GAAG,GAAG,OAAO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAnB;;EACA,IAAM,GAAG,GAAG,gBAAgB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,GAAb,CAA5B;;EACA,IAAM,CAAC,GAAG,eAAe,GAAG,CAA5B;EAEA,OAAO;IAAE,CAAC,EAAA,CAAH;IAAK,CAAC,EAAA,CAAN;IAAQ,CAAC,EAAA,CAAT;IAAW,CAAC,EAAA,CAAZ;IAAc,GAAG,EAAA,GAAjB;IAAmB,CAAC,EAAA,CAApB;IAAsB,CAAC,EAAA,CAAvB;IAAyB,GAAG,EAAA,GAA5B;IAA8B,CAAC,EAAA,CAA/B;IAAiC,CAAC,EAAA;EAAlC,CAAP;AACD","sourcesContent":["import { MAX_COLOR_ALPHA } from './consts';\nimport { hsv2rgb } from './hsv2rgb';\nimport { hsv2hex } from './hsv2hex';\nimport { _rgbaOrHexString } from './_rgbaOrHexString';\nimport type { IHSV, IColor } from './interfaces';\n\n/**\n * Converts an HSV color (and optional alpha value) to a color object.\n * If `a` is not given, a default of 100 is used.\n * Hex in the returned value will *not* be prefixed with #.\n * If `a` is unspecified or 100, the result's `str` property will contain a hex value\n * (*not* prefixed with #)\n */\nexport function getColorFromHSV(hsv: IHSV, a?: number): IColor {\n  const { h, s, v } = hsv;\n  a = typeof a === 'number' ? a : MAX_COLOR_ALPHA;\n\n  const { r, g, b } = hsv2rgb(h, s, v);\n  const hex = hsv2hex(h, s, v);\n  const str = _rgbaOrHexString(r, g, b, a, hex);\n  const t = MAX_COLOR_ALPHA - a;\n\n  return { a, b, g, h, hex, r, s, str, v, t };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}