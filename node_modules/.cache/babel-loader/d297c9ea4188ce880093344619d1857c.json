{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { cssColor } from './cssColor';\nimport { getColorFromRGBA } from './getColorFromRGBA';\n/**\n * Converts a CSS color string to a color object.\n * Note that hex colors *must* be prefixed with # to be considered valid.\n *\n * `inputColor` will be used unmodified as the `str` property of the returned object.\n * Alpha defaults to 100 if not specified in `inputColor`.\n * Returns undefined if the color string is invalid/not recognized.\n */\n\nexport function getColorFromString(inputColor) {\n  var color = cssColor(inputColor);\n\n  if (!color) {\n    return;\n  }\n\n  return __assign(__assign({}, getColorFromRGBA(color)), {\n    str: inputColor\n  });\n}","map":{"version":3,"sources":["utilities/color/getColorFromString.ts"],"names":[],"mappings":";AAAA,SAAS,QAAT,QAAyB,YAAzB;AACA,SAAS,gBAAT,QAAiC,oBAAjC;AAGA;;;;;;;AAOG;;AACH,OAAM,SAAU,kBAAV,CAA6B,UAA7B,EAA+C;EACnD,IAAM,KAAK,GAAG,QAAQ,CAAC,UAAD,CAAtB;;EAEA,IAAI,CAAC,KAAL,EAAY;IACV;EACD;;EAED,OAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACK,gBAAgB,CAAC,KAAD,CADrB,CAAA,EAC6B;IAC3B,GAAG,EAAE;EADsB,CAD7B,CAAA;AAID","sourcesContent":["import { cssColor } from './cssColor';\nimport { getColorFromRGBA } from './getColorFromRGBA';\nimport type { IColor } from './interfaces';\n\n/**\n * Converts a CSS color string to a color object.\n * Note that hex colors *must* be prefixed with # to be considered valid.\n *\n * `inputColor` will be used unmodified as the `str` property of the returned object.\n * Alpha defaults to 100 if not specified in `inputColor`.\n * Returns undefined if the color string is invalid/not recognized.\n */\nexport function getColorFromString(inputColor: string): IColor | undefined {\n  const color = cssColor(inputColor);\n\n  if (!color) {\n    return;\n  }\n\n  return {\n    ...getColorFromRGBA(color!),\n    str: inputColor,\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}