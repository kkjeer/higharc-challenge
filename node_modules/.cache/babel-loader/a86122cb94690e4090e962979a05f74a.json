{"ast":null,"code":"import { isElementVisibleAndNotHidden } from '../focus';\nimport { getDocument } from './getDocument';\n/**\n * Gets the first visible element that matches the given selector\n * @param selector - The selector to use to find potential visible elements\n * @returns The first visible element that matches the selector, otherwise undefined\n *\n * @public\n */\n\nexport function getFirstVisibleElementFromSelector(selector) {\n  var elements = getDocument().querySelectorAll(selector); // Iterate across the elements that match the selector and return the first visible/non-hidden element\n\n  return Array.from(elements).find(function (element) {\n    return isElementVisibleAndNotHidden(element);\n  });\n}","map":{"version":3,"sources":["dom/getFirstVisibleElementFromSelector.ts"],"names":[],"mappings":"AAAA,SAAS,4BAAT,QAA6C,UAA7C;AACA,SAAS,WAAT,QAA4B,eAA5B;AAEA;;;;;;AAMG;;AACH,OAAM,SAAU,kCAAV,CAA6C,QAA7C,EAA6D;EACjE,IAAM,QAAQ,GAAG,WAAW,GAAI,gBAAf,CAAgC,QAAhC,CAAjB,CADiE,CAGjE;;EACA,OAAO,KAAK,CAAC,IAAN,CAAW,QAAX,EAAqB,IAArB,CAA0B,UAAC,OAAD,EAAqB;IAAK,OAAA,4BAA4B,CAA5B,OAA4B,CAA5B;EAAqC,CAAzF,CAAP;AACD","sourcesContent":["import { isElementVisibleAndNotHidden } from '../focus';\nimport { getDocument } from './getDocument';\n\n/**\n * Gets the first visible element that matches the given selector\n * @param selector - The selector to use to find potential visible elements\n * @returns The first visible element that matches the selector, otherwise undefined\n *\n * @public\n */\nexport function getFirstVisibleElementFromSelector(selector: string): Element | undefined {\n  const elements = getDocument()!.querySelectorAll(selector);\n\n  // Iterate across the elements that match the selector and return the first visible/non-hidden element\n  return Array.from(elements).find((element: HTMLElement) => isElementVisibleAndNotHidden(element));\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}