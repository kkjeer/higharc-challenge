{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { getId, classNamesFunction, styled } from '../../../../Utilities';\nimport { Persona, PersonaSize } from '../../../../Persona';\nimport { IconButton } from '../../../../Button';\nimport { ValidationState } from '../../BasePicker.types';\nimport { getStyles } from './PeoplePickerItem.styles';\nvar getClassNames = classNamesFunction();\nexport var PeoplePickerItemBase = function (props) {\n  var item = props.item,\n      onRemoveItem = props.onRemoveItem,\n      index = props.index,\n      selected = props.selected,\n      removeButtonAriaLabel = props.removeButtonAriaLabel,\n      styles = props.styles,\n      theme = props.theme,\n      className = props.className,\n      disabled = props.disabled,\n      removeButtonIconProps = props.removeButtonIconProps;\n  var itemId = getId();\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className,\n    selected: selected,\n    disabled: disabled,\n    invalid: item.ValidationState === ValidationState.warning\n  });\n  var personaStyles = classNames.subComponentStyles ? classNames.subComponentStyles.persona : undefined;\n  var personaCoinStyles = classNames.subComponentStyles ? classNames.subComponentStyles.personaCoin : undefined;\n  return React.createElement(\"div\", {\n    className: classNames.root,\n    role: 'listitem'\n  }, React.createElement(\"div\", {\n    className: classNames.itemContent,\n    id: 'selectedItemPersona-' + itemId\n  }, React.createElement(Persona, __assign({\n    size: PersonaSize.size24,\n    styles: personaStyles,\n    coinProps: {\n      styles: personaCoinStyles\n    }\n  }, item))), React.createElement(IconButton, {\n    id: itemId,\n    onClick: onRemoveItem,\n    disabled: disabled,\n    iconProps: removeButtonIconProps !== null && removeButtonIconProps !== void 0 ? removeButtonIconProps : {\n      iconName: 'Cancel'\n    },\n    styles: {\n      icon: {\n        fontSize: '12px'\n      }\n    },\n    className: classNames.removeButton,\n    ariaLabel: removeButtonAriaLabel,\n    \"aria-labelledby\": itemId + \" selectedItemPersona-\" + itemId,\n    \"data-selection-index\": index\n  }));\n};\nexport var PeoplePickerItem = styled(PeoplePickerItemBase, getStyles, undefined, {\n  scope: 'PeoplePickerItem'\n});","map":{"version":3,"sources":["components/pickers/PeoplePicker/PeoplePickerItems/PeoplePickerItem.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAEA,SAAS,KAAT,EAAgB,kBAAhB,EAAoC,MAApC,QAAkD,uBAAlD;AACA,SAAS,OAAT,EAAkB,WAAlB,QAAqC,qBAArC;AACA,SAAS,UAAT,QAA2B,oBAA3B;AACA,SAAS,eAAT,QAAgC,wBAAhC;AACA,SAAS,SAAT,QAA0B,2BAA1B;AAcA,IAAM,aAAa,GAAG,kBAAkB,EAAxC;AAEA,OAAO,IAAM,oBAAoB,GAAG,UAAC,KAAD,EAAsC;EAEtE,IAAA,IAAI,GAUF,KAAK,CAVH,IAAJ;EAAA,IACA,YAAY,GASV,KAAK,CATK,YADZ;EAAA,IAEA,KAAK,GAQH,KAAK,CARF,KAFL;EAAA,IAGA,QAAQ,GAON,KAAK,CAPC,QAHR;EAAA,IAIA,qBAAqB,GAMnB,KAAK,CANc,qBAJrB;EAAA,IAKA,MAAM,GAKJ,KAAK,CALD,MALN;EAAA,IAMA,KAAK,GAIH,KAAK,CAJF,KANL;EAAA,IAOA,SAAS,GAGP,KAAK,CAHE,SAPT;EAAA,IAQA,QAAQ,GAEN,KAAK,CAFC,QARR;EAAA,IASA,qBAAqB,GACnB,KAAK,CADc,qBATrB;EAYF,IAAM,MAAM,GAAG,KAAK,EAApB;EAEA,IAAM,UAAU,GAAG,aAAa,CAAC,MAAD,EAAS;IACvC,KAAK,EAAE,KADgC;IAEvC,SAAS,EAAA,SAF8B;IAGvC,QAAQ,EAAA,QAH+B;IAIvC,QAAQ,EAAA,QAJ+B;IAKvC,OAAO,EAAE,IAAI,CAAC,eAAL,KAAyB,eAAe,CAAC;EALX,CAAT,CAAhC;EAQA,IAAM,aAAa,GAAG,UAAU,CAAC,kBAAX,GACjB,UAAU,CAAC,kBAAX,CAA8B,OADb,GAElB,SAFJ;EAIA,IAAM,iBAAiB,GAAG,UAAU,CAAC,kBAAX,GACrB,UAAU,CAAC,kBAAX,CAA8B,WADT,GAEtB,SAFJ;EAIA,OACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAE,UAAU,CAAC,IAA3B;IAAiC,IAAI,EAAE;EAAvC,CAAA,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;IAAK,SAAS,EAAE,UAAU,CAAC,WAA3B;IAAwC,EAAE,EAAE,yBAAyB;EAArE,CAAA,EACE,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ,QAAA,CAAA;IAAC,IAAI,EAAE,WAAW,CAAC,MAAnB;IAA2B,MAAM,EAAE,aAAnC;IAAkD,SAAS,EAAE;MAAE,MAAM,EAAE;IAAV;EAA7D,CAAA,EAAgG,IAAhG,CAAR,CADF,CADF,EAIE,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW;IACT,EAAE,EAAE,MADK;IAET,OAAO,EAAE,YAFA;IAGT,QAAQ,EAAE,QAHD;IAIT,SAAS,EAAE,qBAAqB,KAAA,IAArB,IAAA,qBAAqB,KAAA,KAAA,CAArB,GAAA,qBAAA,GAAyB;MAAE,QAAQ,EAAE;IAAZ,CAJ3B;IAKT,MAAM,EAAE;MAAE,IAAI,EAAE;QAAE,QAAQ,EAAE;MAAZ;IAAR,CALC;IAMT,SAAS,EAAE,UAAU,CAAC,YANb;IAOT,SAAS,EAAE,qBAPF;IAOuB,mBACZ,MAAM,GAAA,uBAAN,GAA8B,MARzC;IAQiD,wBACpC;EATb,CAAX,CAJF,CADF;AAkBD,CAlDM;AAoDP,OAAO,IAAM,gBAAgB,GAAG,MAAM,CAIpC,oBAJoC,EAId,SAJc,EAIH,SAJG,EAIQ;EAAE,KAAK,EAAE;AAAT,CAJR,CAA/B","sourcesContent":["import * as React from 'react';\n\nimport { getId, classNamesFunction, styled } from '../../../../Utilities';\nimport { Persona, PersonaSize } from '../../../../Persona';\nimport { IconButton } from '../../../../Button';\nimport { ValidationState } from '../../BasePicker.types';\nimport { getStyles } from './PeoplePickerItem.styles';\nimport type { IStyleFunctionOrObject } from '../../../../Utilities';\nimport type {\n  IPersonaStyleProps,\n  IPersonaStyles,\n  IPersonaCoinStyleProps,\n  IPersonaCoinStyles,\n} from '../../../../Persona';\nimport type {\n  IPeoplePickerItemSelectedProps,\n  IPeoplePickerItemSelectedStyleProps,\n  IPeoplePickerItemSelectedStyles,\n} from './PeoplePickerItem.types';\n\nconst getClassNames = classNamesFunction<IPeoplePickerItemSelectedStyleProps, IPeoplePickerItemSelectedStyles>();\n\nexport const PeoplePickerItemBase = (props: IPeoplePickerItemSelectedProps) => {\n  const {\n    item,\n    onRemoveItem,\n    index,\n    selected,\n    removeButtonAriaLabel,\n    styles,\n    theme,\n    className,\n    disabled,\n    removeButtonIconProps,\n  } = props;\n\n  const itemId = getId();\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className,\n    selected,\n    disabled,\n    invalid: item.ValidationState === ValidationState.warning,\n  });\n\n  const personaStyles = classNames.subComponentStyles\n    ? (classNames.subComponentStyles.persona as IStyleFunctionOrObject<IPersonaStyleProps, IPersonaStyles>)\n    : undefined;\n\n  const personaCoinStyles = classNames.subComponentStyles\n    ? (classNames.subComponentStyles.personaCoin as IStyleFunctionOrObject<IPersonaCoinStyleProps, IPersonaCoinStyles>)\n    : undefined;\n\n  return (\n    <div className={classNames.root} role={'listitem'}>\n      <div className={classNames.itemContent} id={'selectedItemPersona-' + itemId}>\n        <Persona size={PersonaSize.size24} styles={personaStyles} coinProps={{ styles: personaCoinStyles }} {...item} />\n      </div>\n      <IconButton\n        id={itemId}\n        onClick={onRemoveItem}\n        disabled={disabled}\n        iconProps={removeButtonIconProps ?? { iconName: 'Cancel' }}\n        styles={{ icon: { fontSize: '12px' } }}\n        className={classNames.removeButton}\n        ariaLabel={removeButtonAriaLabel}\n        aria-labelledby={`${itemId} selectedItemPersona-${itemId}`}\n        data-selection-index={index}\n      />\n    </div>\n  );\n};\n\nexport const PeoplePickerItem = styled<\n  IPeoplePickerItemSelectedProps,\n  IPeoplePickerItemSelectedStyleProps,\n  IPeoplePickerItemSelectedStyles\n>(PeoplePickerItemBase, getStyles, undefined, { scope: 'PeoplePickerItem' });\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}