{"ast":null,"code":"import { __assign, __spreadArray } from \"tslib\";\nimport { AnimationVariables, getGlobalClassNames, HighContrastSelector, normalize, FontWeights, getHighContrastNoAdjustStyle } from '@fluentui/style-utilities';\nimport { IsFocusVisibleClassName } from '@fluentui/utilities';\nvar globalClassNames = {\n  count: 'ms-Pivot-count',\n  icon: 'ms-Pivot-icon',\n  linkIsSelected: 'is-selected',\n  link: 'ms-Pivot-link',\n  linkContent: 'ms-Pivot-linkContent',\n  root: 'ms-Pivot',\n  rootIsLarge: 'ms-Pivot--large',\n  rootIsTabs: 'ms-Pivot--tabs',\n  text: 'ms-Pivot-text',\n  linkInMenu: 'ms-Pivot-linkInMenu',\n  overflowMenuButton: 'ms-Pivot-overflowMenuButton'\n};\n\nvar getLinkStyles = function (props, classNames, isLinkInOverflowMenu) {\n  var _a, _b, _c;\n\n  if (isLinkInOverflowMenu === void 0) {\n    isLinkInOverflowMenu = false;\n  }\n\n  var linkSize = props.linkSize,\n      linkFormat = props.linkFormat;\n  var _d = props.theme,\n      semanticColors = _d.semanticColors,\n      fonts = _d.fonts;\n  var rootIsLarge = linkSize === 'large';\n  var rootIsTabs = linkFormat === 'tabs';\n  return [fonts.medium, {\n    color: semanticColors.actionLink,\n    padding: '0 8px',\n    position: 'relative',\n    backgroundColor: 'transparent',\n    border: 0,\n    borderRadius: 0,\n    selectors: {\n      ':hover': {\n        backgroundColor: semanticColors.buttonBackgroundHovered,\n        color: semanticColors.buttonTextHovered,\n        cursor: 'pointer'\n      },\n      ':active': {\n        backgroundColor: semanticColors.buttonBackgroundPressed,\n        color: semanticColors.buttonTextHovered\n      },\n      ':focus': {\n        outline: 'none'\n      }\n    }\n  }, !isLinkInOverflowMenu && [{\n    display: 'inline-block',\n    lineHeight: 44,\n    height: 44,\n    marginRight: 8,\n    textAlign: 'center',\n    selectors: (_a = {}, _a[\".\" + IsFocusVisibleClassName + \" &:focus\"] = {\n      outline: \"1px solid \" + semanticColors.focusBorder\n    }, _a[\".\" + IsFocusVisibleClassName + \" &:focus:after\"] = {\n      content: 'attr(data-content)',\n      position: 'relative',\n      border: 0\n    }, _a[':before'] = {\n      backgroundColor: 'transparent',\n      bottom: 0,\n      content: '\"\"',\n      height: 2,\n      left: 8,\n      position: 'absolute',\n      right: 8,\n      transition: \"left \" + AnimationVariables.durationValue2 + \" \" + AnimationVariables.easeFunction2 + \",\\n                        right \" + AnimationVariables.durationValue2 + \" \" + AnimationVariables.easeFunction2\n    }, _a[':after'] = {\n      color: 'transparent',\n      content: 'attr(data-content)',\n      display: 'block',\n      fontWeight: FontWeights.bold,\n      height: 1,\n      overflow: 'hidden',\n      visibility: 'hidden'\n    }, _a)\n  }, rootIsLarge && {\n    fontSize: fonts.large.fontSize\n  }, rootIsTabs && [{\n    marginRight: 0,\n    height: 44,\n    lineHeight: 44,\n    backgroundColor: semanticColors.buttonBackground,\n    padding: '0 10px',\n    verticalAlign: 'top',\n    selectors: (_b = {\n      ':focus': {\n        outlineOffset: '-1px'\n      }\n    }, _b[\".\" + IsFocusVisibleClassName + \" &:focus::before\"] = {\n      height: 'auto',\n      background: 'transparent',\n      transition: 'none'\n    }, _b['&:hover, &:focus'] = {\n      color: semanticColors.buttonTextCheckedHovered\n    }, _b['&:active, &:hover'] = {\n      color: semanticColors.primaryButtonText,\n      backgroundColor: semanticColors.primaryButtonBackground\n    }, _b[\"&.\" + classNames.linkIsSelected] = {\n      backgroundColor: semanticColors.primaryButtonBackground,\n      color: semanticColors.primaryButtonText,\n      fontWeight: FontWeights.regular,\n      selectors: (_c = {\n        ':before': {\n          backgroundColor: 'transparent',\n          transition: 'none',\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          content: '\"\"',\n          height: 0\n        },\n        ':hover': {\n          backgroundColor: semanticColors.primaryButtonBackgroundHovered,\n          color: semanticColors.primaryButtonText\n        },\n        '&:active': {\n          backgroundColor: semanticColors.primaryButtonBackgroundPressed,\n          color: semanticColors.primaryButtonText\n        }\n      }, _c[HighContrastSelector] = __assign({\n        fontWeight: FontWeights.semibold,\n        color: 'HighlightText',\n        background: 'Highlight'\n      }, getHighContrastNoAdjustStyle()), _c)\n    }, _b)\n  }]]];\n};\n\nexport var getStyles = function (props) {\n  var _a, _b, _c, _d;\n\n  var className = props.className,\n      linkSize = props.linkSize,\n      linkFormat = props.linkFormat,\n      theme = props.theme;\n  var semanticColors = theme.semanticColors,\n      fonts = theme.fonts;\n  var classNames = getGlobalClassNames(globalClassNames, theme);\n  var rootIsLarge = linkSize === 'large';\n  var rootIsTabs = linkFormat === 'tabs';\n  return {\n    root: [classNames.root, fonts.medium, normalize, {\n      position: 'relative',\n      color: semanticColors.link,\n      whiteSpace: 'nowrap'\n    }, rootIsLarge && classNames.rootIsLarge, rootIsTabs && classNames.rootIsTabs, className],\n    itemContainer: {\n      selectors: {\n        '&[hidden]': {\n          display: 'none'\n        }\n      }\n    },\n    link: __spreadArray(__spreadArray([classNames.link], getLinkStyles(props, classNames)), [(_a = {}, _a[\"&[data-is-overflowing='true']\"] = {\n      display: 'none'\n    }, _a)]),\n    overflowMenuButton: [classNames.overflowMenuButton, (_b = {\n      visibility: 'hidden',\n      position: 'absolute',\n      right: 0\n    }, _b[\".\" + classNames.link + \"[data-is-overflowing='true'] ~ &\"] = {\n      visibility: 'visible',\n      position: 'relative'\n    }, _b)],\n    linkInMenu: __spreadArray(__spreadArray([classNames.linkInMenu], getLinkStyles(props, classNames, true)), [{\n      textAlign: 'left',\n      width: '100%',\n      height: 36,\n      lineHeight: 36\n    }]),\n    linkIsSelected: [classNames.link, classNames.linkIsSelected, {\n      fontWeight: FontWeights.semibold,\n      selectors: (_c = {\n        ':before': {\n          backgroundColor: semanticColors.inputBackgroundChecked,\n          selectors: (_d = {}, _d[HighContrastSelector] = {\n            backgroundColor: 'Highlight'\n          }, _d)\n        },\n        ':hover::before': {\n          left: 0,\n          right: 0\n        }\n      }, _c[HighContrastSelector] = {\n        color: 'Highlight'\n      }, _c)\n    }],\n    linkContent: [classNames.linkContent, {\n      flex: '0 1 100%',\n      selectors: {\n        '& > * ': {\n          marginLeft: 4\n        },\n        '& > *:first-child': {\n          marginLeft: 0\n        }\n      }\n    }],\n    text: [classNames.text, {\n      display: 'inline-block',\n      verticalAlign: 'top'\n    }],\n    count: [classNames.count, {\n      display: 'inline-block',\n      verticalAlign: 'top'\n    }],\n    icon: classNames.icon\n  };\n};","map":{"version":3,"sources":["components/Pivot/Pivot.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AnimationVariables,\n  getGlobalClassNames,\n  HighContrastSelector,\n  normalize,\n  FontWeights,\n  getHighContrastNoAdjustStyle,\n} from '@fluentui/style-utilities';\nimport { IsFocusVisibleClassName } from '@fluentui/utilities';\nimport type { IPivotStyleProps, IPivotStyles } from './Pivot.types';\nimport type { IStyle } from '@fluentui/style-utilities';\n\nconst globalClassNames = {\n  count: 'ms-Pivot-count',\n  icon: 'ms-Pivot-icon',\n  linkIsSelected: 'is-selected',\n  link: 'ms-Pivot-link',\n  linkContent: 'ms-Pivot-linkContent',\n  root: 'ms-Pivot',\n  rootIsLarge: 'ms-Pivot--large',\n  rootIsTabs: 'ms-Pivot--tabs',\n  text: 'ms-Pivot-text',\n  linkInMenu: 'ms-Pivot-linkInMenu',\n  overflowMenuButton: 'ms-Pivot-overflowMenuButton',\n};\n\nconst getLinkStyles = (\n  props: IPivotStyleProps,\n  classNames: { [key: string]: string },\n  isLinkInOverflowMenu: boolean = false,\n): IStyle[] => {\n  const { linkSize, linkFormat } = props;\n  const { semanticColors, fonts } = props.theme;\n  const rootIsLarge = linkSize === 'large';\n  const rootIsTabs = linkFormat === 'tabs';\n\n  return [\n    fonts.medium,\n    {\n      color: semanticColors.actionLink,\n      padding: '0 8px',\n      position: 'relative',\n      backgroundColor: 'transparent',\n      border: 0,\n      borderRadius: 0,\n      selectors: {\n        ':hover': {\n          backgroundColor: semanticColors.buttonBackgroundHovered,\n          color: semanticColors.buttonTextHovered,\n          cursor: 'pointer',\n        },\n        ':active': {\n          backgroundColor: semanticColors.buttonBackgroundPressed,\n          color: semanticColors.buttonTextHovered,\n        },\n        ':focus': {\n          outline: 'none',\n        },\n      },\n    },\n    !isLinkInOverflowMenu && [\n      {\n        display: 'inline-block',\n        lineHeight: 44,\n        height: 44,\n        marginRight: 8,\n        textAlign: 'center',\n        selectors: {\n          [`.${IsFocusVisibleClassName} &:focus`]: {\n            outline: `1px solid ${semanticColors.focusBorder}`,\n          },\n\n          [`.${IsFocusVisibleClassName} &:focus:after`]: {\n            content: 'attr(data-content)',\n            position: 'relative',\n            border: 0,\n          },\n          ':before': {\n            backgroundColor: 'transparent',\n            bottom: 0,\n            content: '\"\"',\n            height: 2,\n            left: 8,\n            position: 'absolute',\n            right: 8,\n            transition: `left ${AnimationVariables.durationValue2} ${AnimationVariables.easeFunction2},\n                        right ${AnimationVariables.durationValue2} ${AnimationVariables.easeFunction2}`,\n          },\n          ':after': {\n            color: 'transparent',\n            content: 'attr(data-content)',\n            display: 'block',\n            fontWeight: FontWeights.bold,\n            height: 1,\n            overflow: 'hidden',\n            visibility: 'hidden',\n          },\n        },\n      },\n      rootIsLarge && {\n        fontSize: fonts.large.fontSize,\n      },\n      rootIsTabs && [\n        {\n          marginRight: 0,\n          height: 44,\n          lineHeight: 44,\n          backgroundColor: semanticColors.buttonBackground,\n          padding: '0 10px',\n          verticalAlign: 'top',\n\n          selectors: {\n            ':focus': {\n              outlineOffset: '-1px',\n            },\n            [`.${IsFocusVisibleClassName} &:focus::before`]: {\n              height: 'auto',\n              background: 'transparent',\n              transition: 'none',\n            },\n            '&:hover, &:focus': {\n              color: semanticColors.buttonTextCheckedHovered,\n            },\n            '&:active, &:hover': {\n              color: semanticColors.primaryButtonText,\n              backgroundColor: semanticColors.primaryButtonBackground,\n            },\n            [`&.${classNames.linkIsSelected}`]: {\n              backgroundColor: semanticColors.primaryButtonBackground,\n              color: semanticColors.primaryButtonText,\n              fontWeight: FontWeights.regular,\n              selectors: {\n                ':before': {\n                  backgroundColor: 'transparent',\n                  transition: 'none',\n                  position: 'absolute',\n                  top: 0,\n                  left: 0,\n                  right: 0,\n                  bottom: 0,\n                  content: '\"\"',\n                  height: 0,\n                },\n                ':hover': {\n                  backgroundColor: semanticColors.primaryButtonBackgroundHovered,\n                  color: semanticColors.primaryButtonText,\n                },\n                '&:active': {\n                  backgroundColor: semanticColors.primaryButtonBackgroundPressed,\n                  color: semanticColors.primaryButtonText,\n                },\n                [HighContrastSelector]: {\n                  fontWeight: FontWeights.semibold,\n                  color: 'HighlightText',\n                  background: 'Highlight',\n                  ...getHighContrastNoAdjustStyle(),\n                },\n              },\n            },\n          },\n        },\n      ],\n    ],\n  ];\n};\n\nexport const getStyles = (props: IPivotStyleProps): IPivotStyles => {\n  const { className, linkSize, linkFormat, theme } = props;\n  const { semanticColors, fonts } = theme;\n\n  const classNames = getGlobalClassNames(globalClassNames, theme);\n\n  const rootIsLarge = linkSize === 'large';\n  const rootIsTabs = linkFormat === 'tabs';\n\n  return {\n    root: [\n      classNames.root,\n      fonts.medium,\n      normalize,\n      {\n        position: 'relative',\n        color: semanticColors.link,\n        whiteSpace: 'nowrap',\n      },\n      rootIsLarge && classNames.rootIsLarge,\n      rootIsTabs && classNames.rootIsTabs,\n      className,\n    ],\n    itemContainer: {\n      selectors: {\n        '&[hidden]': {\n          display: 'none',\n        },\n      },\n    },\n    link: [\n      classNames.link,\n      ...getLinkStyles(props, classNames),\n      {\n        [`&[data-is-overflowing='true']`]: {\n          display: 'none',\n        },\n      },\n    ],\n    overflowMenuButton: [\n      classNames.overflowMenuButton,\n      {\n        visibility: 'hidden',\n        position: 'absolute',\n        right: 0,\n        [`.${classNames.link}[data-is-overflowing='true'] ~ &`]: {\n          visibility: 'visible',\n          position: 'relative',\n        },\n      },\n    ],\n    linkInMenu: [\n      classNames.linkInMenu,\n      ...getLinkStyles(props, classNames, true),\n      {\n        textAlign: 'left',\n        width: '100%',\n        height: 36,\n        lineHeight: 36,\n      },\n    ],\n    linkIsSelected: [\n      classNames.link,\n      classNames.linkIsSelected,\n      {\n        fontWeight: FontWeights.semibold,\n        selectors: {\n          ':before': {\n            backgroundColor: semanticColors.inputBackgroundChecked,\n            selectors: {\n              [HighContrastSelector]: {\n                backgroundColor: 'Highlight',\n              },\n            },\n          },\n          ':hover::before': {\n            left: 0,\n            right: 0,\n          },\n          [HighContrastSelector]: {\n            color: 'Highlight',\n          },\n        },\n      },\n    ],\n    linkContent: [\n      classNames.linkContent,\n      {\n        flex: '0 1 100%',\n        selectors: {\n          '& > * ': {\n            marginLeft: 4,\n          },\n          '& > *:first-child': {\n            marginLeft: 0,\n          },\n        },\n      },\n    ],\n    text: [\n      classNames.text,\n      {\n        display: 'inline-block',\n        verticalAlign: 'top',\n      },\n    ],\n    count: [\n      classNames.count,\n      {\n        display: 'inline-block',\n        verticalAlign: 'top',\n      },\n    ],\n    icon: classNames.icon,\n  };\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}