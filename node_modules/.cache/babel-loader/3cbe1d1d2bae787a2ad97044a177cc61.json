{"ast":null,"code":"import { HighContrastSelector, AnimationVariables, normalize, getPlaceholderStyles, getGlobalClassNames, getInputFocusStyle } from '../../Styling';\nimport { getRTL } from '../../Utilities';\nvar GlobalClassNames = {\n  root: 'ms-SearchBox',\n  iconContainer: 'ms-SearchBox-iconContainer',\n  icon: 'ms-SearchBox-icon',\n  clearButton: 'ms-SearchBox-clearButton',\n  field: 'ms-SearchBox-field'\n};\nexport function getStyles(props) {\n  var _a, _b, _c, _d, _e;\n\n  var theme = props.theme,\n      underlined = props.underlined,\n      disabled = props.disabled,\n      hasFocus = props.hasFocus,\n      className = props.className,\n      hasInput = props.hasInput,\n      disableAnimation = props.disableAnimation,\n      showIcon = props.showIcon;\n  var palette = theme.palette,\n      fonts = theme.fonts,\n      semanticColors = theme.semanticColors,\n      effects = theme.effects;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme); // placeholder style constants\n\n  var placeholderStyles = {\n    color: semanticColors.inputPlaceholderText,\n    opacity: 1\n  };\n  var inputIconAlt = palette.neutralSecondary;\n  var inputIconAltHovered = palette.neutralPrimary;\n  var inputBorderDisabled = palette.neutralLighter;\n  var inputBackgroundHovered = palette.neutralLighter;\n  var inputBackgroundDisabled = palette.neutralLighter;\n  return {\n    root: [classNames.root, fonts.medium, normalize, {\n      color: semanticColors.inputText,\n      backgroundColor: semanticColors.inputBackground,\n      display: 'flex',\n      flexDirection: 'row',\n      flexWrap: 'nowrap',\n      alignItems: 'stretch',\n      // The 1px top and bottom padding ensure the input field does not overlap the border\n      padding: '1px 0 1px 4px',\n      borderRadius: effects.roundedCorner2,\n      border: \"1px solid \" + semanticColors.inputBorder,\n      height: 32,\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        borderColor: 'WindowText'\n      }, _a[':hover'] = {\n        borderColor: semanticColors.inputBorderHovered,\n        selectors: (_b = {}, _b[HighContrastSelector] = {\n          borderColor: 'Highlight'\n        }, _b)\n      }, _a[\":hover .\" + classNames.iconContainer] = {\n        color: semanticColors.inputIconHovered\n      }, _a)\n    }, !hasFocus && hasInput && {\n      selectors: (_c = {}, _c[\":hover .\" + classNames.iconContainer] = {\n        width: 4\n      }, _c[\":hover .\" + classNames.icon] = {\n        opacity: 0,\n        pointerEvents: 'none'\n      }, _c)\n    }, hasFocus && ['is-active', {\n      position: 'relative'\n    }, getInputFocusStyle(semanticColors.inputFocusBorderAlt, underlined ? 0 : effects.roundedCorner2, underlined ? 'borderBottom' : 'border')], showIcon && [{\n      selectors: (_d = {}, _d[\":hover .\" + classNames.iconContainer] = {\n        width: 32\n      }, _d[\":hover .\" + classNames.icon] = {\n        opacity: 1\n      }, _d)\n    }], disabled && ['is-disabled', {\n      borderColor: inputBorderDisabled,\n      backgroundColor: inputBackgroundDisabled,\n      pointerEvents: 'none',\n      cursor: 'default',\n      selectors: (_e = {}, _e[HighContrastSelector] = {\n        borderColor: 'GrayText'\n      }, _e)\n    }], underlined && ['is-underlined', {\n      borderWidth: '0 0 1px 0',\n      borderRadius: 0,\n      // Underlined SearchBox has a larger padding left to vertically align with the waffle in product\n      padding: '1px 0 1px 8px'\n    }], underlined && disabled && {\n      backgroundColor: 'transparent'\n    }, hasInput && 'can-clear', className],\n    iconContainer: [classNames.iconContainer, {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      flexShrink: 0,\n      fontSize: 16,\n      width: 32,\n      textAlign: 'center',\n      color: semanticColors.inputIcon,\n      cursor: 'text'\n    }, hasFocus && {\n      width: 4\n    }, disabled && {\n      color: semanticColors.inputIconDisabled\n    }, !disableAnimation && {\n      transition: \"width \" + AnimationVariables.durationValue1\n    }, showIcon && hasFocus && {\n      width: 32\n    }],\n    icon: [classNames.icon, {\n      opacity: 1\n    }, hasFocus && {\n      opacity: 0,\n      pointerEvents: 'none'\n    }, !disableAnimation && {\n      transition: \"opacity \" + AnimationVariables.durationValue1 + \" 0s\"\n    }, showIcon && hasFocus && {\n      opacity: 1\n    }],\n    clearButton: [classNames.clearButton, {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'stretch',\n      cursor: 'pointer',\n      flexBasis: '32px',\n      flexShrink: 0,\n      padding: 0,\n      margin: '-1px 0px',\n      selectors: {\n        '&:hover .ms-Button': {\n          backgroundColor: inputBackgroundHovered\n        },\n        '&:hover .ms-Button-icon': {\n          color: inputIconAltHovered\n        },\n        '.ms-Button': {\n          borderRadius: getRTL(theme) ? '1px 0 0 1px' : '0 1px 1px 0'\n        },\n        '.ms-Button-icon': {\n          color: inputIconAlt\n        }\n      }\n    }],\n    field: [classNames.field, normalize, getPlaceholderStyles(placeholderStyles), {\n      backgroundColor: 'transparent',\n      border: 'none',\n      outline: 'none',\n      fontWeight: 'inherit',\n      fontFamily: 'inherit',\n      fontSize: 'inherit',\n      color: semanticColors.inputText,\n      flex: '1 1 0px',\n      // The default implicit value of 'auto' prevents the input from shrinking. Setting min-width to\n      // 0px allows the input element to shrink to fit the container.\n      minWidth: '0px',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      // This padding forces the text placement to round up.\n      paddingBottom: 0.5,\n      // This removes the IE specific clear button in the input since we implemented our own\n      selectors: {\n        '::-ms-clear': {\n          display: 'none'\n        }\n      }\n    }, disabled && {\n      color: semanticColors.disabledText\n    }]\n  };\n}","map":{"version":3,"sources":["components/SearchBox/SearchBox.styles.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  HighContrastSelector,\n  AnimationVariables,\n  normalize,\n  getPlaceholderStyles,\n  getGlobalClassNames,\n  getInputFocusStyle,\n} from '../../Styling';\nimport { getRTL } from '../../Utilities';\nimport type { IStyle } from '../../Styling';\nimport type { ISearchBoxStyleProps, ISearchBoxStyles } from './SearchBox.types';\n\nconst GlobalClassNames = {\n  root: 'ms-SearchBox',\n  iconContainer: 'ms-SearchBox-iconContainer',\n  icon: 'ms-SearchBox-icon',\n  clearButton: 'ms-SearchBox-clearButton',\n  field: 'ms-SearchBox-field',\n};\n\nexport function getStyles(props: ISearchBoxStyleProps): ISearchBoxStyles {\n  const { theme, underlined, disabled, hasFocus, className, hasInput, disableAnimation, showIcon } = props;\n  const { palette, fonts, semanticColors, effects } = theme;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  // placeholder style constants\n  const placeholderStyles: IStyle = {\n    color: semanticColors.inputPlaceholderText,\n    opacity: 1,\n  };\n\n  const inputIconAlt = palette.neutralSecondary;\n  const inputIconAltHovered = palette.neutralPrimary;\n  const inputBorderDisabled = palette.neutralLighter;\n  const inputBackgroundHovered = palette.neutralLighter;\n  const inputBackgroundDisabled = palette.neutralLighter;\n\n  return {\n    root: [\n      classNames.root,\n      fonts.medium,\n      normalize,\n      {\n        color: semanticColors.inputText,\n        backgroundColor: semanticColors.inputBackground,\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'nowrap',\n        alignItems: 'stretch',\n        // The 1px top and bottom padding ensure the input field does not overlap the border\n        padding: '1px 0 1px 4px',\n        borderRadius: effects.roundedCorner2,\n        border: `1px solid ${semanticColors.inputBorder}`,\n        height: 32,\n        selectors: {\n          [HighContrastSelector]: {\n            borderColor: 'WindowText',\n          },\n          ':hover': {\n            borderColor: semanticColors.inputBorderHovered,\n            selectors: {\n              [HighContrastSelector]: {\n                borderColor: 'Highlight',\n              },\n            },\n          },\n          [`:hover .${classNames.iconContainer}`]: {\n            color: semanticColors.inputIconHovered,\n          },\n        },\n      },\n      !hasFocus &&\n        hasInput && {\n          selectors: {\n            [`:hover .${classNames.iconContainer}`]: {\n              width: 4,\n            },\n            [`:hover .${classNames.icon}`]: {\n              opacity: 0,\n              pointerEvents: 'none',\n            },\n          },\n        },\n      hasFocus && [\n        'is-active',\n        {\n          position: 'relative',\n        },\n        getInputFocusStyle(\n          semanticColors.inputFocusBorderAlt,\n          underlined ? 0 : effects.roundedCorner2,\n          underlined ? 'borderBottom' : 'border',\n        ),\n      ],\n      showIcon && [\n        {\n          selectors: {\n            [`:hover .${classNames.iconContainer}`]: {\n              width: 32,\n            },\n            [`:hover .${classNames.icon}`]: {\n              opacity: 1,\n            },\n          },\n        },\n      ],\n      disabled && [\n        'is-disabled',\n        {\n          borderColor: inputBorderDisabled,\n          backgroundColor: inputBackgroundDisabled,\n          pointerEvents: 'none',\n          cursor: 'default',\n          selectors: {\n            [HighContrastSelector]: {\n              borderColor: 'GrayText',\n            },\n          },\n        },\n      ],\n      underlined && [\n        'is-underlined',\n        {\n          borderWidth: '0 0 1px 0',\n          borderRadius: 0,\n          // Underlined SearchBox has a larger padding left to vertically align with the waffle in product\n          padding: '1px 0 1px 8px',\n        },\n      ],\n      underlined &&\n        disabled && {\n          backgroundColor: 'transparent',\n        },\n      hasInput && 'can-clear',\n      className,\n    ],\n    iconContainer: [\n      classNames.iconContainer,\n      {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        flexShrink: 0,\n        fontSize: 16,\n        width: 32,\n        textAlign: 'center',\n        color: semanticColors.inputIcon,\n        cursor: 'text',\n      },\n      hasFocus && {\n        width: 4,\n      },\n      disabled && {\n        color: semanticColors.inputIconDisabled,\n      },\n      !disableAnimation && {\n        transition: `width ${AnimationVariables.durationValue1}`,\n      },\n      showIcon &&\n        hasFocus && {\n          width: 32,\n        },\n    ],\n    icon: [\n      classNames.icon,\n      {\n        opacity: 1,\n      },\n      hasFocus && {\n        opacity: 0,\n        pointerEvents: 'none',\n      },\n      !disableAnimation && {\n        transition: `opacity ${AnimationVariables.durationValue1} 0s`,\n      },\n      showIcon &&\n        hasFocus && {\n          opacity: 1,\n        },\n    ],\n    clearButton: [\n      classNames.clearButton,\n      {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'stretch',\n        cursor: 'pointer',\n        flexBasis: '32px',\n        flexShrink: 0,\n        padding: 0,\n        margin: '-1px 0px',\n        selectors: {\n          '&:hover .ms-Button': {\n            backgroundColor: inputBackgroundHovered,\n          },\n          '&:hover .ms-Button-icon': {\n            color: inputIconAltHovered,\n          },\n          '.ms-Button': {\n            borderRadius: getRTL(theme) ? '1px 0 0 1px' : '0 1px 1px 0',\n          },\n          '.ms-Button-icon': {\n            color: inputIconAlt,\n          },\n        },\n      },\n    ],\n    field: [\n      classNames.field,\n      normalize,\n      getPlaceholderStyles(placeholderStyles),\n      {\n        backgroundColor: 'transparent',\n        border: 'none',\n        outline: 'none',\n        fontWeight: 'inherit',\n        fontFamily: 'inherit',\n        fontSize: 'inherit',\n        color: semanticColors.inputText,\n        flex: '1 1 0px',\n        // The default implicit value of 'auto' prevents the input from shrinking. Setting min-width to\n        // 0px allows the input element to shrink to fit the container.\n        minWidth: '0px',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        // This padding forces the text placement to round up.\n        paddingBottom: 0.5,\n        // This removes the IE specific clear button in the input since we implemented our own\n        selectors: {\n          '::-ms-clear': {\n            display: 'none',\n          },\n        },\n      },\n      disabled && {\n        color: semanticColors.disabledText,\n      },\n    ],\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}