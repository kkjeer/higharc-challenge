{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { HighContrastSelector, getHighContrastNoAdjustStyle } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\n\nvar splitButtonDividerBaseStyles = function () {\n  return {\n    position: 'absolute',\n    width: 1,\n    right: 31,\n    top: 8,\n    bottom: 8\n  };\n};\n\nexport function standardStyles(theme) {\n  var _a, _b, _c, _d, _e;\n\n  var s = theme.semanticColors,\n      p = theme.palette;\n  var buttonBackground = s.buttonBackground;\n  var buttonBackgroundPressed = s.buttonBackgroundPressed;\n  var buttonBackgroundHovered = s.buttonBackgroundHovered;\n  var buttonBackgroundDisabled = s.buttonBackgroundDisabled;\n  var buttonText = s.buttonText;\n  var buttonTextHovered = s.buttonTextHovered;\n  var buttonTextDisabled = s.buttonTextDisabled;\n  var buttonTextChecked = s.buttonTextChecked;\n  var buttonTextCheckedHovered = s.buttonTextCheckedHovered;\n  return {\n    root: {\n      backgroundColor: buttonBackground,\n      color: buttonText\n    },\n    rootHovered: {\n      backgroundColor: buttonBackgroundHovered,\n      color: buttonTextHovered,\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        borderColor: 'Highlight',\n        color: 'Highlight'\n      }, _a)\n    },\n    rootPressed: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked\n    },\n    rootExpanded: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked\n    },\n    rootChecked: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked\n    },\n    rootCheckedHovered: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextCheckedHovered\n    },\n    rootDisabled: {\n      color: buttonTextDisabled,\n      backgroundColor: buttonBackgroundDisabled,\n      selectors: (_b = {}, _b[HighContrastSelector] = {\n        color: 'GrayText',\n        borderColor: 'GrayText',\n        backgroundColor: 'Window'\n      }, _b)\n    },\n    // Split button styles\n    splitButtonContainer: {\n      selectors: (_c = {}, _c[HighContrastSelector] = {\n        border: 'none'\n      }, _c)\n    },\n    splitButtonMenuButton: {\n      color: p.white,\n      backgroundColor: 'transparent',\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralLight,\n          selectors: (_d = {}, _d[HighContrastSelector] = {\n            color: 'Highlight'\n          }, _d)\n        }\n      }\n    },\n    splitButtonMenuButtonDisabled: {\n      backgroundColor: s.buttonBackgroundDisabled,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.buttonBackgroundDisabled\n        }\n      }\n    },\n    splitButtonDivider: __assign(__assign({}, splitButtonDividerBaseStyles()), {\n      backgroundColor: p.neutralTertiaryAlt,\n      selectors: (_e = {}, _e[HighContrastSelector] = {\n        backgroundColor: 'WindowText'\n      }, _e)\n    }),\n    splitButtonDividerDisabled: {\n      backgroundColor: theme.palette.neutralTertiaryAlt\n    },\n    splitButtonMenuButtonChecked: {\n      backgroundColor: p.neutralQuaternaryAlt,\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralQuaternaryAlt\n        }\n      }\n    },\n    splitButtonMenuButtonExpanded: {\n      backgroundColor: p.neutralQuaternaryAlt,\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralQuaternaryAlt\n        }\n      }\n    },\n    splitButtonMenuIcon: {\n      color: s.buttonText\n    },\n    splitButtonMenuIconDisabled: {\n      color: s.buttonTextDisabled\n    }\n  };\n}\nexport function primaryStyles(theme) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n\n  var p = theme.palette,\n      s = theme.semanticColors;\n  return {\n    root: {\n      backgroundColor: s.primaryButtonBackground,\n      border: \"1px solid \" + s.primaryButtonBackground,\n      color: s.primaryButtonText,\n      selectors: (_a = {}, _a[HighContrastSelector] = __assign({\n        color: 'Window',\n        backgroundColor: 'WindowText',\n        borderColor: 'WindowText'\n      }, getHighContrastNoAdjustStyle()), _a[\".\" + IsFocusVisibleClassName + \" &:focus\"] = {\n        selectors: {\n          ':after': {\n            border: \"none\",\n            outlineColor: p.white\n          }\n        }\n      }, _a)\n    },\n    rootHovered: {\n      backgroundColor: s.primaryButtonBackgroundHovered,\n      border: \"1px solid \" + s.primaryButtonBackgroundHovered,\n      color: s.primaryButtonTextHovered,\n      selectors: (_b = {}, _b[HighContrastSelector] = {\n        color: 'Window',\n        backgroundColor: 'Highlight',\n        borderColor: 'Highlight'\n      }, _b)\n    },\n    rootPressed: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      border: \"1px solid \" + s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n      selectors: (_c = {}, _c[HighContrastSelector] = __assign({\n        color: 'Window',\n        backgroundColor: 'WindowText',\n        borderColor: 'WindowText'\n      }, getHighContrastNoAdjustStyle()), _c)\n    },\n    rootExpanded: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed\n    },\n    rootChecked: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed\n    },\n    rootCheckedHovered: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed\n    },\n    rootDisabled: {\n      color: s.primaryButtonTextDisabled,\n      backgroundColor: s.primaryButtonBackgroundDisabled,\n      selectors: (_d = {}, _d[HighContrastSelector] = {\n        color: 'GrayText',\n        borderColor: 'GrayText',\n        backgroundColor: 'Window'\n      }, _d)\n    },\n    // Split button styles\n    splitButtonContainer: {\n      selectors: (_e = {}, _e[HighContrastSelector] = {\n        border: 'none'\n      }, _e)\n    },\n    splitButtonDivider: __assign(__assign({}, splitButtonDividerBaseStyles()), {\n      backgroundColor: p.white,\n      selectors: (_f = {}, _f[HighContrastSelector] = {\n        backgroundColor: 'Window'\n      }, _f)\n    }),\n    splitButtonMenuButton: {\n      backgroundColor: s.primaryButtonBackground,\n      color: s.primaryButtonText,\n      selectors: (_g = {}, _g[HighContrastSelector] = {\n        backgroundColor: 'WindowText'\n      }, _g[':hover'] = {\n        backgroundColor: s.primaryButtonBackgroundHovered,\n        selectors: (_h = {}, _h[HighContrastSelector] = {\n          color: 'Highlight'\n        }, _h)\n      }, _g)\n    },\n    splitButtonMenuButtonDisabled: {\n      backgroundColor: s.primaryButtonBackgroundDisabled,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundDisabled\n        }\n      }\n    },\n    splitButtonMenuButtonChecked: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundPressed\n        }\n      }\n    },\n    splitButtonMenuButtonExpanded: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundPressed\n        }\n      }\n    },\n    splitButtonMenuIcon: {\n      color: s.primaryButtonText\n    },\n    splitButtonMenuIconDisabled: {\n      color: p.neutralTertiary,\n      selectors: (_j = {}, _j[HighContrastSelector] = {\n        color: 'GrayText'\n      }, _j)\n    }\n  };\n}","map":{"version":3,"sources":["components/Button/ButtonThemes.ts"],"names":[],"mappings":"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","sourcesContent":["import { HighContrastSelector, getHighContrastNoAdjustStyle } from '../../Styling';\nimport { IsFocusVisibleClassName } from '../../Utilities';\nimport type { IButtonStyles } from './Button.types';\nimport type { ITheme, IRawStyle } from '../../Styling';\n\nconst splitButtonDividerBaseStyles = (): IRawStyle => {\n  return {\n    position: 'absolute',\n    width: 1,\n    right: 31,\n    top: 8,\n    bottom: 8,\n  };\n};\n\nexport function standardStyles(theme: ITheme): IButtonStyles {\n  const { semanticColors: s, palette: p } = theme;\n\n  const buttonBackground = s.buttonBackground;\n  const buttonBackgroundPressed = s.buttonBackgroundPressed;\n  const buttonBackgroundHovered = s.buttonBackgroundHovered;\n  const buttonBackgroundDisabled = s.buttonBackgroundDisabled;\n\n  const buttonText = s.buttonText;\n  const buttonTextHovered = s.buttonTextHovered;\n  const buttonTextDisabled = s.buttonTextDisabled;\n  const buttonTextChecked = s.buttonTextChecked;\n  const buttonTextCheckedHovered = s.buttonTextCheckedHovered;\n\n  return {\n    root: {\n      backgroundColor: buttonBackground,\n      color: buttonText,\n    },\n\n    rootHovered: {\n      backgroundColor: buttonBackgroundHovered,\n      color: buttonTextHovered,\n      selectors: {\n        [HighContrastSelector]: {\n          borderColor: 'Highlight',\n          color: 'Highlight',\n        },\n      },\n    },\n\n    rootPressed: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked,\n    },\n\n    rootExpanded: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked,\n    },\n\n    rootChecked: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextChecked,\n    },\n\n    rootCheckedHovered: {\n      backgroundColor: buttonBackgroundPressed,\n      color: buttonTextCheckedHovered,\n    },\n\n    rootDisabled: {\n      color: buttonTextDisabled,\n      backgroundColor: buttonBackgroundDisabled,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n          borderColor: 'GrayText',\n          backgroundColor: 'Window',\n        },\n      },\n    },\n\n    // Split button styles\n    splitButtonContainer: {\n      selectors: {\n        [HighContrastSelector]: {\n          border: 'none',\n        },\n      },\n    },\n\n    splitButtonMenuButton: {\n      color: p.white,\n      backgroundColor: 'transparent',\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralLight,\n          selectors: {\n            [HighContrastSelector]: {\n              color: 'Highlight',\n            },\n          },\n        },\n      },\n    },\n\n    splitButtonMenuButtonDisabled: {\n      backgroundColor: s.buttonBackgroundDisabled,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.buttonBackgroundDisabled,\n        },\n      },\n    },\n\n    splitButtonDivider: {\n      ...splitButtonDividerBaseStyles(),\n      backgroundColor: p.neutralTertiaryAlt,\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'WindowText',\n        },\n      },\n    },\n\n    splitButtonDividerDisabled: {\n      backgroundColor: theme.palette.neutralTertiaryAlt,\n    },\n\n    splitButtonMenuButtonChecked: {\n      backgroundColor: p.neutralQuaternaryAlt,\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralQuaternaryAlt,\n        },\n      },\n    },\n\n    splitButtonMenuButtonExpanded: {\n      backgroundColor: p.neutralQuaternaryAlt,\n      selectors: {\n        ':hover': {\n          backgroundColor: p.neutralQuaternaryAlt,\n        },\n      },\n    },\n\n    splitButtonMenuIcon: {\n      color: s.buttonText,\n    },\n\n    splitButtonMenuIconDisabled: {\n      color: s.buttonTextDisabled,\n    },\n  };\n}\n\nexport function primaryStyles(theme: ITheme): IButtonStyles {\n  const { palette: p, semanticColors: s } = theme;\n\n  return {\n    root: {\n      backgroundColor: s.primaryButtonBackground,\n      border: `1px solid ${s.primaryButtonBackground}`,\n      color: s.primaryButtonText,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Window',\n          backgroundColor: 'WindowText',\n          borderColor: 'WindowText',\n          ...getHighContrastNoAdjustStyle(),\n        },\n        [`.${IsFocusVisibleClassName} &:focus`]: {\n          selectors: {\n            ':after': {\n              border: `none`,\n              outlineColor: p.white,\n            },\n          },\n        },\n      },\n    },\n\n    rootHovered: {\n      backgroundColor: s.primaryButtonBackgroundHovered,\n      border: `1px solid ${s.primaryButtonBackgroundHovered}`,\n      color: s.primaryButtonTextHovered,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Window',\n          backgroundColor: 'Highlight',\n          borderColor: 'Highlight',\n        },\n      },\n    },\n\n    rootPressed: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      border: `1px solid ${s.primaryButtonBackgroundPressed}`,\n      color: s.primaryButtonTextPressed,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'Window',\n          backgroundColor: 'WindowText',\n          borderColor: 'WindowText',\n          ...getHighContrastNoAdjustStyle(),\n        },\n      },\n    },\n\n    rootExpanded: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n    },\n\n    rootChecked: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n    },\n\n    rootCheckedHovered: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      color: s.primaryButtonTextPressed,\n    },\n\n    rootDisabled: {\n      color: s.primaryButtonTextDisabled,\n      backgroundColor: s.primaryButtonBackgroundDisabled,\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n          borderColor: 'GrayText',\n          backgroundColor: 'Window',\n        },\n      },\n    },\n\n    // Split button styles\n    splitButtonContainer: {\n      selectors: {\n        [HighContrastSelector]: {\n          border: 'none',\n        },\n      },\n    },\n\n    splitButtonDivider: {\n      ...splitButtonDividerBaseStyles(),\n      backgroundColor: p.white,\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'Window',\n        },\n      },\n    },\n\n    splitButtonMenuButton: {\n      backgroundColor: s.primaryButtonBackground,\n      color: s.primaryButtonText,\n      selectors: {\n        [HighContrastSelector]: {\n          backgroundColor: 'WindowText',\n        },\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundHovered,\n          selectors: {\n            [HighContrastSelector]: {\n              color: 'Highlight',\n            },\n          },\n        },\n      },\n    },\n\n    splitButtonMenuButtonDisabled: {\n      backgroundColor: s.primaryButtonBackgroundDisabled,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundDisabled,\n        },\n      },\n    },\n\n    splitButtonMenuButtonChecked: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundPressed,\n        },\n      },\n    },\n\n    splitButtonMenuButtonExpanded: {\n      backgroundColor: s.primaryButtonBackgroundPressed,\n      selectors: {\n        ':hover': {\n          backgroundColor: s.primaryButtonBackgroundPressed,\n        },\n      },\n    },\n\n    splitButtonMenuIcon: {\n      color: s.primaryButtonText,\n    },\n\n    splitButtonMenuIconDisabled: {\n      color: p.neutralTertiary,\n\n      selectors: {\n        [HighContrastSelector]: {\n          color: 'GrayText',\n        },\n      },\n    },\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}