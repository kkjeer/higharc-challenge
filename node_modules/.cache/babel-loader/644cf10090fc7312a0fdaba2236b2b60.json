{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { divProperties, getNativeProps } from '../../Utilities';\nimport { classNamesFunction } from '../../Utilities';\nvar getClassNames = classNamesFunction({\n  // Label is used a lot by other components.\n  // It's likely to see expected cases which pass different className to the Label.\n  // Therefore setting a larger cache size.\n  cacheSize: 100\n});\n\nvar LabelBase =\n/** @class */\nfunction (_super) {\n  __extends(LabelBase, _super);\n\n  function LabelBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  LabelBase.prototype.render = function () {\n    var _a = this.props,\n        _b = _a.as,\n        RootType = _b === void 0 ? 'label' : _b,\n        children = _a.children,\n        className = _a.className,\n        disabled = _a.disabled,\n        styles = _a.styles,\n        required = _a.required,\n        theme = _a.theme;\n    var classNames = getClassNames(styles, {\n      className: className,\n      disabled: disabled,\n      required: required,\n      theme: theme\n    });\n    return React.createElement(RootType, __assign({}, getNativeProps(this.props, divProperties), {\n      className: classNames.root\n    }), children);\n  };\n\n  return LabelBase;\n}(React.Component);\n\nexport { LabelBase };","map":{"version":3,"sources":["components/Label/Label.base.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,aAAT,EAAwB,cAAxB,QAA8C,iBAA9C;AACA,SAAS,kBAAT,QAAmC,iBAAnC;AAGA,IAAM,aAAa,GAAG,kBAAkB,CAAiC;EACvE;EACA;EACA;EACA,SAAS,EAAE;AAJ4D,CAAjC,CAAxC;;AAOA,IAAA,SAAA;AAAA;AAAA,UAAA,MAAA,EAAA;EAA+B,SAAA,CAAA,SAAA,EAAA,MAAA,CAAA;;EAA/B,SAAA,SAAA,GAAA;;EAeC;;EAdQ,SAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;IACQ,IAAA,EAAA,GAAqF,KAAK,KAA1F;IAAA,IAAE,EAAA,GAAA,EAAA,CAAA,EAAF;IAAA,IAAM,QAAQ,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,OAAH,GAAU,EAAxB;IAAA,IAA0B,QAAQ,GAAA,EAAA,CAAA,QAAlC;IAAA,IAAoC,SAAS,GAAA,EAAA,CAAA,SAA7C;IAAA,IAA+C,QAAQ,GAAA,EAAA,CAAA,QAAvD;IAAA,IAAyD,MAAM,GAAA,EAAA,CAAA,MAA/D;IAAA,IAAiE,QAAQ,GAAA,EAAA,CAAA,QAAzE;IAAA,IAA2E,KAAK,GAAA,EAAA,CAAA,KAAhF;IACN,IAAM,UAAU,GAAG,aAAa,CAAC,MAAD,EAAS;MACvC,SAAS,EAAA,SAD8B;MAEvC,QAAQ,EAAA,QAF+B;MAGvC,QAAQ,EAAA,QAH+B;MAIvC,KAAK,EAAE;IAJgC,CAAT,CAAhC;IAMA,OACE,KAAA,CAAA,aAAA,CAAC,QAAD,EAAS,QAAA,CAAA,EAAA,EAAK,cAAc,CAAC,KAAK,KAAN,EAAa,aAAb,CAAnB,EAA8C;MAAE,SAAS,EAAE,UAAU,CAAC;IAAxB,CAA9C,CAAT,EACG,QADH,CADF;EAKD,CAbM;;EAcT,OAAA,SAAA;AAAC,CAfD,CAA+B,KAAK,CAAC,SAArC,CAAA","sourcesContent":["import * as React from 'react';\nimport { divProperties, getNativeProps } from '../../Utilities';\nimport { classNamesFunction } from '../../Utilities';\nimport type { ILabelProps, ILabelStyleProps, ILabelStyles } from './Label.types';\n\nconst getClassNames = classNamesFunction<ILabelStyleProps, ILabelStyles>({\n  // Label is used a lot by other components.\n  // It's likely to see expected cases which pass different className to the Label.\n  // Therefore setting a larger cache size.\n  cacheSize: 100,\n});\n\nexport class LabelBase extends React.Component<ILabelProps, {}> {\n  public render(): JSX.Element {\n    const { as: RootType = 'label', children, className, disabled, styles, required, theme } = this.props;\n    const classNames = getClassNames(styles, {\n      className,\n      disabled,\n      required,\n      theme: theme!,\n    });\n    return (\n      <RootType {...getNativeProps(this.props, divProperties)} className={classNames.root}>\n        {children}\n      </RootType>\n    );\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}