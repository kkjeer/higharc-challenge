{"ast":null,"code":"import { concatStyleSets, HighContrastSelector } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\nimport { getStyles as getSplitButtonStyles } from '../SplitButton/SplitButton.styles';\nexport var getStyles = memoizeFunction(function (theme, customStyles) {\n  var _a;\n\n  var baseButtonStyles = getBaseButtonStyles(theme);\n  var splitButtonStyles = getSplitButtonStyles(theme);\n  var palette = theme.palette,\n      semanticColors = theme.semanticColors;\n  var iconButtonStyles = {\n    root: {\n      padding: '0 4px',\n      width: '32px',\n      height: '32px',\n      backgroundColor: 'transparent',\n      border: 'none',\n      color: semanticColors.link\n    },\n    rootHovered: {\n      color: palette.themeDarkAlt,\n      backgroundColor: palette.neutralLighter,\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        borderColor: 'Highlight',\n        color: 'Highlight'\n      }, _a)\n    },\n    rootHasMenu: {\n      width: 'auto'\n    },\n    rootPressed: {\n      color: palette.themeDark,\n      backgroundColor: palette.neutralLight\n    },\n    rootExpanded: {\n      color: palette.themeDark,\n      backgroundColor: palette.neutralLight\n    },\n    rootChecked: {\n      color: palette.themeDark,\n      backgroundColor: palette.neutralLight\n    },\n    rootCheckedHovered: {\n      color: palette.themeDark,\n      backgroundColor: palette.neutralQuaternaryAlt\n    },\n    rootDisabled: {\n      color: palette.neutralTertiaryAlt\n    }\n  };\n  return concatStyleSets(baseButtonStyles, iconButtonStyles, splitButtonStyles, customStyles);\n});","map":{"version":3,"sources":["components/Button/IconButton/IconButton.styles.ts"],"names":[],"mappings":"AAAA,SAAS,eAAT,EAA0B,oBAA1B,QAAsD,kBAAtD;AACA,SAAS,eAAT,QAAgC,oBAAhC;AACA,SAAS,SAAS,IAAI,mBAAtB,QAAiD,sBAAjD;AACA,SAAS,SAAS,IAAI,oBAAtB,QAAkD,mCAAlD;AAIA,OAAO,IAAM,SAAS,GAAG,eAAe,CACtC,UAAC,KAAD,EAAgB,YAAhB,EAA4C;;;EAC1C,IAAM,gBAAgB,GAAkB,mBAAmB,CAAC,KAAD,CAA3D;EACA,IAAM,iBAAiB,GAAkB,oBAAoB,CAAC,KAAD,CAA7D;EACQ,IAAA,OAAO,GAAqB,KAAK,CAA1B,OAAP;EAAA,IAAS,cAAc,GAAK,KAAK,CAAV,cAAvB;EACR,IAAM,gBAAgB,GAAkB;IACtC,IAAI,EAAE;MACJ,OAAO,EAAE,OADL;MAEJ,KAAK,EAAE,MAFH;MAGJ,MAAM,EAAE,MAHJ;MAIJ,eAAe,EAAE,aAJb;MAKJ,MAAM,EAAE,MALJ;MAMJ,KAAK,EAAE,cAAc,CAAC;IANlB,CADgC;IAUtC,WAAW,EAAE;MACX,KAAK,EAAE,OAAO,CAAC,YADJ;MAEX,eAAe,EAAE,OAAO,CAAC,cAFd;MAGX,SAAS,GAAA,EAAA,GAAA,EAAA,EACP,EAAA,CAAC,oBAAD,CAAA,GAAwB;QACtB,WAAW,EAAE,WADS;QAEtB,KAAK,EAAE;MAFe,CADjB,EAKR,EALQ;IAHE,CAVyB;IAqBtC,WAAW,EAAE;MACX,KAAK,EAAE;IADI,CArByB;IAyBtC,WAAW,EAAE;MACX,KAAK,EAAE,OAAO,CAAC,SADJ;MAEX,eAAe,EAAE,OAAO,CAAC;IAFd,CAzByB;IA8BtC,YAAY,EAAE;MACZ,KAAK,EAAE,OAAO,CAAC,SADH;MAEZ,eAAe,EAAE,OAAO,CAAC;IAFb,CA9BwB;IAmCtC,WAAW,EAAE;MACX,KAAK,EAAE,OAAO,CAAC,SADJ;MAEX,eAAe,EAAE,OAAO,CAAC;IAFd,CAnCyB;IAwCtC,kBAAkB,EAAE;MAClB,KAAK,EAAE,OAAO,CAAC,SADG;MAElB,eAAe,EAAE,OAAO,CAAC;IAFP,CAxCkB;IA6CtC,YAAY,EAAE;MACZ,KAAK,EAAE,OAAO,CAAC;IADH;EA7CwB,CAAxC;EAkDA,OAAO,eAAe,CAAC,gBAAD,EAAmB,gBAAnB,EAAqC,iBAArC,EAAwD,YAAxD,CAAtB;AACD,CAxDqC,CAAjC","sourcesContent":["import { concatStyleSets, HighContrastSelector } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\nimport { getStyles as getSplitButtonStyles } from '../SplitButton/SplitButton.styles';\nimport type { IButtonStyles } from '../Button.types';\nimport type { ITheme } from '../../../Styling';\n\nexport const getStyles = memoizeFunction(\n  (theme: ITheme, customStyles?: IButtonStyles): IButtonStyles => {\n    const baseButtonStyles: IButtonStyles = getBaseButtonStyles(theme);\n    const splitButtonStyles: IButtonStyles = getSplitButtonStyles(theme);\n    const { palette, semanticColors } = theme;\n    const iconButtonStyles: IButtonStyles = {\n      root: {\n        padding: '0 4px',\n        width: '32px',\n        height: '32px',\n        backgroundColor: 'transparent',\n        border: 'none',\n        color: semanticColors.link,\n      },\n\n      rootHovered: {\n        color: palette.themeDarkAlt,\n        backgroundColor: palette.neutralLighter,\n        selectors: {\n          [HighContrastSelector]: {\n            borderColor: 'Highlight',\n            color: 'Highlight',\n          },\n        },\n      },\n\n      rootHasMenu: {\n        width: 'auto',\n      },\n\n      rootPressed: {\n        color: palette.themeDark,\n        backgroundColor: palette.neutralLight,\n      },\n\n      rootExpanded: {\n        color: palette.themeDark,\n        backgroundColor: palette.neutralLight,\n      },\n\n      rootChecked: {\n        color: palette.themeDark,\n        backgroundColor: palette.neutralLight,\n      },\n\n      rootCheckedHovered: {\n        color: palette.themeDark,\n        backgroundColor: palette.neutralQuaternaryAlt,\n      },\n\n      rootDisabled: {\n        color: palette.neutralTertiaryAlt,\n      },\n    };\n\n    return concatStyleSets(baseButtonStyles, iconButtonStyles, splitButtonStyles, customStyles)!;\n  },\n);\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}