{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { KeyCodes, getId, getNativeProps, inputProperties, classNamesFunction, initializeComponentRef } from '../../../../Utilities';\nimport { getStyles } from './EditingItem.styles';\n\nvar EditingItem =\n/** @class */\nfunction (_super) {\n  __extends(EditingItem, _super);\n\n  function EditingItem(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._editingFloatingPicker = React.createRef();\n\n    _this._renderEditingSuggestions = function () {\n      var FloatingPicker = _this.props.onRenderFloatingPicker;\n      var floatingPickerProps = _this.props.floatingPickerProps;\n\n      if (!FloatingPicker || !floatingPickerProps) {\n        return React.createElement(React.Fragment, null);\n      }\n\n      return React.createElement(FloatingPicker, __assign({\n        componentRef: _this._editingFloatingPicker,\n        onChange: _this._onSuggestionSelected,\n        inputElement: _this._editingInput,\n        selectedItems: []\n      }, floatingPickerProps));\n    };\n\n    _this._resolveInputRef = function (ref) {\n      _this._editingInput = ref;\n\n      _this.forceUpdate(function () {\n        _this._editingInput.focus();\n      });\n    };\n\n    _this._onInputClick = function () {\n      _this._editingFloatingPicker.current && _this._editingFloatingPicker.current.showPicker(true\n      /*updatevalue*/\n      );\n    };\n\n    _this._onInputBlur = function (ev) {\n      if (_this._editingFloatingPicker.current && ev.relatedTarget !== null) {\n        var target = ev.relatedTarget;\n\n        if (target.className.indexOf('ms-Suggestions-itemButton') === -1 && target.className.indexOf('ms-Suggestions-sectionButton') === -1) {\n          _this._editingFloatingPicker.current.forceResolveSuggestion();\n        }\n      }\n    };\n\n    _this._onInputChange = function (ev) {\n      var value = ev.target.value;\n\n      if (value === '') {\n        if (_this.props.onRemoveItem) {\n          _this.props.onRemoveItem();\n        }\n      } else {\n        _this._editingFloatingPicker.current && _this._editingFloatingPicker.current.onQueryStringChanged(value);\n      }\n    };\n\n    _this._onSuggestionSelected = function (item) {\n      _this.props.onEditingComplete(_this.props.item, item);\n    };\n\n    initializeComponentRef(_this); // eslint-disable-next-line react/no-unused-state\n\n    _this.state = {\n      contextualMenuVisible: false\n    };\n    return _this;\n  }\n\n  EditingItem.prototype.componentDidMount = function () {\n    var getEditingItemText = this.props.getEditingItemText;\n    var itemText = getEditingItemText(this.props.item);\n    this._editingFloatingPicker.current && this._editingFloatingPicker.current.onQueryStringChanged(itemText);\n    this._editingInput.value = itemText;\n\n    this._editingInput.focus();\n  };\n\n  EditingItem.prototype.render = function () {\n    var itemId = getId();\n    var nativeProps = getNativeProps(this.props, inputProperties);\n    var getClassNames = classNamesFunction();\n    var classNames = getClassNames(getStyles);\n    return React.createElement(\"div\", {\n      \"aria-labelledby\": 'editingItemPersona-' + itemId,\n      className: classNames.root\n    }, React.createElement(\"input\", __assign({\n      autoCapitalize: 'off',\n      autoComplete: 'off'\n    }, nativeProps, {\n      ref: this._resolveInputRef,\n      onChange: this._onInputChange,\n      onKeyDown: this._onInputKeyDown,\n      onBlur: this._onInputBlur,\n      onClick: this._onInputClick,\n      \"data-lpignore\": true,\n      className: classNames.input,\n      id: itemId\n    })), this._renderEditingSuggestions());\n  };\n\n  EditingItem.prototype._onInputKeyDown = function (ev) {\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.backspace || ev.which === KeyCodes.del) {\n      ev.stopPropagation();\n    }\n  };\n\n  return EditingItem;\n}(React.Component);\n\nexport { EditingItem };","map":{"version":3,"sources":["components/SelectedItemsList/SelectedPeopleList/Items/EditingItem.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  KeyCodes,\n  getId,\n  getNativeProps,\n  inputProperties,\n  classNamesFunction,\n  initializeComponentRef,\n} from '../../../../Utilities';\nimport { FloatingPeoplePicker } from '../../../../FloatingPicker';\nimport { getStyles } from './EditingItem.styles';\nimport type { IExtendedPersonaProps } from '../SelectedPeopleList';\nimport type { IPeoplePickerItemState } from './ExtendedSelectedItem';\nimport type {\n  IEditingSelectedPeopleItemProps,\n  IEditingSelectedPeopleItemStyles,\n  IEditingSelectedPeopleItemStylesProps,\n} from './EditingItem.types';\n\nexport class EditingItem extends React.Component<IEditingSelectedPeopleItemProps, IPeoplePickerItemState> {\n  private _editingInput: HTMLInputElement;\n  private _editingFloatingPicker = React.createRef<FloatingPeoplePicker>();\n\n  constructor(props: IEditingSelectedPeopleItemProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    // eslint-disable-next-line react/no-unused-state\n    this.state = { contextualMenuVisible: false };\n  }\n\n  public componentDidMount(): void {\n    const getEditingItemText = this.props.getEditingItemText as (item: IExtendedPersonaProps) => string;\n    const itemText = getEditingItemText(this.props.item);\n\n    this._editingFloatingPicker.current && this._editingFloatingPicker.current.onQueryStringChanged(itemText);\n    this._editingInput.value = itemText;\n    this._editingInput.focus();\n  }\n\n  public render(): JSX.Element {\n    const itemId = getId();\n    const nativeProps = getNativeProps<React.InputHTMLAttributes<HTMLInputElement>>(this.props, inputProperties);\n    const getClassNames = classNamesFunction<IEditingSelectedPeopleItemStylesProps, IEditingSelectedPeopleItemStyles>();\n    const classNames = getClassNames(getStyles);\n    return (\n      <div aria-labelledby={'editingItemPersona-' + itemId} className={classNames.root}>\n        <input\n          autoCapitalize={'off'}\n          autoComplete={'off'}\n          {...nativeProps}\n          ref={this._resolveInputRef}\n          onChange={this._onInputChange}\n          onKeyDown={this._onInputKeyDown}\n          onBlur={this._onInputBlur}\n          onClick={this._onInputClick}\n          data-lpignore={true}\n          className={classNames.input}\n          id={itemId}\n        />\n        {this._renderEditingSuggestions()}\n      </div>\n    );\n  }\n\n  private _renderEditingSuggestions = (): JSX.Element => {\n    const FloatingPicker = this.props.onRenderFloatingPicker;\n    const floatingPickerProps = this.props.floatingPickerProps;\n    if (!FloatingPicker || !floatingPickerProps) {\n      return <></>;\n    }\n    return (\n      <FloatingPicker\n        componentRef={this._editingFloatingPicker}\n        onChange={this._onSuggestionSelected}\n        inputElement={this._editingInput}\n        selectedItems={[]}\n        {...floatingPickerProps}\n      />\n    );\n  };\n\n  private _resolveInputRef = (ref: HTMLInputElement): void => {\n    this._editingInput = ref;\n\n    this.forceUpdate(() => {\n      this._editingInput.focus();\n    });\n  };\n\n  private _onInputClick = (): void => {\n    this._editingFloatingPicker.current && this._editingFloatingPicker.current.showPicker(true /*updatevalue*/);\n  };\n\n  private _onInputBlur = (ev: React.FocusEvent<HTMLElement>): void => {\n    if (this._editingFloatingPicker.current && ev.relatedTarget !== null) {\n      const target = ev.relatedTarget as HTMLElement;\n      if (\n        target.className.indexOf('ms-Suggestions-itemButton') === -1 &&\n        target.className.indexOf('ms-Suggestions-sectionButton') === -1\n      ) {\n        this._editingFloatingPicker.current.forceResolveSuggestion();\n      }\n    }\n  };\n\n  private _onInputChange = (ev: React.FormEvent<HTMLElement>): void => {\n    const value: string = (ev.target as HTMLInputElement).value;\n\n    if (value === '') {\n      if (this.props.onRemoveItem) {\n        this.props.onRemoveItem();\n      }\n    } else {\n      this._editingFloatingPicker.current && this._editingFloatingPicker.current.onQueryStringChanged(value);\n    }\n  };\n\n  private _onInputKeyDown(ev: React.KeyboardEvent<HTMLInputElement>): void {\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.backspace || ev.which === KeyCodes.del) {\n      ev.stopPropagation();\n    }\n  }\n\n  private _onSuggestionSelected = (item: IExtendedPersonaProps): void => {\n    this.props.onEditingComplete(this.props.item, item);\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}