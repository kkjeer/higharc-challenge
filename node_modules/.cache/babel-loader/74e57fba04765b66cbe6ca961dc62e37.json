{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { Label } from '../../Label';\nimport { classNamesFunction, find, getNativeProps, divProperties, setFocusVisibility, useFocusRects } from '../../Utilities';\nimport { ChoiceGroupOption } from './ChoiceGroupOption/index';\nimport { useId, useControllableValue, useMergedRefs, useWarnings } from '@fluentui/react-hooks';\nvar getClassNames = classNamesFunction();\n\nvar getOptionId = function (option, id) {\n  return id + \"-\" + option.key;\n};\n\nvar findOption = function (options, key) {\n  return key === undefined ? undefined : find(options, function (value) {\n    return value.key === key;\n  });\n};\n\nvar focusSelectedOption = function (options, keyChecked, id) {\n  var optionToFocus = findOption(options, keyChecked) || options.filter(function (option) {\n    return !option.disabled;\n  })[0];\n  var elementToFocus = optionToFocus && document.getElementById(getOptionId(optionToFocus, id));\n\n  if (elementToFocus) {\n    elementToFocus.focus();\n    setFocusVisibility(true, elementToFocus);\n  }\n};\n\nvar focusFromFocusTrapZone = function (evt) {\n  return evt.relatedTarget instanceof HTMLElement && evt.relatedTarget.dataset.isFocusTrapZoneBumper === 'true';\n};\n\nvar useComponentRef = function (options, keyChecked, id, componentRef) {\n  React.useImperativeHandle(componentRef, function () {\n    return {\n      get checkedOption() {\n        return findOption(options, keyChecked);\n      },\n\n      focus: function () {\n        focusSelectedOption(options, keyChecked, id);\n      }\n    };\n  }, [options, keyChecked, id]);\n};\n\nvar COMPONENT_NAME = 'ChoiceGroup';\nexport var ChoiceGroupBase = React.forwardRef(function (props, forwardedRef) {\n  var className = props.className,\n      theme = props.theme,\n      styles = props.styles,\n      _a = props.options,\n      options = _a === void 0 ? [] : _a,\n      label = props.label,\n      required = props.required,\n      disabled = props.disabled,\n      name = props.name,\n      defaultSelectedKey = props.defaultSelectedKey,\n      componentRef = props.componentRef,\n      onChange = props.onChange;\n  var id = useId('ChoiceGroup');\n  var labelId = useId('ChoiceGroupLabel');\n  var divProps = getNativeProps(props, divProperties, ['onChange', 'className', 'required']);\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className,\n    optionsContainIconOrImage: options.some(function (option) {\n      return !!(option.iconProps || option.imageSrc);\n    })\n  });\n  var ariaLabelledBy = props.ariaLabelledBy || (label ? labelId : props['aria-labelledby']);\n\n  var _b = useControllableValue(props.selectedKey, defaultSelectedKey),\n      keyChecked = _b[0],\n      setKeyChecked = _b[1];\n\n  var _c = React.useState(),\n      keyFocused = _c[0],\n      setKeyFocused = _c[1];\n\n  var rootRef = React.useRef(null);\n  var mergedRootRefs = useMergedRefs(rootRef, forwardedRef);\n  useDebugWarnings(props);\n  useComponentRef(options, keyChecked, id, componentRef);\n  useFocusRects(rootRef);\n  var onFocus = React.useCallback(function (ev, option) {\n    var _a;\n\n    if (option) {\n      setKeyFocused(option.itemKey);\n      (_a = option.onFocus) === null || _a === void 0 ? void 0 : _a.call(option, ev);\n    }\n  }, []);\n  var onBlur = React.useCallback(function (ev, option) {\n    var _a;\n\n    setKeyFocused(undefined);\n    (_a = option === null || option === void 0 ? void 0 : option.onBlur) === null || _a === void 0 ? void 0 : _a.call(option, ev);\n  }, []);\n  var onOptionChange = React.useCallback(function (evt, option) {\n    var _a;\n\n    if (!option) {\n      return;\n    }\n\n    setKeyChecked(option.itemKey);\n    (_a = option.onChange) === null || _a === void 0 ? void 0 : _a.call(option, evt);\n    onChange === null || onChange === void 0 ? void 0 : onChange(evt, findOption(options, option.itemKey));\n  }, [onChange, options, setKeyChecked]);\n  var onRadioFocus = React.useCallback(function (evt) {\n    // Handles scenarios like this bug: https://github.com/microsoft/fluentui/issues/20173\n    if (focusFromFocusTrapZone(evt)) {\n      focusSelectedOption(options, keyChecked, id);\n    }\n  }, [options, keyChecked, id]);\n  return React.createElement(\"div\", __assign({\n    className: classNames.root\n  }, divProps, {\n    ref: mergedRootRefs\n  }), React.createElement(\"div\", __assign({\n    role: \"radiogroup\"\n  }, ariaLabelledBy && {\n    'aria-labelledby': ariaLabelledBy\n  }, {\n    onFocus: onRadioFocus\n  }), label && React.createElement(Label, {\n    className: classNames.label,\n    required: required,\n    id: labelId,\n    disabled: disabled\n  }, label), React.createElement(\"div\", {\n    className: classNames.flexContainer\n  }, options.map(function (option) {\n    return React.createElement(ChoiceGroupOption, __assign({\n      itemKey: option.key\n    }, option, {\n      key: option.key,\n      onBlur: onBlur,\n      onFocus: onFocus,\n      onChange: onOptionChange,\n      focused: option.key === keyFocused,\n      checked: option.key === keyChecked,\n      disabled: option.disabled || disabled,\n      id: getOptionId(option, id),\n      labelId: option.labelId || labelId + \"-\" + option.key,\n      name: name || id,\n      required: required\n    }));\n  }))));\n});\nChoiceGroupBase.displayName = COMPONENT_NAME;\n\nfunction useDebugWarnings(props) {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n    useWarnings({\n      name: COMPONENT_NAME,\n      props: props,\n      mutuallyExclusive: {\n        selectedKey: 'defaultSelectedKey'\n      }\n    });\n  }\n}","map":{"version":3,"sources":["components/ChoiceGroup/ChoiceGroup.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Label } from '../../Label';\nimport {\n  classNamesFunction,\n  find,\n  getNativeProps,\n  divProperties,\n  setFocusVisibility,\n  useFocusRects,\n} from '../../Utilities';\nimport { ChoiceGroupOption } from './ChoiceGroupOption/index';\nimport { useId, useControllableValue, useMergedRefs, useWarnings } from '@fluentui/react-hooks';\nimport type { IRefObject } from '../../Utilities';\nimport type {\n  IChoiceGroupOption,\n  IChoiceGroupProps,\n  IChoiceGroupStyleProps,\n  IChoiceGroupStyles,\n  IChoiceGroup,\n} from './ChoiceGroup.types';\nimport type { IChoiceGroupOptionProps } from './ChoiceGroupOption/ChoiceGroupOption.types';\n\nconst getClassNames = classNamesFunction<IChoiceGroupStyleProps, IChoiceGroupStyles>();\n\nconst getOptionId = (option: IChoiceGroupOption, id: string): string => {\n  return `${id}-${option.key}`;\n};\n\nconst findOption = (options: IChoiceGroupOption[], key: string | number | undefined) => {\n  return key === undefined ? undefined : find(options, value => value.key === key);\n};\n\nconst focusSelectedOption = (options: IChoiceGroupOption[], keyChecked: string | number | undefined, id: string) => {\n  const optionToFocus = findOption(options, keyChecked) || options.filter(option => !option.disabled)[0];\n  const elementToFocus = optionToFocus && document.getElementById(getOptionId(optionToFocus, id));\n\n  if (elementToFocus) {\n    elementToFocus.focus();\n    setFocusVisibility(true, elementToFocus as Element);\n  }\n};\n\nconst focusFromFocusTrapZone = (evt: React.FocusEvent<HTMLElement>): boolean => {\n  return evt.relatedTarget instanceof HTMLElement && evt.relatedTarget.dataset.isFocusTrapZoneBumper === 'true';\n};\n\nconst useComponentRef = (\n  options: IChoiceGroupOption[],\n  keyChecked: string | number | undefined,\n  id: string,\n  componentRef?: IRefObject<IChoiceGroup>,\n) => {\n  React.useImperativeHandle(\n    componentRef,\n    () => ({\n      get checkedOption() {\n        return findOption(options, keyChecked);\n      },\n      focus() {\n        focusSelectedOption(options, keyChecked, id);\n      },\n    }),\n    [options, keyChecked, id],\n  );\n};\n\nconst COMPONENT_NAME = 'ChoiceGroup';\n\nexport const ChoiceGroupBase: React.FunctionComponent<IChoiceGroupProps> = React.forwardRef<\n  HTMLDivElement,\n  IChoiceGroupProps\n>((props, forwardedRef) => {\n  const {\n    className,\n    theme,\n    styles,\n    options = [],\n    label,\n    required,\n    disabled,\n    name,\n    defaultSelectedKey,\n    componentRef,\n    onChange,\n  } = props;\n  const id = useId('ChoiceGroup');\n  const labelId = useId('ChoiceGroupLabel');\n\n  const divProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(props, divProperties, [\n    'onChange',\n    'className',\n    'required',\n  ]);\n\n  const classNames = getClassNames(styles!, {\n    theme: theme!,\n    className,\n    optionsContainIconOrImage: options.some(option => !!(option.iconProps || option.imageSrc)),\n  });\n\n  const ariaLabelledBy = props.ariaLabelledBy || (label ? labelId : props['aria-labelledby']);\n\n  const [keyChecked, setKeyChecked] = useControllableValue(props.selectedKey, defaultSelectedKey);\n  const [keyFocused, setKeyFocused] = React.useState<string | number>();\n\n  const rootRef = React.useRef<HTMLDivElement | null>(null);\n  const mergedRootRefs: React.Ref<HTMLDivElement> = useMergedRefs(rootRef, forwardedRef);\n\n  useDebugWarnings(props);\n  useComponentRef(options, keyChecked, id, componentRef);\n  useFocusRects(rootRef);\n\n  const onFocus = React.useCallback((ev?: React.FocusEvent<HTMLElement>, option?: IChoiceGroupOptionProps) => {\n    if (option) {\n      setKeyFocused(option.itemKey);\n      option.onFocus?.(ev);\n    }\n  }, []);\n\n  const onBlur = React.useCallback((ev: React.FocusEvent<HTMLElement>, option?: IChoiceGroupOptionProps) => {\n    setKeyFocused(undefined);\n    option?.onBlur?.(ev);\n  }, []);\n\n  const onOptionChange = React.useCallback(\n    (evt?: React.FormEvent<HTMLElement | HTMLInputElement>, option?: IChoiceGroupOptionProps) => {\n      if (!option) {\n        return;\n      }\n      setKeyChecked(option.itemKey);\n\n      option.onChange?.(evt);\n      onChange?.(evt, findOption(options, option.itemKey));\n    },\n    [onChange, options, setKeyChecked],\n  );\n\n  const onRadioFocus = React.useCallback(\n    (evt: React.FocusEvent<HTMLElement>) => {\n      // Handles scenarios like this bug: https://github.com/microsoft/fluentui/issues/20173\n      if (focusFromFocusTrapZone(evt)) {\n        focusSelectedOption(options, keyChecked, id);\n      }\n    },\n    [options, keyChecked, id],\n  );\n\n  return (\n    <div className={classNames.root} {...divProps} ref={mergedRootRefs}>\n      <div role=\"radiogroup\" {...(ariaLabelledBy && { 'aria-labelledby': ariaLabelledBy })} onFocus={onRadioFocus}>\n        {label && (\n          <Label className={classNames.label} required={required} id={labelId} disabled={disabled}>\n            {label}\n          </Label>\n        )}\n        <div className={classNames.flexContainer}>\n          {options.map((option: IChoiceGroupOption) => {\n            return (\n              <ChoiceGroupOption\n                itemKey={option.key}\n                {...option}\n                key={option.key}\n                onBlur={onBlur}\n                onFocus={onFocus}\n                onChange={onOptionChange}\n                focused={option.key === keyFocused}\n                checked={option.key === keyChecked}\n                disabled={option.disabled || disabled}\n                id={getOptionId(option, id)}\n                labelId={option.labelId || `${labelId}-${option.key}`}\n                name={name || id}\n                required={required}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n});\nChoiceGroupBase.displayName = COMPONENT_NAME;\n\nfunction useDebugWarnings(props: IChoiceGroupProps) {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n    useWarnings({\n      name: COMPONENT_NAME,\n      props,\n      mutuallyExclusive: {\n        selectedKey: 'defaultSelectedKey',\n      },\n    });\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}