{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { keyframes, getGlobalClassNames, hiddenContentStyle, HighContrastSelector, getHighContrastNoAdjustStyle } from '../../Styling';\nimport { getRTL, memoizeFunction } from '../../Utilities';\nvar GlobalClassNames = {\n  root: 'ms-Shimmer-container',\n  shimmerWrapper: 'ms-Shimmer-shimmerWrapper',\n  shimmerGradient: 'ms-Shimmer-shimmerGradient',\n  dataWrapper: 'ms-Shimmer-dataWrapper'\n};\nvar BACKGROUND_OFF_SCREEN_POSITION = '100%';\nvar shimmerAnimation = memoizeFunction(function () {\n  return keyframes({\n    '0%': {\n      transform: \"translateX(-\" + BACKGROUND_OFF_SCREEN_POSITION + \")\"\n    },\n    '100%': {\n      transform: \"translateX(\" + BACKGROUND_OFF_SCREEN_POSITION + \")\"\n    }\n  });\n});\nvar shimmerAnimationRTL = memoizeFunction(function () {\n  return keyframes({\n    '100%': {\n      transform: \"translateX(-\" + BACKGROUND_OFF_SCREEN_POSITION + \")\"\n    },\n    '0%': {\n      transform: \"translateX(\" + BACKGROUND_OFF_SCREEN_POSITION + \")\"\n    }\n  });\n});\nexport function getStyles(props) {\n  var _a;\n\n  var isDataLoaded = props.isDataLoaded,\n      className = props.className,\n      theme = props.theme,\n      transitionAnimationInterval = props.transitionAnimationInterval,\n      shimmerColor = props.shimmerColor,\n      shimmerWaveColor = props.shimmerWaveColor;\n  var semanticColors = theme.semanticColors;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  var isRTL = getRTL(theme);\n  return {\n    root: [classNames.root, theme.fonts.medium, {\n      position: 'relative',\n      height: 'auto'\n    }, className],\n    shimmerWrapper: [classNames.shimmerWrapper, {\n      position: 'relative',\n      overflow: 'hidden',\n      transform: 'translateZ(0)',\n      backgroundColor: shimmerColor || semanticColors.disabledBackground,\n      transition: \"opacity \" + transitionAnimationInterval + \"ms\",\n      selectors: (_a = {\n        '> *': {\n          transform: 'translateZ(0)'\n        }\n      }, _a[HighContrastSelector] = __assign({\n        background: \"WindowText\\n                        linear-gradient(\\n                          to right,\\n                          transparent 0%,\\n                          Window 50%,\\n                          transparent 100%)\\n                        0 0 / 90% 100%\\n                        no-repeat\"\n      }, getHighContrastNoAdjustStyle()), _a)\n    }, isDataLoaded && {\n      opacity: '0',\n      position: 'absolute',\n      top: '0',\n      bottom: '0',\n      left: '0',\n      right: '0'\n    }],\n    shimmerGradient: [classNames.shimmerGradient, {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      background: (shimmerColor || semanticColors.disabledBackground) + \"\\n                      linear-gradient(\\n                        to right,\\n                        \" + (shimmerColor || semanticColors.disabledBackground) + \" 0%,\\n                        \" + (shimmerWaveColor || semanticColors.bodyDivider) + \" 50%,\\n                        \" + (shimmerColor || semanticColors.disabledBackground) + \" 100%)\\n                      0 0 / 90% 100%\\n                      no-repeat\",\n      transform: \"translateX(-\" + BACKGROUND_OFF_SCREEN_POSITION + \")\",\n      animationDuration: '2s',\n      animationTimingFunction: 'ease-in-out',\n      animationDirection: 'normal',\n      animationIterationCount: 'infinite',\n      animationName: isRTL ? shimmerAnimationRTL() : shimmerAnimation()\n    }],\n    dataWrapper: [classNames.dataWrapper, {\n      position: 'absolute',\n      top: '0',\n      bottom: '0',\n      left: '0',\n      right: '0',\n      opacity: '0',\n      background: 'none',\n      backgroundColor: 'transparent',\n      border: 'none',\n      transition: \"opacity \" + transitionAnimationInterval + \"ms\"\n    }, isDataLoaded && {\n      opacity: '1',\n      position: 'static'\n    }],\n    screenReaderText: hiddenContentStyle\n  };\n}","map":{"version":3,"sources":["components/Shimmer/Shimmer.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  keyframes,\n  getGlobalClassNames,\n  hiddenContentStyle,\n  HighContrastSelector,\n  getHighContrastNoAdjustStyle,\n} from '../../Styling';\nimport { getRTL, memoizeFunction } from '../../Utilities';\nimport type { IShimmerStyleProps, IShimmerStyles } from './Shimmer.types';\n\nconst GlobalClassNames = {\n  root: 'ms-Shimmer-container',\n  shimmerWrapper: 'ms-Shimmer-shimmerWrapper',\n  shimmerGradient: 'ms-Shimmer-shimmerGradient',\n  dataWrapper: 'ms-Shimmer-dataWrapper',\n};\n\nconst BACKGROUND_OFF_SCREEN_POSITION = '100%';\n\nconst shimmerAnimation = memoizeFunction(() =>\n  keyframes({\n    '0%': {\n      transform: `translateX(-${BACKGROUND_OFF_SCREEN_POSITION})`,\n    },\n    '100%': {\n      transform: `translateX(${BACKGROUND_OFF_SCREEN_POSITION})`,\n    },\n  }),\n);\n\nconst shimmerAnimationRTL = memoizeFunction(() =>\n  keyframes({\n    '100%': {\n      transform: `translateX(-${BACKGROUND_OFF_SCREEN_POSITION})`,\n    },\n    '0%': {\n      transform: `translateX(${BACKGROUND_OFF_SCREEN_POSITION})`,\n    },\n  }),\n);\n\nexport function getStyles(props: IShimmerStyleProps): IShimmerStyles {\n  const { isDataLoaded, className, theme, transitionAnimationInterval, shimmerColor, shimmerWaveColor } = props;\n\n  const { semanticColors } = theme;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const isRTL = getRTL(theme);\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      {\n        position: 'relative',\n        height: 'auto',\n      },\n      className,\n    ],\n    shimmerWrapper: [\n      classNames.shimmerWrapper,\n      {\n        position: 'relative',\n        overflow: 'hidden',\n        transform: 'translateZ(0)',\n        backgroundColor: shimmerColor || semanticColors.disabledBackground,\n        transition: `opacity ${transitionAnimationInterval}ms`,\n        selectors: {\n          '> *': {\n            transform: 'translateZ(0)',\n          },\n          [HighContrastSelector]: {\n            background: `WindowText\n                        linear-gradient(\n                          to right,\n                          transparent 0%,\n                          Window 50%,\n                          transparent 100%)\n                        0 0 / 90% 100%\n                        no-repeat`,\n            ...getHighContrastNoAdjustStyle(),\n          },\n        },\n      },\n      isDataLoaded && {\n        opacity: '0',\n        position: 'absolute',\n        top: '0',\n        bottom: '0',\n        left: '0',\n        right: '0',\n      },\n    ],\n    shimmerGradient: [\n      classNames.shimmerGradient,\n      {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        background: `${shimmerColor || semanticColors.disabledBackground}\n                      linear-gradient(\n                        to right,\n                        ${shimmerColor || semanticColors.disabledBackground} 0%,\n                        ${shimmerWaveColor || semanticColors.bodyDivider} 50%,\n                        ${shimmerColor || semanticColors.disabledBackground} 100%)\n                      0 0 / 90% 100%\n                      no-repeat`,\n        transform: `translateX(-${BACKGROUND_OFF_SCREEN_POSITION})`,\n        animationDuration: '2s',\n        animationTimingFunction: 'ease-in-out',\n        animationDirection: 'normal',\n        animationIterationCount: 'infinite',\n        animationName: isRTL ? shimmerAnimationRTL() : shimmerAnimation(),\n      },\n    ],\n    dataWrapper: [\n      classNames.dataWrapper,\n      {\n        position: 'absolute',\n        top: '0',\n        bottom: '0',\n        left: '0',\n        right: '0',\n        opacity: '0',\n        background: 'none',\n        backgroundColor: 'transparent',\n        border: 'none',\n        transition: `opacity ${transitionAnimationInterval}ms`,\n      },\n      isDataLoaded && {\n        opacity: '1',\n        position: 'static',\n      },\n    ],\n    screenReaderText: hiddenContentStyle,\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}