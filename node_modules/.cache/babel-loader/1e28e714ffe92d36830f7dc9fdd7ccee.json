{"ast":null,"code":"import { getWindow } from './dom/getWindow';\nvar isMacResult;\n/**\n * Returns true if the user is on a Mac. Caches the result value.\n * @param reset - Reset the cached result value (mainly for testing).\n */\n\nexport function isMac(reset) {\n  var _a;\n\n  if (typeof isMacResult === 'undefined' || reset) {\n    var win = getWindow(); // In certain SSR frameworks, `window` will be defined even on the server but `navigator` will be undefined\n\n    var userAgent = (_a = win === null || win === void 0 ? void 0 : win.navigator) === null || _a === void 0 ? void 0 : _a.userAgent;\n    isMacResult = !!userAgent && userAgent.indexOf('Macintosh') !== -1;\n  }\n\n  return !!isMacResult;\n}","map":{"version":3,"sources":["osDetector.ts"],"names":[],"mappings":"AAAA,SAAS,SAAT,QAA0B,iBAA1B;AAEA,IAAI,WAAJ;AAEA;;;AAGG;;AACH,OAAM,SAAU,KAAV,CAAgB,KAAhB,EAA+B;;;EACnC,IAAI,OAAO,WAAP,KAAuB,WAAvB,IAAsC,KAA1C,EAAiD;IAC/C,IAAM,GAAG,GAAG,SAAS,EAArB,CAD+C,CAE/C;;IACA,IAAM,SAAS,GAAG,CAAA,EAAA,GAAA,GAAG,KAAA,IAAH,IAAA,GAAG,KAAA,KAAA,CAAH,GAAG,KAAA,CAAH,GAAA,GAAG,CAAE,SAAL,MAAc,IAAd,IAAc,EAAA,KAAA,KAAA,CAAd,GAAc,KAAA,CAAd,GAAc,EAAA,CAAE,SAAlC;IACA,WAAW,GAAG,CAAC,CAAC,SAAF,IAAe,SAAS,CAAC,OAAV,CAAkB,WAAlB,MAAmC,CAAC,CAAjE;EACD;;EACD,OAAO,CAAC,CAAC,WAAT;AACD","sourcesContent":["import { getWindow } from './dom/getWindow';\n\nlet isMacResult: boolean | undefined;\n\n/**\n * Returns true if the user is on a Mac. Caches the result value.\n * @param reset - Reset the cached result value (mainly for testing).\n */\nexport function isMac(reset?: boolean): boolean {\n  if (typeof isMacResult === 'undefined' || reset) {\n    const win = getWindow();\n    // In certain SSR frameworks, `window` will be defined even on the server but `navigator` will be undefined\n    const userAgent = win?.navigator?.userAgent;\n    isMacResult = !!userAgent && userAgent.indexOf('Macintosh') !== -1;\n  }\n  return !!isMacResult;\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}