{"ast":null,"code":"import { getDividerClassNames } from '../Divider/VerticalDivider.classNames';\nimport { getMenuItemStyles } from './ContextualMenu.cnstyles';\nimport { mergeStyleSets, getGlobalClassNames, getScreenSelector, ScreenWidthMaxMedium, hiddenContentStyle } from '../../Styling';\nimport { memoizeFunction, IsFocusVisibleClassName } from '../../Utilities';\nvar CONTEXTUAL_SPLIT_MENU_MINWIDTH = '28px';\nvar MediumScreenSelector = getScreenSelector(0, ScreenWidthMaxMedium);\nexport var getSplitButtonVerticalDividerClassNames = memoizeFunction(\n/* eslint-disable deprecation/deprecation */\nfunction (theme) {\n  var _a;\n\n  return mergeStyleSets(getDividerClassNames(theme), {\n    /* eslint-enable deprecation/deprecation */\n    wrapper: {\n      position: 'absolute',\n      right: 28,\n      selectors: (_a = {}, _a[MediumScreenSelector] = {\n        right: 32 // fontSize of the icon increased from 12px to 16px\n\n      }, _a)\n    },\n    divider: {\n      height: 16,\n      width: 1\n    }\n  });\n});\nvar GlobalClassNames = {\n  item: 'ms-ContextualMenu-item',\n  divider: 'ms-ContextualMenu-divider',\n  root: 'ms-ContextualMenu-link',\n  isChecked: 'is-checked',\n  isExpanded: 'is-expanded',\n  isDisabled: 'is-disabled',\n  linkContent: 'ms-ContextualMenu-linkContent',\n  linkContentMenu: 'ms-ContextualMenu-linkContent',\n  icon: 'ms-ContextualMenu-icon',\n  iconColor: 'ms-ContextualMenu-iconColor',\n  checkmarkIcon: 'ms-ContextualMenu-checkmarkIcon',\n  subMenuIcon: 'ms-ContextualMenu-submenuIcon',\n  label: 'ms-ContextualMenu-itemText',\n  secondaryText: 'ms-ContextualMenu-secondaryText',\n  splitMenu: 'ms-ContextualMenu-splitMenu',\n  screenReaderText: 'ms-ContextualMenu-screenReaderText'\n};\n/**\n * @deprecated Will be removed in \\>= 7.0.\n * This is a package-internal method that has been depended on.\n * It is being kept in this form for backwards compatibility.\n * @internal\n */\n// TODO: Audit perf. impact of and potentially remove memoizeFunction.\n// https://github.com/microsoft/fluentui/issues/5534\n\nexport var getItemClassNames = memoizeFunction(function (theme, disabled, expanded, checked, isAnchorLink, knownIcon, itemClassName, dividerClassName, iconClassName, subMenuClassName, primaryDisabled, className) {\n  var _a, _b, _c, _d;\n\n  var styles = getMenuItemStyles(theme);\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  return mergeStyleSets({\n    item: [classNames.item, styles.item, itemClassName],\n    divider: [classNames.divider, styles.divider, dividerClassName],\n    root: [classNames.root, styles.root, checked && [classNames.isChecked, styles.rootChecked], isAnchorLink && styles.anchorLink, expanded && [classNames.isExpanded, styles.rootExpanded], disabled && [classNames.isDisabled, styles.rootDisabled], !disabled && !expanded && [{\n      selectors: (_a = {\n        ':hover': styles.rootHovered,\n        ':active': styles.rootPressed\n      }, _a[\".\" + IsFocusVisibleClassName + \" &:focus, .\" + IsFocusVisibleClassName + \" &:focus:hover\"] = styles.rootFocused, _a[\".\" + IsFocusVisibleClassName + \" &:hover\"] = {\n        background: 'inherit;'\n      }, _a)\n    }], className],\n    splitPrimary: [styles.root, {\n      width: \"calc(100% - \" + CONTEXTUAL_SPLIT_MENU_MINWIDTH + \")\"\n    }, checked && ['is-checked', styles.rootChecked], (disabled || primaryDisabled) && ['is-disabled', styles.rootDisabled], !(disabled || primaryDisabled) && !checked && [{\n      selectors: (_b = {\n        ':hover': styles.rootHovered\n      }, // when hovering over the splitPrimary also affect the splitMenu\n      _b[\":hover ~ .\" + classNames.splitMenu] = styles.rootHovered, _b[':active'] = styles.rootPressed, _b[\".\" + IsFocusVisibleClassName + \" &:focus, .\" + IsFocusVisibleClassName + \" &:focus:hover\"] = styles.rootFocused, _b[\".\" + IsFocusVisibleClassName + \" &:hover\"] = {\n        background: 'inherit;'\n      }, _b)\n    }]],\n    splitMenu: [classNames.splitMenu, styles.root, {\n      flexBasis: '0',\n      padding: '0 8px',\n      minWidth: CONTEXTUAL_SPLIT_MENU_MINWIDTH\n    }, expanded && ['is-expanded', styles.rootExpanded], disabled && ['is-disabled', styles.rootDisabled], !disabled && !expanded && [{\n      selectors: (_c = {\n        ':hover': styles.rootHovered,\n        ':active': styles.rootPressed\n      }, _c[\".\" + IsFocusVisibleClassName + \" &:focus, .\" + IsFocusVisibleClassName + \" &:focus:hover\"] = styles.rootFocused, _c[\".\" + IsFocusVisibleClassName + \" &:hover\"] = {\n        background: 'inherit;'\n      }, _c)\n    }]],\n    anchorLink: styles.anchorLink,\n    linkContent: [classNames.linkContent, styles.linkContent],\n    linkContentMenu: [classNames.linkContentMenu, styles.linkContent, {\n      justifyContent: 'center'\n    }],\n    icon: [classNames.icon, knownIcon && styles.iconColor, styles.icon, iconClassName, disabled && [classNames.isDisabled, styles.iconDisabled]],\n    iconColor: styles.iconColor,\n    checkmarkIcon: [classNames.checkmarkIcon, knownIcon && styles.checkmarkIcon, styles.icon, iconClassName],\n    subMenuIcon: [classNames.subMenuIcon, styles.subMenuIcon, subMenuClassName, expanded && {\n      color: theme.palette.neutralPrimary\n    }, disabled && [styles.iconDisabled]],\n    label: [classNames.label, styles.label],\n    secondaryText: [classNames.secondaryText, styles.secondaryText],\n    splitContainer: [styles.splitButtonFlexContainer, !disabled && !checked && [{\n      selectors: (_d = {}, _d[\".\" + IsFocusVisibleClassName + \" &:focus, .\" + IsFocusVisibleClassName + \" &:focus:hover\"] = styles.rootFocused, _d)\n    }]],\n    screenReaderText: [classNames.screenReaderText, styles.screenReaderText, hiddenContentStyle, {\n      visibility: 'hidden'\n    }]\n  });\n});\n/**\n * Wrapper function for generating ContextualMenuItem classNames which adheres to\n * the getStyles API, but invokes memoized className generator function with\n * primitive values.\n *\n * @param props the ContextualMenuItem style props used to generate its styles.\n */\n\nexport var getItemStyles = function (props) {\n  var theme = props.theme,\n      disabled = props.disabled,\n      expanded = props.expanded,\n      checked = props.checked,\n      isAnchorLink = props.isAnchorLink,\n      knownIcon = props.knownIcon,\n      itemClassName = props.itemClassName,\n      dividerClassName = props.dividerClassName,\n      iconClassName = props.iconClassName,\n      subMenuClassName = props.subMenuClassName,\n      primaryDisabled = props.primaryDisabled,\n      className = props.className; // eslint-disable-next-line deprecation/deprecation\n\n  return getItemClassNames(theme, disabled, expanded, checked, isAnchorLink, knownIcon, itemClassName, dividerClassName, iconClassName, subMenuClassName, primaryDisabled, className);\n};","map":{"version":3,"sources":["components/ContextualMenu/ContextualMenu.classNames.ts"],"names":[],"mappings":"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","sourcesContent":["import { getDividerClassNames } from '../Divider/VerticalDivider.classNames';\nimport { getMenuItemStyles } from './ContextualMenu.cnstyles';\nimport {\n  mergeStyleSets,\n  getGlobalClassNames,\n  getScreenSelector,\n  ScreenWidthMaxMedium,\n  hiddenContentStyle,\n} from '../../Styling';\nimport { memoizeFunction, IsFocusVisibleClassName } from '../../Utilities';\nimport type { ITheme } from '../../Styling';\nimport type { IVerticalDividerClassNames } from '../Divider/VerticalDivider.types';\nimport type { IContextualMenuItemStyles, IContextualMenuItemStyleProps } from './ContextualMenuItem.types';\nimport type { IContextualMenuSubComponentStyles } from './ContextualMenu.types';\n\n/**\n * @deprecated Deprecated in favor of mergeStyles API.\n */\nexport interface IContextualMenuClassNames {\n  container?: string;\n  root?: string;\n  list?: string;\n  header?: string;\n  title?: string;\n  subComponentStyles?: IContextualMenuSubComponentStyles;\n}\n\n/**\n * @deprecated Deprecated in favor of mergeStyles API.\n */\nexport interface IMenuItemClassNames {\n  item?: string;\n  divider?: string;\n  root?: string;\n  linkContent?: string;\n  icon?: string;\n  checkmarkIcon?: string;\n  subMenuIcon?: string;\n  label?: string;\n  secondaryText?: string;\n  splitContainer?: string;\n  splitPrimary?: string;\n  splitMenu?: string;\n  linkContentMenu?: string;\n  screenReaderText?: string;\n}\n\nconst CONTEXTUAL_SPLIT_MENU_MINWIDTH = '28px';\n\nconst MediumScreenSelector = getScreenSelector(0, ScreenWidthMaxMedium);\n\nexport const getSplitButtonVerticalDividerClassNames = memoizeFunction(\n  /* eslint-disable deprecation/deprecation */\n  (theme: ITheme): IVerticalDividerClassNames => {\n    return mergeStyleSets(getDividerClassNames(theme), {\n      /* eslint-enable deprecation/deprecation */\n      wrapper: {\n        position: 'absolute',\n        right: 28, // width of the splitMenu based on the padding plus icon fontSize\n        selectors: {\n          [MediumScreenSelector]: {\n            right: 32, // fontSize of the icon increased from 12px to 16px\n          },\n        },\n      },\n      divider: {\n        height: 16,\n        width: 1,\n      },\n    });\n  },\n);\n\nconst GlobalClassNames = {\n  item: 'ms-ContextualMenu-item',\n  divider: 'ms-ContextualMenu-divider',\n  root: 'ms-ContextualMenu-link',\n  isChecked: 'is-checked',\n  isExpanded: 'is-expanded',\n  isDisabled: 'is-disabled',\n  linkContent: 'ms-ContextualMenu-linkContent',\n  linkContentMenu: 'ms-ContextualMenu-linkContent',\n  icon: 'ms-ContextualMenu-icon',\n  iconColor: 'ms-ContextualMenu-iconColor',\n  checkmarkIcon: 'ms-ContextualMenu-checkmarkIcon',\n  subMenuIcon: 'ms-ContextualMenu-submenuIcon',\n  label: 'ms-ContextualMenu-itemText',\n  secondaryText: 'ms-ContextualMenu-secondaryText',\n  splitMenu: 'ms-ContextualMenu-splitMenu',\n  screenReaderText: 'ms-ContextualMenu-screenReaderText',\n};\n\n/**\n * @deprecated Will be removed in \\>= 7.0.\n * This is a package-internal method that has been depended on.\n * It is being kept in this form for backwards compatibility.\n * @internal\n */\n// TODO: Audit perf. impact of and potentially remove memoizeFunction.\n// https://github.com/microsoft/fluentui/issues/5534\nexport const getItemClassNames = memoizeFunction(\n  (\n    theme: ITheme,\n    disabled: boolean,\n    expanded: boolean,\n    checked: boolean,\n    isAnchorLink: boolean,\n    knownIcon: boolean,\n    itemClassName?: string,\n    dividerClassName?: string,\n    iconClassName?: string,\n    subMenuClassName?: string,\n    primaryDisabled?: boolean,\n    className?: string,\n  ): IContextualMenuItemStyles => {\n    const styles = getMenuItemStyles(theme);\n    const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n    return mergeStyleSets({\n      item: [classNames.item, styles.item, itemClassName],\n      divider: [classNames.divider, styles.divider, dividerClassName],\n      root: [\n        classNames.root,\n        styles.root,\n        checked && [classNames.isChecked, styles.rootChecked],\n        isAnchorLink && styles.anchorLink,\n        expanded && [classNames.isExpanded, styles.rootExpanded],\n        disabled && [classNames.isDisabled, styles.rootDisabled],\n        !disabled &&\n          !expanded && [\n            {\n              selectors: {\n                ':hover': styles.rootHovered,\n                ':active': styles.rootPressed,\n                [`.${IsFocusVisibleClassName} &:focus, .${IsFocusVisibleClassName} &:focus:hover`]: styles.rootFocused,\n                [`.${IsFocusVisibleClassName} &:hover`]: { background: 'inherit;' },\n              },\n            },\n          ],\n        className,\n      ],\n      splitPrimary: [\n        styles.root,\n        {\n          width: `calc(100% - ${CONTEXTUAL_SPLIT_MENU_MINWIDTH})`,\n        },\n        checked && ['is-checked', styles.rootChecked],\n        (disabled || primaryDisabled) && ['is-disabled', styles.rootDisabled],\n        !(disabled || primaryDisabled) &&\n          !checked && [\n            {\n              selectors: {\n                ':hover': styles.rootHovered,\n                // when hovering over the splitPrimary also affect the splitMenu\n                [`:hover ~ .${classNames.splitMenu}`]: styles.rootHovered,\n                ':active': styles.rootPressed,\n                [`.${IsFocusVisibleClassName} &:focus, .${IsFocusVisibleClassName} &:focus:hover`]: styles.rootFocused,\n                [`.${IsFocusVisibleClassName} &:hover`]: { background: 'inherit;' },\n              },\n            },\n          ],\n      ],\n      splitMenu: [\n        classNames.splitMenu,\n        styles.root,\n        {\n          flexBasis: '0',\n          padding: '0 8px',\n          minWidth: CONTEXTUAL_SPLIT_MENU_MINWIDTH,\n        },\n        expanded && ['is-expanded', styles.rootExpanded],\n        disabled && ['is-disabled', styles.rootDisabled],\n        !disabled &&\n          !expanded && [\n            {\n              selectors: {\n                ':hover': styles.rootHovered,\n                ':active': styles.rootPressed,\n                [`.${IsFocusVisibleClassName} &:focus, .${IsFocusVisibleClassName} &:focus:hover`]: styles.rootFocused,\n                [`.${IsFocusVisibleClassName} &:hover`]: { background: 'inherit;' },\n              },\n            },\n          ],\n      ],\n      anchorLink: styles.anchorLink,\n      linkContent: [classNames.linkContent, styles.linkContent],\n      linkContentMenu: [\n        classNames.linkContentMenu,\n        styles.linkContent,\n        {\n          justifyContent: 'center',\n        },\n      ],\n      icon: [\n        classNames.icon,\n        knownIcon && styles.iconColor,\n        styles.icon,\n        iconClassName,\n        disabled && [classNames.isDisabled, styles.iconDisabled],\n      ],\n      iconColor: styles.iconColor,\n      checkmarkIcon: [classNames.checkmarkIcon, knownIcon && styles.checkmarkIcon, styles.icon, iconClassName],\n      subMenuIcon: [\n        classNames.subMenuIcon,\n        styles.subMenuIcon,\n        subMenuClassName,\n        expanded && { color: theme.palette.neutralPrimary },\n        disabled && [styles.iconDisabled],\n      ],\n      label: [classNames.label, styles.label],\n      secondaryText: [classNames.secondaryText, styles.secondaryText],\n      splitContainer: [\n        styles.splitButtonFlexContainer,\n        !disabled &&\n          !checked && [\n            {\n              selectors: {\n                [`.${IsFocusVisibleClassName} &:focus, .${IsFocusVisibleClassName} &:focus:hover`]: styles.rootFocused,\n              },\n            },\n          ],\n      ],\n      screenReaderText: [\n        classNames.screenReaderText,\n        styles.screenReaderText,\n        hiddenContentStyle,\n        { visibility: 'hidden' },\n      ],\n    });\n  },\n);\n\n/**\n * Wrapper function for generating ContextualMenuItem classNames which adheres to\n * the getStyles API, but invokes memoized className generator function with\n * primitive values.\n *\n * @param props the ContextualMenuItem style props used to generate its styles.\n */\nexport const getItemStyles = (props: IContextualMenuItemStyleProps): IContextualMenuItemStyles => {\n  const {\n    theme,\n    disabled,\n    expanded,\n    checked,\n    isAnchorLink,\n    knownIcon,\n    itemClassName,\n    dividerClassName,\n    iconClassName,\n    subMenuClassName,\n    primaryDisabled,\n    className,\n  } = props;\n\n  // eslint-disable-next-line deprecation/deprecation\n  return getItemClassNames(\n    theme,\n    disabled,\n    expanded,\n    checked,\n    isAnchorLink,\n    knownIcon,\n    itemClassName,\n    dividerClassName,\n    iconClassName,\n    subMenuClassName,\n    primaryDisabled,\n    className,\n  );\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}