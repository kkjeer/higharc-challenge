{"ast":null,"code":"import { concatStyleSets, HighContrastSelector } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\nvar DEFAULT_BUTTON_HEIGHT = '40px';\nvar DEFAULT_PADDING = '0 4px';\nexport var getStyles = memoizeFunction(function (theme, customStyles) {\n  var _a, _b, _c;\n\n  var baseButtonStyles = getBaseButtonStyles(theme);\n  var actionButtonStyles = {\n    root: {\n      padding: DEFAULT_PADDING,\n      height: DEFAULT_BUTTON_HEIGHT,\n      color: theme.palette.neutralPrimary,\n      backgroundColor: 'transparent',\n      border: '1px solid transparent',\n      selectors: (_a = {}, _a[HighContrastSelector] = {\n        borderColor: 'Window'\n      }, _a)\n    },\n    rootHovered: {\n      color: theme.palette.themePrimary,\n      selectors: (_b = {}, _b[HighContrastSelector] = {\n        color: 'Highlight'\n      }, _b)\n    },\n    iconHovered: {\n      color: theme.palette.themePrimary\n    },\n    rootPressed: {\n      color: theme.palette.black\n    },\n    rootExpanded: {\n      color: theme.palette.themePrimary\n    },\n    iconPressed: {\n      color: theme.palette.themeDarker\n    },\n    rootDisabled: {\n      color: theme.palette.neutralTertiary,\n      backgroundColor: 'transparent',\n      borderColor: 'transparent',\n      selectors: (_c = {}, _c[HighContrastSelector] = {\n        color: 'GrayText'\n      }, _c)\n    },\n    rootChecked: {\n      color: theme.palette.black\n    },\n    iconChecked: {\n      color: theme.palette.themeDarker\n    },\n    flexContainer: {\n      justifyContent: 'flex-start'\n    },\n    icon: {\n      color: theme.palette.themeDarkAlt\n    },\n    iconDisabled: {\n      color: 'inherit'\n    },\n    menuIcon: {\n      color: theme.palette.neutralSecondary\n    },\n    textContainer: {\n      flexGrow: 0\n    }\n  };\n  return concatStyleSets(baseButtonStyles, actionButtonStyles, customStyles);\n});","map":{"version":3,"sources":["components/Button/ActionButton/ActionButton.styles.ts"],"names":[],"mappings":"AAAA,SAAS,eAAT,EAA0B,oBAA1B,QAAsD,kBAAtD;AACA,SAAS,eAAT,QAAgC,oBAAhC;AACA,SAAS,SAAS,IAAI,mBAAtB,QAAiD,sBAAjD;AAIA,IAAM,qBAAqB,GAAG,MAA9B;AACA,IAAM,eAAe,GAAG,OAAxB;AAEA,OAAO,IAAM,SAAS,GAAG,eAAe,CACtC,UAAC,KAAD,EAAgB,YAAhB,EAA4C;;;EAC1C,IAAM,gBAAgB,GAAkB,mBAAmB,CAAC,KAAD,CAA3D;EACA,IAAM,kBAAkB,GAAkB;IACxC,IAAI,EAAE;MACJ,OAAO,EAAE,eADL;MAEJ,MAAM,EAAE,qBAFJ;MAGJ,KAAK,EAAE,KAAK,CAAC,OAAN,CAAc,cAHjB;MAIJ,eAAe,EAAE,aAJb;MAKJ,MAAM,EAAE,uBALJ;MAMJ,SAAS,GAAA,EAAA,GAAA,EAAA,EACP,EAAA,CAAC,oBAAD,CAAA,GAAwB;QACtB,WAAW,EAAE;MADS,CADjB,EAIR,EAJQ;IANL,CADkC;IAcxC,WAAW,EAAE;MACX,KAAK,EAAE,KAAK,CAAC,OAAN,CAAc,YADV;MAEX,SAAS,GAAA,EAAA,GAAA,EAAA,EACP,EAAA,CAAC,oBAAD,CAAA,GAAwB;QACtB,KAAK,EAAE;MADe,CADjB,EAIR,EAJQ;IAFE,CAd2B;IAuBxC,WAAW,EAAE;MACX,KAAK,EAAE,KAAK,CAAC,OAAN,CAAc;IADV,CAvB2B;IA2BxC,WAAW,EAAE;MACX,KAAK,EAAE,KAAK,CAAC,OAAN,CAAc;IADV,CA3B2B;IA+BxC,YAAY,EAAE;MACZ,KAAK,EAAE,KAAK,CAAC,OAAN,CAAc;IADT,CA/B0B;IAmCxC,WAAW,EAAE;MACX,KAAK,EAAE,KAAK,CAAC,OAAN,CAAc;IADV,CAnC2B;IAuCxC,YAAY,EAAE;MACZ,KAAK,EAAE,KAAK,CAAC,OAAN,CAAc,eADT;MAEZ,eAAe,EAAE,aAFL;MAGZ,WAAW,EAAE,aAHD;MAIZ,SAAS,GAAA,EAAA,GAAA,EAAA,EACP,EAAA,CAAC,oBAAD,CAAA,GAAwB;QACtB,KAAK,EAAE;MADe,CADjB,EAIR,EAJQ;IAJG,CAvC0B;IAkDxC,WAAW,EAAE;MACX,KAAK,EAAE,KAAK,CAAC,OAAN,CAAc;IADV,CAlD2B;IAsDxC,WAAW,EAAE;MACX,KAAK,EAAE,KAAK,CAAC,OAAN,CAAc;IADV,CAtD2B;IA0DxC,aAAa,EAAE;MACb,cAAc,EAAE;IADH,CA1DyB;IA8DxC,IAAI,EAAE;MACJ,KAAK,EAAE,KAAK,CAAC,OAAN,CAAc;IADjB,CA9DkC;IAkExC,YAAY,EAAE;MACZ,KAAK,EAAE;IADK,CAlE0B;IAsExC,QAAQ,EAAE;MACR,KAAK,EAAE,KAAK,CAAC,OAAN,CAAc;IADb,CAtE8B;IA0ExC,aAAa,EAAE;MACb,QAAQ,EAAE;IADG;EA1EyB,CAA1C;EA+EA,OAAO,eAAe,CAAC,gBAAD,EAAmB,kBAAnB,EAAuC,YAAvC,CAAtB;AACD,CAnFqC,CAAjC","sourcesContent":["import { concatStyleSets, HighContrastSelector } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\nimport type { IButtonStyles } from '../Button.types';\nimport type { ITheme } from '../../../Styling';\n\nconst DEFAULT_BUTTON_HEIGHT = '40px';\nconst DEFAULT_PADDING = '0 4px';\n\nexport const getStyles = memoizeFunction(\n  (theme: ITheme, customStyles?: IButtonStyles): IButtonStyles => {\n    const baseButtonStyles: IButtonStyles = getBaseButtonStyles(theme);\n    const actionButtonStyles: IButtonStyles = {\n      root: {\n        padding: DEFAULT_PADDING,\n        height: DEFAULT_BUTTON_HEIGHT,\n        color: theme.palette.neutralPrimary,\n        backgroundColor: 'transparent',\n        border: '1px solid transparent',\n        selectors: {\n          [HighContrastSelector]: {\n            borderColor: 'Window',\n          },\n        },\n      },\n\n      rootHovered: {\n        color: theme.palette.themePrimary,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'Highlight',\n          },\n        },\n      },\n\n      iconHovered: {\n        color: theme.palette.themePrimary,\n      },\n\n      rootPressed: {\n        color: theme.palette.black,\n      },\n\n      rootExpanded: {\n        color: theme.palette.themePrimary,\n      },\n\n      iconPressed: {\n        color: theme.palette.themeDarker,\n      },\n\n      rootDisabled: {\n        color: theme.palette.neutralTertiary,\n        backgroundColor: 'transparent',\n        borderColor: 'transparent',\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'GrayText',\n          },\n        },\n      },\n\n      rootChecked: {\n        color: theme.palette.black,\n      },\n\n      iconChecked: {\n        color: theme.palette.themeDarker,\n      },\n\n      flexContainer: {\n        justifyContent: 'flex-start',\n      },\n\n      icon: {\n        color: theme.palette.themeDarkAlt,\n      },\n\n      iconDisabled: {\n        color: 'inherit',\n      },\n\n      menuIcon: {\n        color: theme.palette.neutralSecondary,\n      },\n\n      textContainer: {\n        flexGrow: 0,\n      },\n    };\n\n    return concatStyleSets(baseButtonStyles, actionButtonStyles, customStyles)!;\n  },\n);\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}