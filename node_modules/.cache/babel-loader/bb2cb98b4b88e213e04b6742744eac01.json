{"ast":null,"code":"import { concatStyleSets, FontWeights } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\nimport { getStyles as getSplitButtonStyles } from '../SplitButton/SplitButton.styles';\nimport { primaryStyles, standardStyles } from '../ButtonThemes';\nvar DEFAULT_BUTTON_HEIGHT = '32px';\nvar DEFAULT_BUTTON_MIN_WIDTH = '80px';\nexport var getStyles = memoizeFunction(function (theme, customStyles, primary) {\n  var baseButtonStyles = getBaseButtonStyles(theme);\n  var splitButtonStyles = getSplitButtonStyles(theme);\n  var defaultButtonStyles = {\n    root: {\n      minWidth: DEFAULT_BUTTON_MIN_WIDTH,\n      height: DEFAULT_BUTTON_HEIGHT\n    },\n    label: {\n      fontWeight: FontWeights.semibold\n    }\n  };\n  return concatStyleSets(baseButtonStyles, defaultButtonStyles, primary ? primaryStyles(theme) : standardStyles(theme), splitButtonStyles, customStyles);\n});","map":{"version":3,"sources":["components/Button/DefaultButton/DefaultButton.styles.ts"],"names":[],"mappings":"AAAA,SAAS,eAAT,EAA0B,WAA1B,QAA6C,kBAA7C;AACA,SAAS,eAAT,QAAgC,oBAAhC;AACA,SAAS,SAAS,IAAI,mBAAtB,QAAiD,sBAAjD;AACA,SAAS,SAAS,IAAI,oBAAtB,QAAkD,mCAAlD;AAEA,SAAS,aAAT,EAAwB,cAAxB,QAA8C,iBAA9C;AAIA,IAAM,qBAAqB,GAAG,MAA9B;AACA,IAAM,wBAAwB,GAAG,MAAjC;AAEA,OAAO,IAAM,SAAS,GAAG,eAAe,CACtC,UAAC,KAAD,EAAgB,YAAhB,EAA8C,OAA9C,EAA+D;EAC7D,IAAM,gBAAgB,GAAkB,mBAAmB,CAAC,KAAD,CAA3D;EACA,IAAM,iBAAiB,GAAkB,oBAAoB,CAAC,KAAD,CAA7D;EACA,IAAM,mBAAmB,GAAkB;IACzC,IAAI,EAAE;MACJ,QAAQ,EAAE,wBADN;MAEJ,MAAM,EAAE;IAFJ,CADmC;IAKzC,KAAK,EAAE;MACL,UAAU,EAAE,WAAW,CAAC;IADnB;EALkC,CAA3C;EAUA,OAAO,eAAe,CACpB,gBADoB,EAEpB,mBAFoB,EAGpB,OAAO,GAAG,aAAa,CAAC,KAAD,CAAhB,GAA0B,cAAc,CAAC,KAAD,CAH3B,EAIpB,iBAJoB,EAKpB,YALoB,CAAtB;AAOD,CArBqC,CAAjC","sourcesContent":["import { concatStyleSets, FontWeights } from '../../../Styling';\nimport { memoizeFunction } from '../../../Utilities';\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\nimport { getStyles as getSplitButtonStyles } from '../SplitButton/SplitButton.styles';\n\nimport { primaryStyles, standardStyles } from '../ButtonThemes';\nimport type { IButtonStyles } from '../Button.types';\nimport type { ITheme } from '../../../Styling';\n\nconst DEFAULT_BUTTON_HEIGHT = '32px';\nconst DEFAULT_BUTTON_MIN_WIDTH = '80px';\n\nexport const getStyles = memoizeFunction(\n  (theme: ITheme, customStyles?: IButtonStyles, primary?: boolean): IButtonStyles => {\n    const baseButtonStyles: IButtonStyles = getBaseButtonStyles(theme);\n    const splitButtonStyles: IButtonStyles = getSplitButtonStyles(theme);\n    const defaultButtonStyles: IButtonStyles = {\n      root: {\n        minWidth: DEFAULT_BUTTON_MIN_WIDTH,\n        height: DEFAULT_BUTTON_HEIGHT,\n      },\n      label: {\n        fontWeight: FontWeights.semibold,\n      },\n    };\n\n    return concatStyleSets(\n      baseButtonStyles,\n      defaultButtonStyles,\n      primary ? primaryStyles(theme) : standardStyles(theme),\n      splitButtonStyles,\n      customStyles,\n    )!;\n  },\n);\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}