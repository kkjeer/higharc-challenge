{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Fabric } from '../../Fabric';\nimport { classNamesFunction, setPortalAttribute, setVirtualParent } from '../../Utilities';\nimport { registerLayer, getDefaultTarget, unregisterLayer, getLayerHost, createDefaultLayerHost } from './Layer.notification';\nimport { useIsomorphicLayoutEffect, useMergedRefs, useWarnings } from '@fluentui/react-hooks';\nimport { useDocument } from '../../WindowProvider';\nvar getClassNames = classNamesFunction();\nexport var LayerBase = React.forwardRef(function (props, ref) {\n  var rootRef = React.useRef(null);\n  var mergedRef = useMergedRefs(rootRef, ref);\n  var layerRef = React.useRef(); // Tracks if the layer mount events need to be raised.\n  // Required to allow the DOM to render after the layer element is added.\n\n  var _a = React.useState(false),\n      needRaiseLayerMount = _a[0],\n      setNeedRaiseLayerMount = _a[1];\n\n  var doc = useDocument();\n  var eventBubblingEnabled = props.eventBubblingEnabled,\n      styles = props.styles,\n      theme = props.theme,\n      className = props.className,\n      children = props.children,\n      hostId = props.hostId,\n      _b = props.onLayerDidMount,\n      onLayerDidMount = _b === void 0 ? function () {\n    return undefined;\n  } : _b,\n      // eslint-disable-next-line deprecation/deprecation\n  _c = props.onLayerMounted,\n      // eslint-disable-next-line deprecation/deprecation\n  onLayerMounted = _c === void 0 ? function () {\n    return undefined;\n  } : _c,\n      onLayerWillUnmount = props.onLayerWillUnmount,\n      insertFirst = props.insertFirst;\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className,\n    isNotHost: !hostId\n  }); // Returns the user provided hostId props element, the default target selector,\n  // or undefined if document doesn't exist.\n\n  var getHost = function () {\n    var _a, _b;\n\n    if (hostId) {\n      var layerHost = getLayerHost(hostId);\n\n      if (layerHost) {\n        return (_a = layerHost.rootRef.current) !== null && _a !== void 0 ? _a : null;\n      }\n\n      return (_b = doc === null || doc === void 0 ? void 0 : doc.getElementById(hostId)) !== null && _b !== void 0 ? _b : null;\n    } else {\n      var defaultHostSelector = getDefaultTarget(); // Find the host.\n\n      var host = defaultHostSelector ? doc === null || doc === void 0 ? void 0 : doc.querySelector(defaultHostSelector) : null; // If no host is available, create a container for injecting layers in.\n      // Having a container scopes layout computation.\n\n      if (!host && doc) {\n        host = createDefaultLayerHost(doc);\n      }\n\n      return host;\n    }\n  }; // Removes the current layer element's parentNode and runs onLayerWillUnmount prop if provided.\n\n\n  var removeLayerElement = function () {\n    onLayerWillUnmount === null || onLayerWillUnmount === void 0 ? void 0 : onLayerWillUnmount();\n    var elem = layerRef.current; // Clear ref before removing from the DOM\n\n    layerRef.current = undefined;\n\n    if (elem && elem.parentNode) {\n      elem.parentNode.removeChild(elem);\n    }\n  }; // If a doc or host exists, it will remove and update layer parentNodes.\n\n\n  var createLayerElement = function () {\n    var _a, _b;\n\n    var host = getHost();\n\n    if (!host) {\n      return;\n    } // Remove and re-create any previous existing layer elements.\n\n\n    removeLayerElement();\n    var el = (_b = (_a = host.ownerDocument) !== null && _a !== void 0 ? _a : doc) === null || _b === void 0 ? void 0 : _b.createElement('div');\n\n    if (el) {\n      el.className = classNames.root;\n      setPortalAttribute(el);\n      setVirtualParent(el, rootRef.current);\n      insertFirst ? host.insertBefore(el, host.firstChild) : host.appendChild(el);\n      layerRef.current = el;\n      setNeedRaiseLayerMount(true);\n    }\n  };\n\n  useIsomorphicLayoutEffect(function () {\n    createLayerElement(); // Check if the user provided a hostId prop and register the layer with the ID.\n\n    if (hostId) {\n      registerLayer(hostId, createLayerElement);\n    }\n\n    return function () {\n      removeLayerElement();\n\n      if (hostId) {\n        unregisterLayer(hostId, createLayerElement);\n      }\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps -- should run if the hostId updates.\n  }, [hostId]);\n  React.useEffect(function () {\n    if (layerRef.current && needRaiseLayerMount) {\n      onLayerMounted === null || onLayerMounted === void 0 ? void 0 : onLayerMounted();\n      onLayerDidMount === null || onLayerDidMount === void 0 ? void 0 : onLayerDidMount();\n      setNeedRaiseLayerMount(false);\n    }\n  }, [needRaiseLayerMount, onLayerMounted, onLayerDidMount]);\n  useDebugWarnings(props);\n  return React.createElement(\"span\", {\n    className: \"ms-layer\",\n    ref: mergedRef\n  }, layerRef.current && ReactDOM.createPortal(\n  /* eslint-disable deprecation/deprecation */\n  React.createElement(Fabric, __assign({}, !eventBubblingEnabled && getFilteredEvents(), {\n    className: classNames.content\n  }), children),\n  /* eslint-enable deprecation/deprecation */\n  layerRef.current));\n});\nLayerBase.displayName = 'LayerBase';\nvar filteredEventProps;\n\nvar onFilterEvent = function (ev) {\n  // We should just be able to check ev.bubble here and only stop events that are bubbling up. However, even though\n  // mouseenter and mouseleave do NOT bubble up, they are showing up as bubbling. Therefore we stop events based on\n  // event name rather than ev.bubble.\n  if (ev.eventPhase === Event.BUBBLING_PHASE && ev.type !== 'mouseenter' && ev.type !== 'mouseleave' && ev.type !== 'touchstart' && ev.type !== 'touchend') {\n    ev.stopPropagation();\n  }\n};\n\nfunction getFilteredEvents() {\n  if (!filteredEventProps) {\n    filteredEventProps = {};\n    ['onClick', 'onContextMenu', 'onDoubleClick', 'onDrag', 'onDragEnd', 'onDragEnter', 'onDragExit', 'onDragLeave', 'onDragOver', 'onDragStart', 'onDrop', 'onMouseDown', 'onMouseEnter', 'onMouseLeave', 'onMouseMove', 'onMouseOver', 'onMouseOut', 'onMouseUp', 'onTouchMove', 'onTouchStart', 'onTouchCancel', 'onTouchEnd', 'onKeyDown', 'onKeyPress', 'onKeyUp', 'onFocus', 'onBlur', 'onChange', 'onInput', 'onInvalid', 'onSubmit'].forEach(function (name) {\n      return filteredEventProps[name] = onFilterEvent;\n    });\n  }\n\n  return filteredEventProps;\n}\n\nfunction useDebugWarnings(props) {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n    useWarnings({\n      name: 'Layer',\n      props: props,\n      deprecations: {\n        onLayerMounted: 'onLayerDidMount'\n      }\n    });\n  }\n}","map":{"version":3,"sources":["components/Layer/Layer.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Fabric } from '../../Fabric';\nimport { classNamesFunction, setPortalAttribute, setVirtualParent } from '../../Utilities';\nimport {\n  registerLayer,\n  getDefaultTarget,\n  unregisterLayer,\n  getLayerHost,\n  createDefaultLayerHost,\n} from './Layer.notification';\nimport { useIsomorphicLayoutEffect, useMergedRefs, useWarnings } from '@fluentui/react-hooks';\nimport { useDocument } from '../../WindowProvider';\nimport type { ILayerProps, ILayerStyleProps, ILayerStyles } from './Layer.types';\n\nconst getClassNames = classNamesFunction<ILayerStyleProps, ILayerStyles>();\n\nexport const LayerBase: React.FunctionComponent<ILayerProps> = React.forwardRef<HTMLDivElement, ILayerProps>(\n  (props, ref) => {\n    const rootRef = React.useRef<HTMLSpanElement>(null);\n    const mergedRef = useMergedRefs(rootRef, ref);\n    const layerRef = React.useRef<HTMLDivElement>();\n\n    // Tracks if the layer mount events need to be raised.\n    // Required to allow the DOM to render after the layer element is added.\n    const [needRaiseLayerMount, setNeedRaiseLayerMount] = React.useState(false);\n\n    const doc = useDocument();\n\n    const {\n      eventBubblingEnabled,\n      styles,\n      theme,\n      className,\n      children,\n      hostId,\n      onLayerDidMount = () => undefined,\n      // eslint-disable-next-line deprecation/deprecation\n      onLayerMounted = () => undefined,\n      onLayerWillUnmount,\n      insertFirst,\n    } = props;\n\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      isNotHost: !hostId,\n    });\n\n    // Returns the user provided hostId props element, the default target selector,\n    // or undefined if document doesn't exist.\n    const getHost = (): Node | null => {\n      if (hostId) {\n        const layerHost = getLayerHost(hostId);\n\n        if (layerHost) {\n          return layerHost.rootRef.current ?? null;\n        }\n\n        return doc?.getElementById(hostId) ?? null;\n      } else {\n        const defaultHostSelector = getDefaultTarget();\n\n        // Find the host.\n        let host: Node | null = defaultHostSelector ? (doc?.querySelector(defaultHostSelector) as Node) : null;\n\n        // If no host is available, create a container for injecting layers in.\n        // Having a container scopes layout computation.\n        if (!host && doc) {\n          host = createDefaultLayerHost(doc);\n        }\n\n        return host;\n      }\n    };\n\n    // Removes the current layer element's parentNode and runs onLayerWillUnmount prop if provided.\n    const removeLayerElement = (): void => {\n      onLayerWillUnmount?.();\n\n      const elem = layerRef.current;\n\n      // Clear ref before removing from the DOM\n      layerRef.current = undefined;\n\n      if (elem && elem.parentNode) {\n        elem.parentNode.removeChild(elem);\n      }\n    };\n\n    // If a doc or host exists, it will remove and update layer parentNodes.\n    const createLayerElement = () => {\n      const host = getHost();\n\n      if (!host) {\n        return;\n      }\n\n      // Remove and re-create any previous existing layer elements.\n      removeLayerElement();\n\n      const el = (host.ownerDocument ?? doc)?.createElement('div');\n\n      if (el) {\n        el.className = classNames.root!;\n        setPortalAttribute(el);\n        setVirtualParent(el, rootRef.current!);\n\n        insertFirst ? host.insertBefore(el, host.firstChild) : host.appendChild(el);\n        layerRef.current = el;\n        setNeedRaiseLayerMount(true);\n      }\n    };\n\n    useIsomorphicLayoutEffect(() => {\n      createLayerElement();\n      // Check if the user provided a hostId prop and register the layer with the ID.\n      if (hostId) {\n        registerLayer(hostId, createLayerElement);\n      }\n\n      return () => {\n        removeLayerElement();\n\n        if (hostId) {\n          unregisterLayer(hostId, createLayerElement);\n        }\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps -- should run if the hostId updates.\n    }, [hostId]);\n\n    React.useEffect(() => {\n      if (layerRef.current && needRaiseLayerMount) {\n        onLayerMounted?.();\n        onLayerDidMount?.();\n        setNeedRaiseLayerMount(false);\n      }\n    }, [needRaiseLayerMount, onLayerMounted, onLayerDidMount]);\n\n    useDebugWarnings(props);\n\n    return (\n      <span className=\"ms-layer\" ref={mergedRef}>\n        {layerRef.current &&\n          ReactDOM.createPortal(\n            /* eslint-disable deprecation/deprecation */\n            <Fabric {...(!eventBubblingEnabled && getFilteredEvents())} className={classNames.content}>\n              {children}\n            </Fabric>,\n            /* eslint-enable deprecation/deprecation */\n            layerRef.current,\n          )}\n      </span>\n    );\n  },\n);\nLayerBase.displayName = 'LayerBase';\n\nlet filteredEventProps: { [key: string]: (ev: React.SyntheticEvent<HTMLElement, Event>) => void };\n\nconst onFilterEvent = (ev: React.SyntheticEvent<HTMLElement>): void => {\n  // We should just be able to check ev.bubble here and only stop events that are bubbling up. However, even though\n  // mouseenter and mouseleave do NOT bubble up, they are showing up as bubbling. Therefore we stop events based on\n  // event name rather than ev.bubble.\n  if (\n    ev.eventPhase === Event.BUBBLING_PHASE &&\n    ev.type !== 'mouseenter' &&\n    ev.type !== 'mouseleave' &&\n    ev.type !== 'touchstart' &&\n    ev.type !== 'touchend'\n  ) {\n    ev.stopPropagation();\n  }\n};\n\nfunction getFilteredEvents() {\n  if (!filteredEventProps) {\n    filteredEventProps = {} as any;\n    [\n      'onClick',\n      'onContextMenu',\n      'onDoubleClick',\n      'onDrag',\n      'onDragEnd',\n      'onDragEnter',\n      'onDragExit',\n      'onDragLeave',\n      'onDragOver',\n      'onDragStart',\n      'onDrop',\n      'onMouseDown',\n      'onMouseEnter',\n      'onMouseLeave',\n      'onMouseMove',\n      'onMouseOver',\n      'onMouseOut',\n      'onMouseUp',\n      'onTouchMove',\n      'onTouchStart',\n      'onTouchCancel',\n      'onTouchEnd',\n      'onKeyDown',\n      'onKeyPress',\n      'onKeyUp',\n      'onFocus',\n      'onBlur',\n      'onChange',\n      'onInput',\n      'onInvalid',\n      'onSubmit',\n    ].forEach(name => (filteredEventProps[name] = onFilterEvent));\n  }\n  return filteredEventProps;\n}\n\nfunction useDebugWarnings(props: ILayerProps) {\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- build-time conditional\n    useWarnings({\n      name: 'Layer',\n      props,\n      deprecations: { onLayerMounted: 'onLayerDidMount' },\n    });\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}