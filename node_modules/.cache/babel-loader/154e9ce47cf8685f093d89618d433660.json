{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { classNamesFunction, initializeComponentRef, KeyCodes } from '../../../Utilities';\nimport { CardCallout } from '../CardCallout/CardCallout';\nvar getClassNames = classNamesFunction();\n\nvar PlainCardBase =\n/** @class */\nfunction (_super) {\n  __extends(PlainCardBase, _super);\n\n  function PlainCardBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._onKeyDown = function (ev) {\n      // eslint-disable-next-line deprecation/deprecation\n      if (ev.which === KeyCodes.escape) {\n        _this.props.onLeave && _this.props.onLeave(ev);\n      }\n    };\n\n    initializeComponentRef(_this);\n    return _this;\n  }\n\n  PlainCardBase.prototype.render = function () {\n    var _a = this.props,\n        styles = _a.styles,\n        theme = _a.theme,\n        className = _a.className;\n    this._classNames = getClassNames(styles, {\n      theme: theme,\n      className: className\n    });\n    var content = React.createElement(\"div\", {\n      onMouseEnter: this.props.onEnter,\n      onMouseLeave: this.props.onLeave,\n      onKeyDown: this._onKeyDown\n    }, this.props.onRenderPlainCard(this.props.renderData));\n    return React.createElement(CardCallout, __assign({}, this.props, {\n      content: content,\n      className: this._classNames.root\n    }));\n  };\n\n  return PlainCardBase;\n}(React.Component);\n\nexport { PlainCardBase };","map":{"version":3,"sources":["components/HoverCard/PlainCard/PlainCard.base.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAEA,SAAS,kBAAT,EAA6B,sBAA7B,EAAqD,QAArD,QAAqE,oBAArE;AACA,SAAS,WAAT,QAA4B,4BAA5B;AAGA,IAAM,aAAa,GAAG,kBAAkB,EAAxC;;AAEA,IAAA,aAAA;AAAA;AAAA,UAAA,MAAA,EAAA;EAAmC,SAAA,CAAA,aAAA,EAAA,MAAA,CAAA;;EAGjC,SAAA,aAAA,CAAY,KAAZ,EAAkC;IAAlC,IAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAN,KAAY,IADd;;IAuBQ,KAAA,CAAA,UAAA,GAAa,UAAC,EAAD,EAAqC;MACxD;MACA,IAAI,EAAE,CAAC,KAAH,KAAa,QAAQ,CAAC,MAA1B,EAAkC;QAChC,KAAI,CAAC,KAAL,CAAW,OAAX,IAAsB,KAAI,CAAC,KAAL,CAAW,OAAX,CAAmB,EAAnB,CAAtB;MACD;IACF,CALO;;IApBN,sBAAsB,CAAC,KAAD,CAAtB;;EACD;;EAEM,aAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;IACQ,IAAA,EAAA,GAA+B,KAAK,KAApC;IAAA,IAAE,MAAM,GAAA,EAAA,CAAA,MAAR;IAAA,IAAU,KAAK,GAAA,EAAA,CAAA,KAAf;IAAA,IAAiB,SAAS,GAAA,EAAA,CAAA,SAA1B;IAEN,KAAK,WAAL,GAAmB,aAAa,CAAC,MAAD,EAAU;MACxC,KAAK,EAAE,KADiC;MAExC,SAAS,EAAA;IAF+B,CAAV,CAAhC;IAKA,IAAM,OAAO,GACX,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;MAAK,YAAY,EAAE,KAAK,KAAL,CAAW,OAA9B;MAAuC,YAAY,EAAE,KAAK,KAAL,CAAW,OAAhE;MAAyE,SAAS,EAAE,KAAK;IAAzF,CAAA,EACG,KAAK,KAAL,CAAW,iBAAX,CAA8B,KAAK,KAAL,CAAW,UAAzC,CADH,CADF;IAMA,OAAO,KAAA,CAAA,aAAA,CAAC,WAAD,EAAY,QAAA,CAAA,EAAA,EAAK,KAAK,KAAV,EAAe;MAAE,OAAO,EAAE,OAAX;MAAoB,SAAS,EAAE,KAAK,WAAL,CAAiB;IAAhD,CAAf,CAAZ,CAAP;EACD,CAfM;;EAuBT,OAAA,aAAA;AAAC,CAhCD,CAAmC,KAAK,CAAC,SAAzC,CAAA","sourcesContent":["import * as React from 'react';\n\nimport { classNamesFunction, initializeComponentRef, KeyCodes } from '../../../Utilities';\nimport { CardCallout } from '../CardCallout/CardCallout';\nimport type { IPlainCardProps, IPlainCardStyles, IPlainCardStyleProps } from './PlainCard.types';\n\nconst getClassNames = classNamesFunction<IPlainCardStyleProps, IPlainCardStyles>();\n\nexport class PlainCardBase extends React.Component<IPlainCardProps, {}> {\n  private _classNames: { [key in keyof IPlainCardStyles]: string };\n\n  constructor(props: IPlainCardProps) {\n    super(props);\n\n    initializeComponentRef(this);\n  }\n\n  public render(): JSX.Element {\n    const { styles, theme, className } = this.props;\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n    });\n\n    const content: JSX.Element = (\n      <div onMouseEnter={this.props.onEnter} onMouseLeave={this.props.onLeave} onKeyDown={this._onKeyDown}>\n        {this.props.onRenderPlainCard!(this.props.renderData)}\n      </div>\n    );\n\n    return <CardCallout {...this.props} content={content} className={this._classNames.root} />;\n  }\n\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLElement>): void => {\n    // eslint-disable-next-line deprecation/deprecation\n    if (ev.which === KeyCodes.escape) {\n      this.props.onLeave && this.props.onLeave(ev);\n    }\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}