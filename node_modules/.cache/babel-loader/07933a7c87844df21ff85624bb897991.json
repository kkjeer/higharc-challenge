{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { parseGap, parsePadding } from './StackUtils';\nimport { getGlobalClassNames } from '../../Styling';\nvar nameMap = {\n  start: 'flex-start',\n  end: 'flex-end'\n};\nvar GlobalClassNames = {\n  root: 'ms-Stack',\n  inner: 'ms-Stack-inner'\n};\nexport var styles = function (props, theme, tokens) {\n  var _a, _b, _c, _d, _e, _f, _g;\n\n  var verticalFill = props.verticalFill,\n      horizontal = props.horizontal,\n      reversed = props.reversed,\n      grow = props.grow,\n      wrap = props.wrap,\n      horizontalAlign = props.horizontalAlign,\n      verticalAlign = props.verticalAlign,\n      disableShrink = props.disableShrink,\n      className = props.className;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  /* eslint-disable deprecation/deprecation */\n\n  var childrenGap = tokens && tokens.childrenGap ? tokens.childrenGap : props.gap;\n  var maxHeight = tokens && tokens.maxHeight ? tokens.maxHeight : props.maxHeight;\n  var maxWidth = tokens && tokens.maxWidth ? tokens.maxWidth : props.maxWidth;\n  var padding = tokens && tokens.padding ? tokens.padding : props.padding;\n  /* eslint-enable deprecation/deprecation */\n\n  var _h = parseGap(childrenGap, theme),\n      rowGap = _h.rowGap,\n      columnGap = _h.columnGap;\n\n  var horizontalMargin = \"\" + -0.5 * columnGap.value + columnGap.unit;\n  var verticalMargin = \"\" + -0.5 * rowGap.value + rowGap.unit; // styles to be applied to all direct children regardless of wrap or direction\n\n  var childStyles = {\n    textOverflow: 'ellipsis'\n  }; // selectors to be applied regardless of wrap or direction\n\n  var commonSelectors = {\n    // flexShrink styles are applied by the StackItem\n    '> *:not(.ms-StackItem)': {\n      flexShrink: disableShrink ? 0 : 1\n    }\n  };\n\n  if (wrap) {\n    return {\n      root: [classNames.root, {\n        flexWrap: 'wrap',\n        maxWidth: maxWidth,\n        maxHeight: maxHeight,\n        width: 'auto',\n        overflow: 'visible',\n        height: '100%'\n      }, horizontalAlign && (_a = {}, _a[horizontal ? 'justifyContent' : 'alignItems'] = nameMap[horizontalAlign] || horizontalAlign, _a), verticalAlign && (_b = {}, _b[horizontal ? 'alignItems' : 'justifyContent'] = nameMap[verticalAlign] || verticalAlign, _b), className, {\n        // not allowed to be overridden by className\n        // since this is necessary in order to prevent collapsing margins\n        display: 'flex'\n      }, horizontal && {\n        height: verticalFill ? '100%' : 'auto'\n      }],\n      inner: [classNames.inner, {\n        display: 'flex',\n        flexWrap: 'wrap',\n        marginLeft: horizontalMargin,\n        marginRight: horizontalMargin,\n        marginTop: verticalMargin,\n        marginBottom: verticalMargin,\n        overflow: 'visible',\n        boxSizing: 'border-box',\n        padding: parsePadding(padding, theme),\n        // avoid unnecessary calc() calls if horizontal gap is 0\n        width: columnGap.value === 0 ? '100%' : \"calc(100% + \" + columnGap.value + columnGap.unit + \")\",\n        maxWidth: '100vw',\n        selectors: __assign({\n          '> *': __assign({\n            margin: \"\" + 0.5 * rowGap.value + rowGap.unit + \" \" + 0.5 * columnGap.value + columnGap.unit\n          }, childStyles)\n        }, commonSelectors)\n      }, horizontalAlign && (_c = {}, _c[horizontal ? 'justifyContent' : 'alignItems'] = nameMap[horizontalAlign] || horizontalAlign, _c), verticalAlign && (_d = {}, _d[horizontal ? 'alignItems' : 'justifyContent'] = nameMap[verticalAlign] || verticalAlign, _d), horizontal && {\n        flexDirection: reversed ? 'row-reverse' : 'row',\n        // avoid unnecessary calc() calls if vertical gap is 0\n        height: rowGap.value === 0 ? '100%' : \"calc(100% + \" + rowGap.value + rowGap.unit + \")\",\n        selectors: {\n          '> *': {\n            maxWidth: columnGap.value === 0 ? '100%' : \"calc(100% - \" + columnGap.value + columnGap.unit + \")\"\n          }\n        }\n      }, !horizontal && {\n        flexDirection: reversed ? 'column-reverse' : 'column',\n        height: \"calc(100% + \" + rowGap.value + rowGap.unit + \")\",\n        selectors: {\n          '> *': {\n            maxHeight: rowGap.value === 0 ? '100%' : \"calc(100% - \" + rowGap.value + rowGap.unit + \")\"\n          }\n        }\n      }]\n    };\n  }\n\n  return {\n    root: [classNames.root, {\n      display: 'flex',\n      flexDirection: horizontal ? reversed ? 'row-reverse' : 'row' : reversed ? 'column-reverse' : 'column',\n      flexWrap: 'nowrap',\n      width: 'auto',\n      height: verticalFill ? '100%' : 'auto',\n      maxWidth: maxWidth,\n      maxHeight: maxHeight,\n      padding: parsePadding(padding, theme),\n      boxSizing: 'border-box',\n      selectors: __assign((_e = {\n        '> *': childStyles\n      }, _e[reversed ? '> *:not(:last-child)' : '> *:not(:first-child)'] = [horizontal && {\n        marginLeft: \"\" + columnGap.value + columnGap.unit\n      }, !horizontal && {\n        marginTop: \"\" + rowGap.value + rowGap.unit\n      }], _e), commonSelectors)\n    }, grow && {\n      flexGrow: grow === true ? 1 : grow\n    }, horizontalAlign && (_f = {}, _f[horizontal ? 'justifyContent' : 'alignItems'] = nameMap[horizontalAlign] || horizontalAlign, _f), verticalAlign && (_g = {}, _g[horizontal ? 'alignItems' : 'justifyContent'] = nameMap[verticalAlign] || verticalAlign, _g), className] // TODO: this cast may be hiding some potential issues with styling and name\n    //        lookups and should be removed\n\n  };\n};","map":{"version":3,"sources":["components/Stack/Stack.styles.ts"],"names":[],"mappings":";AAAA,SAAS,QAAT,EAAmB,YAAnB,QAAuC,cAAvC;AACA,SAAS,mBAAT,QAAoC,eAApC;AAGA,IAAM,OAAO,GAA8B;EACzC,KAAK,EAAE,YADkC;EAEzC,GAAG,EAAE;AAFoC,CAA3C;AAKA,IAAM,gBAAgB,GAAG;EACvB,IAAI,EAAE,UADiB;EAEvB,KAAK,EAAE;AAFgB,CAAzB;AAKA,OAAO,IAAM,MAAM,GAA8B,UAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,EAAqB;;;EAElE,IAAA,YAAY,GASV,KAAK,CATK,YAAZ;EAAA,IACA,UAAU,GAQR,KAAK,CARG,UADV;EAAA,IAEA,QAAQ,GAON,KAAK,CAPC,QAFR;EAAA,IAGA,IAAI,GAMF,KAAK,CANH,IAHJ;EAAA,IAIA,IAAI,GAKF,KAAK,CALH,IAJJ;EAAA,IAKA,eAAe,GAIb,KAAK,CAJQ,eALf;EAAA,IAMA,aAAa,GAGX,KAAK,CAHM,aANb;EAAA,IAOA,aAAa,GAEX,KAAK,CAFM,aAPb;EAAA,IAQA,SAAS,GACP,KAAK,CADE,SART;EAWF,IAAM,UAAU,GAAG,mBAAmB,CAAC,gBAAD,EAAmB,KAAnB,CAAtC;EAEA;;EACA,IAAM,WAAW,GAAG,MAAM,IAAI,MAAM,CAAC,WAAjB,GAA+B,MAAM,CAAC,WAAtC,GAAoD,KAAK,CAAC,GAA9E;EACA,IAAM,SAAS,GAAG,MAAM,IAAI,MAAM,CAAC,SAAjB,GAA6B,MAAM,CAAC,SAApC,GAAgD,KAAK,CAAC,SAAxE;EACA,IAAM,QAAQ,GAAG,MAAM,IAAI,MAAM,CAAC,QAAjB,GAA4B,MAAM,CAAC,QAAnC,GAA8C,KAAK,CAAC,QAArE;EACA,IAAM,OAAO,GAAG,MAAM,IAAI,MAAM,CAAC,OAAjB,GAA2B,MAAM,CAAC,OAAlC,GAA4C,KAAK,CAAC,OAAlE;EACA;;EAEM,IAAA,EAAA,GAAwB,QAAQ,CAAC,WAAD,EAAc,KAAd,CAAhC;EAAA,IAAE,MAAM,GAAA,EAAA,CAAA,MAAR;EAAA,IAAU,SAAS,GAAA,EAAA,CAAA,SAAnB;;EAEN,IAAM,gBAAgB,GAAG,KAAG,CAAC,GAAD,GAAO,SAAS,CAAC,KAApB,GAA4B,SAAS,CAAC,IAA/D;EACA,IAAM,cAAc,GAAG,KAAG,CAAC,GAAD,GAAO,MAAM,CAAC,KAAjB,GAAyB,MAAM,CAAC,IAAvD,CAzBoE,CA2BpE;;EACA,IAAM,WAAW,GAAG;IAClB,YAAY,EAAE;EADI,CAApB,CA5BoE,CAgCpE;;EACA,IAAM,eAAe,GAAG;IACtB;IACA,0BAA0B;MACxB,UAAU,EAAE,aAAa,GAAG,CAAH,GAAO;IADR;EAFJ,CAAxB;;EAOA,IAAI,IAAJ,EAAU;IACR,OAAO;MACL,IAAI,EAAE,CACJ,UAAU,CAAC,IADP,EAEJ;QACE,QAAQ,EAAE,MADZ;QAEE,QAAQ,EAAA,QAFV;QAGE,SAAS,EAAA,SAHX;QAIE,KAAK,EAAE,MAJT;QAKE,QAAQ,EAAE,SALZ;QAME,MAAM,EAAE;MANV,CAFI,EAUJ,eAAe,KAAA,EAAA,GAAA,EAAA,EACb,EAAA,CAAC,UAAU,GAAG,gBAAH,GAAsB,YAAjC,CAAA,GAAgD,OAAO,CAAC,eAAD,CAAP,IAA4B,eAD/D,EAEd,EAFc,CAVX,EAaJ,aAAa,KAAA,EAAA,GAAA,EAAA,EACX,EAAA,CAAC,UAAU,GAAG,YAAH,GAAkB,gBAA7B,CAAA,GAAgD,OAAO,CAAC,aAAD,CAAP,IAA0B,aAD/D,EAEZ,EAFY,CAbT,EAgBJ,SAhBI,EAiBJ;QACE;QACA;QACA,OAAO,EAAE;MAHX,CAjBI,EAsBJ,UAAU,IAAI;QACZ,MAAM,EAAE,YAAY,GAAG,MAAH,GAAY;MADpB,CAtBV,CADD;MA4BL,KAAK,EAAE,CACL,UAAU,CAAC,KADN,EAEL;QACE,OAAO,EAAE,MADX;QAEE,QAAQ,EAAE,MAFZ;QAGE,UAAU,EAAE,gBAHd;QAIE,WAAW,EAAE,gBAJf;QAKE,SAAS,EAAE,cALb;QAME,YAAY,EAAE,cANhB;QAOE,QAAQ,EAAE,SAPZ;QAQE,SAAS,EAAE,YARb;QASE,OAAO,EAAE,YAAY,CAAC,OAAD,EAAU,KAAV,CATvB;QAUE;QACA,KAAK,EAAE,SAAS,CAAC,KAAV,KAAoB,CAApB,GAAwB,MAAxB,GAAiC,iBAAe,SAAS,CAAC,KAAzB,GAAiC,SAAS,CAAC,IAA3C,GAA+C,GAXzF;QAYE,QAAQ,EAAE,OAZZ;QAcE,SAAS,EAAA,QAAA,CAAA;UACP,OAAK,QAAA,CAAA;YACH,MAAM,EAAE,KAAG,MAAM,MAAM,CAAC,KAAhB,GAAwB,MAAM,CAAC,IAA/B,GAAmC,GAAnC,GAAuC,MAAM,SAAS,CAAC,KAAvD,GAA+D,SAAS,CAAC;UAD9E,CAAA,EAGA,WAHA;QADE,CAAA,EAMJ,eANI;MAdX,CAFK,EAyBL,eAAe,KAAA,EAAA,GAAA,EAAA,EACb,EAAA,CAAC,UAAU,GAAG,gBAAH,GAAsB,YAAjC,CAAA,GAAgD,OAAO,CAAC,eAAD,CAAP,IAA4B,eAD/D,EAEd,EAFc,CAzBV,EA4BL,aAAa,KAAA,EAAA,GAAA,EAAA,EACX,EAAA,CAAC,UAAU,GAAG,YAAH,GAAkB,gBAA7B,CAAA,GAAgD,OAAO,CAAC,aAAD,CAAP,IAA0B,aAD/D,EAEZ,EAFY,CA5BR,EA+BL,UAAU,IAAI;QACZ,aAAa,EAAE,QAAQ,GAAG,aAAH,GAAmB,KAD9B;QAGZ;QACA,MAAM,EAAE,MAAM,CAAC,KAAP,KAAiB,CAAjB,GAAqB,MAArB,GAA8B,iBAAe,MAAM,CAAC,KAAtB,GAA8B,MAAM,CAAC,IAArC,GAAyC,GAJnE;QAMZ,SAAS,EAAE;UACT,OAAO;YACL,QAAQ,EAAE,SAAS,CAAC,KAAV,KAAoB,CAApB,GAAwB,MAAxB,GAAiC,iBAAe,SAAS,CAAC,KAAzB,GAAiC,SAAS,CAAC,IAA3C,GAA+C;UADrF;QADE;MANC,CA/BT,EA2CL,CAAC,UAAD,IAAe;QACb,aAAa,EAAE,QAAQ,GAAG,gBAAH,GAAsB,QADhC;QAEb,MAAM,EAAE,iBAAe,MAAM,CAAC,KAAtB,GAA8B,MAAM,CAAC,IAArC,GAAyC,GAFpC;QAIb,SAAS,EAAE;UACT,OAAO;YACL,SAAS,EAAE,MAAM,CAAC,KAAP,KAAiB,CAAjB,GAAqB,MAArB,GAA8B,iBAAe,MAAM,CAAC,KAAtB,GAA8B,MAAM,CAAC,IAArC,GAAyC;UAD7E;QADE;MAJE,CA3CV;IA5BF,CAAP;EAmFD;;EAED,OAAO;IACL,IAAI,EAAE,CACJ,UAAU,CAAC,IADP,EAEJ;MACE,OAAO,EAAE,MADX;MAEE,aAAa,EAAE,UAAU,GAAI,QAAQ,GAAG,aAAH,GAAmB,KAA/B,GAAwC,QAAQ,GAAG,gBAAH,GAAsB,QAFjG;MAGE,QAAQ,EAAE,QAHZ;MAIE,KAAK,EAAE,MAJT;MAKE,MAAM,EAAE,YAAY,GAAG,MAAH,GAAY,MALlC;MAME,QAAQ,EAAA,QANV;MAOE,SAAS,EAAA,SAPX;MAQE,OAAO,EAAE,YAAY,CAAC,OAAD,EAAU,KAAV,CARvB;MASE,SAAS,EAAE,YATb;MAWE,SAAS,EAAA,QAAA,EAAA,EAAA,GAAA;QACP,OAAO;MADA,CAAA,EACW,EAAA,CAIjB,QAAQ,GAAG,sBAAH,GAA4B,uBAJnB,CAAA,GAI6C,CAC7D,UAAU,IAAI;QACZ,UAAU,EAAE,KAAG,SAAS,CAAC,KAAb,GAAqB,SAAS,CAAC;MAD/B,CAD+C,EAI7D,CAAC,UAAD,IAAe;QACb,SAAS,EAAE,KAAG,MAAM,CAAC,KAAV,GAAkB,MAAM,CAAC;MADvB,CAJ8C,CALxD,EAYN,EAZM,GAcJ,eAdI;IAXX,CAFI,EA8BJ,IAAI,IAAI;MACN,QAAQ,EAAE,IAAI,KAAK,IAAT,GAAgB,CAAhB,GAAoB;IADxB,CA9BJ,EAiCJ,eAAe,KAAA,EAAA,GAAA,EAAA,EACb,EAAA,CAAC,UAAU,GAAG,gBAAH,GAAsB,YAAjC,CAAA,GAAgD,OAAO,CAAC,eAAD,CAAP,IAA4B,eAD/D,EAEd,EAFc,CAjCX,EAoCJ,aAAa,KAAA,EAAA,GAAA,EAAA,EACX,EAAA,CAAC,UAAU,GAAG,YAAH,GAAkB,gBAA7B,CAAA,GAAgD,OAAO,CAAC,aAAD,CAAP,IAA0B,aAD/D,EAEZ,EAFY,CApCT,EAuCJ,SAvCI,CADD,CA0CL;IACA;;EA3CK,CAAP;AA6CD,CA3KM","sourcesContent":["import { parseGap, parsePadding } from './StackUtils';\nimport { getGlobalClassNames } from '../../Styling';\nimport type { IStackComponent, IStackStyles, IStackStylesReturnType } from './Stack.types';\n\nconst nameMap: { [key: string]: string } = {\n  start: 'flex-start',\n  end: 'flex-end',\n};\n\nconst GlobalClassNames = {\n  root: 'ms-Stack',\n  inner: 'ms-Stack-inner',\n};\n\nexport const styles: IStackComponent['styles'] = (props, theme, tokens): IStackStylesReturnType => {\n  const {\n    verticalFill,\n    horizontal,\n    reversed,\n    grow,\n    wrap,\n    horizontalAlign,\n    verticalAlign,\n    disableShrink,\n    className,\n  } = props;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  /* eslint-disable deprecation/deprecation */\n  const childrenGap = tokens && tokens.childrenGap ? tokens.childrenGap : props.gap;\n  const maxHeight = tokens && tokens.maxHeight ? tokens.maxHeight : props.maxHeight;\n  const maxWidth = tokens && tokens.maxWidth ? tokens.maxWidth : props.maxWidth;\n  const padding = tokens && tokens.padding ? tokens.padding : props.padding;\n  /* eslint-enable deprecation/deprecation */\n\n  const { rowGap, columnGap } = parseGap(childrenGap, theme);\n\n  const horizontalMargin = `${-0.5 * columnGap.value}${columnGap.unit}`;\n  const verticalMargin = `${-0.5 * rowGap.value}${rowGap.unit}`;\n\n  // styles to be applied to all direct children regardless of wrap or direction\n  const childStyles = {\n    textOverflow: 'ellipsis',\n  };\n\n  // selectors to be applied regardless of wrap or direction\n  const commonSelectors = {\n    // flexShrink styles are applied by the StackItem\n    '> *:not(.ms-StackItem)': {\n      flexShrink: disableShrink ? 0 : 1,\n    },\n  };\n\n  if (wrap) {\n    return {\n      root: [\n        classNames.root,\n        {\n          flexWrap: 'wrap',\n          maxWidth,\n          maxHeight,\n          width: 'auto',\n          overflow: 'visible',\n          height: '100%',\n        },\n        horizontalAlign && {\n          [horizontal ? 'justifyContent' : 'alignItems']: nameMap[horizontalAlign] || horizontalAlign,\n        },\n        verticalAlign && {\n          [horizontal ? 'alignItems' : 'justifyContent']: nameMap[verticalAlign] || verticalAlign,\n        },\n        className,\n        {\n          // not allowed to be overridden by className\n          // since this is necessary in order to prevent collapsing margins\n          display: 'flex',\n        },\n        horizontal && {\n          height: verticalFill ? '100%' : 'auto',\n        },\n      ],\n\n      inner: [\n        classNames.inner,\n        {\n          display: 'flex',\n          flexWrap: 'wrap',\n          marginLeft: horizontalMargin,\n          marginRight: horizontalMargin,\n          marginTop: verticalMargin,\n          marginBottom: verticalMargin,\n          overflow: 'visible',\n          boxSizing: 'border-box',\n          padding: parsePadding(padding, theme),\n          // avoid unnecessary calc() calls if horizontal gap is 0\n          width: columnGap.value === 0 ? '100%' : `calc(100% + ${columnGap.value}${columnGap.unit})`,\n          maxWidth: '100vw',\n\n          selectors: {\n            '> *': {\n              margin: `${0.5 * rowGap.value}${rowGap.unit} ${0.5 * columnGap.value}${columnGap.unit}`,\n\n              ...childStyles,\n            },\n            ...commonSelectors,\n          },\n        },\n        horizontalAlign && {\n          [horizontal ? 'justifyContent' : 'alignItems']: nameMap[horizontalAlign] || horizontalAlign,\n        },\n        verticalAlign && {\n          [horizontal ? 'alignItems' : 'justifyContent']: nameMap[verticalAlign] || verticalAlign,\n        },\n        horizontal && {\n          flexDirection: reversed ? 'row-reverse' : 'row',\n\n          // avoid unnecessary calc() calls if vertical gap is 0\n          height: rowGap.value === 0 ? '100%' : `calc(100% + ${rowGap.value}${rowGap.unit})`,\n\n          selectors: {\n            '> *': {\n              maxWidth: columnGap.value === 0 ? '100%' : `calc(100% - ${columnGap.value}${columnGap.unit})`,\n            },\n          },\n        },\n        !horizontal && {\n          flexDirection: reversed ? 'column-reverse' : 'column',\n          height: `calc(100% + ${rowGap.value}${rowGap.unit})`,\n\n          selectors: {\n            '> *': {\n              maxHeight: rowGap.value === 0 ? '100%' : `calc(100% - ${rowGap.value}${rowGap.unit})`,\n            },\n          },\n        },\n      ],\n    } as IStackStyles;\n  }\n\n  return {\n    root: [\n      classNames.root,\n      {\n        display: 'flex',\n        flexDirection: horizontal ? (reversed ? 'row-reverse' : 'row') : reversed ? 'column-reverse' : 'column',\n        flexWrap: 'nowrap',\n        width: 'auto',\n        height: verticalFill ? '100%' : 'auto',\n        maxWidth,\n        maxHeight,\n        padding: parsePadding(padding, theme),\n        boxSizing: 'border-box',\n\n        selectors: {\n          '> *': childStyles,\n\n          // apply gap margin to every direct child except the first direct child if the direction is not reversed,\n          // and the last direct one if it is\n          [reversed ? '> *:not(:last-child)' : '> *:not(:first-child)']: [\n            horizontal && {\n              marginLeft: `${columnGap.value}${columnGap.unit}`,\n            },\n            !horizontal && {\n              marginTop: `${rowGap.value}${rowGap.unit}`,\n            },\n          ],\n\n          ...commonSelectors,\n        },\n      },\n      grow && {\n        flexGrow: grow === true ? 1 : grow,\n      },\n      horizontalAlign && {\n        [horizontal ? 'justifyContent' : 'alignItems']: nameMap[horizontalAlign] || horizontalAlign,\n      },\n      verticalAlign && {\n        [horizontal ? 'alignItems' : 'justifyContent']: nameMap[verticalAlign] || verticalAlign,\n      },\n      className,\n    ],\n    // TODO: this cast may be hiding some potential issues with styling and name\n    //        lookups and should be removed\n  } as IStackStyles;\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}