{"ast":null,"code":"export var TextStyles = function (props, theme) {\n  var as = props.as,\n      className = props.className,\n      block = props.block,\n      nowrap = props.nowrap,\n      variant = props.variant;\n  var fonts = theme.fonts,\n      semanticColors = theme.semanticColors;\n  var variantObject = fonts[variant || 'medium'];\n  return {\n    root: [variantObject, {\n      color: variantObject.color || semanticColors.bodyText,\n      display: block ? as === 'td' ? 'table-cell' : 'block' : 'inline',\n      mozOsxFontSmoothing: variantObject.MozOsxFontSmoothing,\n      webkitFontSmoothing: variantObject.WebkitFontSmoothing\n    }, nowrap && {\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    }, className]\n  };\n};","map":{"version":3,"sources":["components/Text/Text.styles.ts"],"names":[],"mappings":"AAGA,OAAO,IAAM,UAAU,GAA6B,UAAC,KAAD,EAAoB,KAApB,EAAiC;EAC3E,IAAA,EAAE,GAAwC,KAAK,CAA7C,EAAF;EAAA,IAAI,SAAS,GAA6B,KAAK,CAAlC,SAAb;EAAA,IAAe,KAAK,GAAsB,KAAK,CAA3B,KAApB;EAAA,IAAsB,MAAM,GAAc,KAAK,CAAnB,MAA5B;EAAA,IAA8B,OAAO,GAAK,KAAK,CAAV,OAArC;EACA,IAAA,KAAK,GAAqB,KAAK,CAA1B,KAAL;EAAA,IAAO,cAAc,GAAK,KAAK,CAAV,cAArB;EACR,IAAM,aAAa,GAAG,KAAK,CAAC,OAAO,IAAI,QAAZ,CAA3B;EAEA,OAAO;IACL,IAAI,EAAE,CACJ,aADI,EAEJ;MACE,KAAK,EAAE,aAAa,CAAC,KAAd,IAAuB,cAAc,CAAC,QAD/C;MAEE,OAAO,EAAE,KAAK,GAAI,EAAE,KAAK,IAAP,GAAc,YAAd,GAA6B,OAAjC,GAA4C,QAF5D;MAGE,mBAAmB,EAAE,aAAa,CAAC,mBAHrC;MAIE,mBAAmB,EAAE,aAAa,CAAC;IAJrC,CAFI,EAQJ,MAAM,IAAI;MACR,UAAU,EAAE,QADJ;MAER,QAAQ,EAAE,QAFF;MAGR,YAAY,EAAE;IAHN,CARN,EAaJ,SAbI;EADD,CAAP;AAiBD,CAtBM","sourcesContent":["import type { ITextComponent, ITextStyles, ITextStylesReturnType, ITextProps } from './Text.types';\nimport type { ITheme } from '../../Styling';\n\nexport const TextStyles: ITextComponent['styles'] = (props: ITextProps, theme: ITheme): ITextStylesReturnType => {\n  const { as, className, block, nowrap, variant } = props;\n  const { fonts, semanticColors } = theme;\n  const variantObject = fonts[variant || 'medium'];\n\n  return {\n    root: [\n      variantObject,\n      {\n        color: variantObject.color || semanticColors.bodyText,\n        display: block ? (as === 'td' ? 'table-cell' : 'block') : 'inline',\n        mozOsxFontSmoothing: variantObject.MozOsxFontSmoothing,\n        webkitFontSmoothing: variantObject.WebkitFontSmoothing,\n      },\n      nowrap && {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n      },\n      className,\n    ],\n  } as ITextStyles;\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}