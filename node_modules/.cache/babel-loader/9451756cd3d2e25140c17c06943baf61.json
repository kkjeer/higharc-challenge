{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { getClassNames } from './ActivityItem.classNames';\nimport { getStyles } from './ActivityItem.styles';\nimport { PersonaSize, PersonaCoin } from '../../Persona';\n/**\n * {@docCategory ActivityItem}\n */\n\nvar ActivityItem =\n/** @class */\nfunction (_super) {\n  __extends(ActivityItem, _super);\n\n  function ActivityItem(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._onRenderIcon = function (props) {\n      if (props.activityPersonas) {\n        return _this._onRenderPersonaArray(props);\n      } else {\n        return _this.props.activityIcon;\n      }\n    };\n\n    _this._onRenderActivityDescription = function (props) {\n      var classNames = _this._getClassNames(props); // eslint-disable-next-line deprecation/deprecation\n\n\n      var activityDescription = props.activityDescription || props.activityDescriptionText;\n\n      if (activityDescription) {\n        return React.createElement(\"span\", {\n          className: classNames.activityText\n        }, activityDescription);\n      }\n\n      return null;\n    };\n\n    _this._onRenderComments = function (props) {\n      var classNames = _this._getClassNames(props); // eslint-disable-next-line deprecation/deprecation\n\n\n      var comments = props.comments || props.commentText;\n\n      if (!props.isCompact && comments) {\n        return React.createElement(\"div\", {\n          className: classNames.commentText\n        }, comments);\n      }\n\n      return null;\n    };\n\n    _this._onRenderTimeStamp = function (props) {\n      var classNames = _this._getClassNames(props);\n\n      if (!props.isCompact && props.timeStamp) {\n        return React.createElement(\"div\", {\n          className: classNames.timeStamp\n        }, props.timeStamp);\n      }\n\n      return null;\n    }; // If activityPersonas is an array of persona props, build the persona cluster element.\n\n\n    _this._onRenderPersonaArray = function (props) {\n      var classNames = _this._getClassNames(props);\n\n      var personaElement = null;\n      var activityPersonas = props.activityPersonas;\n\n      if (activityPersonas[0].imageUrl || activityPersonas[0].imageInitials) {\n        var personaList_1 = [];\n        var showSize16Personas_1 = activityPersonas.length > 1 || props.isCompact;\n        var personaLimit_1 = props.isCompact ? 3 : 4;\n        var style_1 = undefined;\n\n        if (props.isCompact) {\n          style_1 = {\n            display: 'inline-block',\n            width: '10px',\n            minWidth: '10px',\n            overflow: 'visible'\n          };\n        }\n\n        activityPersonas.filter(function (person, index) {\n          return index < personaLimit_1;\n        }).forEach(function (person, index) {\n          personaList_1.push(React.createElement(PersonaCoin, __assign({}, person, {\n            key: person.key || index,\n            className: classNames.activityPersona,\n            // eslint-disable-next-line deprecation/deprecation\n            size: showSize16Personas_1 ? PersonaSize.size16 : PersonaSize.size32,\n            style: style_1\n          })));\n        });\n        personaElement = React.createElement(\"div\", {\n          className: classNames.personaContainer\n        }, personaList_1);\n      }\n\n      return personaElement;\n    };\n\n    return _this;\n  }\n\n  ActivityItem.prototype.render = function () {\n    var _a = this.props,\n        _b = _a.onRenderIcon,\n        onRenderIcon = _b === void 0 ? this._onRenderIcon : _b,\n        _c = _a.onRenderActivityDescription,\n        onRenderActivityDescription = _c === void 0 ? this._onRenderActivityDescription : _c,\n        _d = _a.onRenderComments,\n        onRenderComments = _d === void 0 ? this._onRenderComments : _d,\n        _e = _a.onRenderTimeStamp,\n        onRenderTimeStamp = _e === void 0 ? this._onRenderTimeStamp : _e,\n        animateBeaconSignal = _a.animateBeaconSignal,\n        isCompact = _a.isCompact;\n\n    var classNames = this._getClassNames(this.props);\n\n    return React.createElement(\"div\", {\n      className: classNames.root,\n      style: this.props.style\n    }, (this.props.activityPersonas || this.props.activityIcon || this.props.onRenderIcon) && React.createElement(\"div\", {\n      className: classNames.activityTypeIcon\n    }, animateBeaconSignal && isCompact && React.createElement(\"div\", {\n      className: classNames.pulsingBeacon\n    }), onRenderIcon(this.props)), React.createElement(\"div\", {\n      className: classNames.activityContent\n    }, onRenderActivityDescription(this.props, this._onRenderActivityDescription), onRenderComments(this.props, this._onRenderComments), onRenderTimeStamp(this.props, this._onRenderTimeStamp)));\n  };\n\n  ActivityItem.prototype._getClassNames = function (props) {\n    return getClassNames(getStyles(undefined, props.styles, props.animateBeaconSignal, props.beaconColorOne, props.beaconColorTwo, props.isCompact), props.className, props.activityPersonas, props.isCompact);\n  };\n\n  return ActivityItem;\n}(React.Component);\n\nexport { ActivityItem };","map":{"version":3,"sources":["components/ActivityItem/ActivityItem.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { getClassNames } from './ActivityItem.classNames';\nimport { getStyles } from './ActivityItem.styles';\nimport { PersonaSize, PersonaCoin } from '../../Persona';\nimport type { IActivityItemProps } from './ActivityItem.types';\nimport type { IActivityItemClassNames } from './ActivityItem.classNames';\nimport type { IPersonaSharedProps, IPersonaCoinProps } from '../../Persona';\n\ntype OptionalReactKey = { key?: React.Key };\n\n/**\n * {@docCategory ActivityItem}\n */\nexport class ActivityItem extends React.Component<IActivityItemProps, {}> {\n  constructor(props: IActivityItemProps) {\n    super(props);\n  }\n\n  public render(): JSX.Element {\n    const {\n      onRenderIcon = this._onRenderIcon,\n      onRenderActivityDescription = this._onRenderActivityDescription,\n      onRenderComments = this._onRenderComments,\n      onRenderTimeStamp = this._onRenderTimeStamp,\n      animateBeaconSignal,\n      isCompact,\n    } = this.props;\n\n    const classNames = this._getClassNames(this.props);\n\n    return (\n      <div className={classNames.root} style={this.props.style}>\n        {(this.props.activityPersonas || this.props.activityIcon || this.props.onRenderIcon) && (\n          <div className={classNames.activityTypeIcon}>\n            {animateBeaconSignal && isCompact && <div className={classNames.pulsingBeacon} />}\n            {onRenderIcon(this.props)}\n          </div>\n        )}\n\n        <div className={classNames.activityContent}>\n          {onRenderActivityDescription(this.props, this._onRenderActivityDescription)}\n          {onRenderComments(this.props, this._onRenderComments)}\n          {onRenderTimeStamp(this.props, this._onRenderTimeStamp)}\n        </div>\n      </div>\n    );\n  }\n\n  private _onRenderIcon = (props: IActivityItemProps): JSX.Element | React.ReactNode | null => {\n    if (props.activityPersonas) {\n      return this._onRenderPersonaArray(props);\n    } else {\n      return this.props.activityIcon;\n    }\n  };\n\n  private _onRenderActivityDescription = (props: IActivityItemProps): JSX.Element | null => {\n    const classNames = this._getClassNames(props);\n\n    // eslint-disable-next-line deprecation/deprecation\n    const activityDescription = props.activityDescription || props.activityDescriptionText;\n\n    if (activityDescription) {\n      return <span className={classNames.activityText}>{activityDescription}</span>;\n    }\n\n    return null;\n  };\n\n  private _onRenderComments = (props: IActivityItemProps): JSX.Element | null => {\n    const classNames = this._getClassNames(props);\n\n    // eslint-disable-next-line deprecation/deprecation\n    const comments = props.comments || props.commentText;\n\n    if (!props.isCompact && comments) {\n      return <div className={classNames.commentText}>{comments}</div>;\n    }\n\n    return null;\n  };\n\n  private _onRenderTimeStamp = (props: IActivityItemProps): JSX.Element | null => {\n    const classNames = this._getClassNames(props);\n\n    if (!props.isCompact && props.timeStamp) {\n      return <div className={classNames.timeStamp}>{props.timeStamp}</div>;\n    }\n\n    return null;\n  };\n\n  // If activityPersonas is an array of persona props, build the persona cluster element.\n  private _onRenderPersonaArray = (props: IActivityItemProps): JSX.Element | null => {\n    const classNames = this._getClassNames(props);\n\n    let personaElement: JSX.Element | null = null;\n    const activityPersonas = props.activityPersonas as Array<IPersonaSharedProps & OptionalReactKey>;\n    if (activityPersonas[0].imageUrl || activityPersonas[0].imageInitials) {\n      const personaList: Array<JSX.Element> = [];\n      const showSize16Personas = activityPersonas.length > 1 || props.isCompact;\n      const personaLimit = props.isCompact ? 3 : 4;\n      let style: React.CSSProperties | undefined = undefined;\n      if (props.isCompact) {\n        style = {\n          display: 'inline-block',\n          width: '10px',\n          minWidth: '10px',\n          overflow: 'visible',\n        };\n      }\n      activityPersonas\n        .filter((person: IPersonaCoinProps & OptionalReactKey, index: number) => index < personaLimit)\n        .forEach((person: IPersonaCoinProps & OptionalReactKey, index: number) => {\n          personaList.push(\n            <PersonaCoin\n              {...person}\n              key={person.key || index}\n              className={classNames.activityPersona}\n              // eslint-disable-next-line deprecation/deprecation\n              size={showSize16Personas ? PersonaSize.size16 : PersonaSize.size32}\n              style={style}\n            />,\n          );\n        });\n      personaElement = <div className={classNames.personaContainer}>{personaList}</div>;\n    }\n    return personaElement;\n  };\n\n  private _getClassNames(props: IActivityItemProps): IActivityItemClassNames {\n    return getClassNames(\n      getStyles(\n        undefined,\n        props.styles,\n        props.animateBeaconSignal,\n        props.beaconColorOne,\n        props.beaconColorTwo,\n        props.isCompact,\n      ),\n      props.className!,\n      props.activityPersonas!,\n      props.isCompact!,\n    );\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}