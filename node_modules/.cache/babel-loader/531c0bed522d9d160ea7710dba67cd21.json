{"ast":null,"code":"import { MAX_COLOR_ALPHA } from './consts';\nimport { rgb2hsv } from './rgb2hsv';\nimport { rgb2hex } from './rgb2hex';\nimport { _rgbaOrHexString } from './_rgbaOrHexString';\n/** Converts an RGBA color to a color object (alpha defaults to 100). */\n\nexport function getColorFromRGBA(rgba) {\n  var _a = rgba.a,\n      a = _a === void 0 ? MAX_COLOR_ALPHA : _a,\n      b = rgba.b,\n      g = rgba.g,\n      r = rgba.r;\n\n  var _b = rgb2hsv(r, g, b),\n      h = _b.h,\n      s = _b.s,\n      v = _b.v;\n\n  var hex = rgb2hex(r, g, b);\n\n  var str = _rgbaOrHexString(r, g, b, a, hex);\n\n  var t = MAX_COLOR_ALPHA - a;\n  return {\n    a: a,\n    b: b,\n    g: g,\n    h: h,\n    hex: hex,\n    r: r,\n    s: s,\n    str: str,\n    v: v,\n    t: t\n  };\n}","map":{"version":3,"sources":["utilities/color/getColorFromRGBA.ts"],"names":[],"mappings":"AAAA,SAAS,eAAT,QAAgC,UAAhC;AACA,SAAS,OAAT,QAAwB,WAAxB;AACA,SAAS,OAAT,QAAwB,WAAxB;AACA,SAAS,gBAAT,QAAiC,oBAAjC;AAGA;;AACA,OAAM,SAAU,gBAAV,CAA2B,IAA3B,EAAqC;EACjC,IAAA,EAAA,GAAiC,IAAI,CAAlB,CAAnB;EAAA,IAAA,CAAC,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,eAAH,GAAkB,EAAnB;EAAA,IAAqB,CAAC,GAAW,IAAI,CAAf,CAAtB;EAAA,IAAwB,CAAC,GAAQ,IAAI,CAAZ,CAAzB;EAAA,IAA2B,CAAC,GAAK,IAAI,CAAT,CAA5B;;EACF,IAAA,EAAA,GAAc,OAAO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAArB;EAAA,IAAE,CAAC,GAAA,EAAA,CAAA,CAAH;EAAA,IAAK,CAAC,GAAA,EAAA,CAAA,CAAN;EAAA,IAAQ,CAAC,GAAA,EAAA,CAAA,CAAT;;EACN,IAAM,GAAG,GAAG,OAAO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAnB;;EACA,IAAM,GAAG,GAAG,gBAAgB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,GAAb,CAA5B;;EACA,IAAM,CAAC,GAAG,eAAe,GAAG,CAA5B;EAEA,OAAO;IAAE,CAAC,EAAA,CAAH;IAAK,CAAC,EAAA,CAAN;IAAQ,CAAC,EAAA,CAAT;IAAW,CAAC,EAAA,CAAZ;IAAc,GAAG,EAAA,GAAjB;IAAmB,CAAC,EAAA,CAApB;IAAsB,CAAC,EAAA,CAAvB;IAAyB,GAAG,EAAA,GAA5B;IAA8B,CAAC,EAAA,CAA/B;IAAiC,CAAC,EAAA;EAAlC,CAAP;AACD","sourcesContent":["import { MAX_COLOR_ALPHA } from './consts';\nimport { rgb2hsv } from './rgb2hsv';\nimport { rgb2hex } from './rgb2hex';\nimport { _rgbaOrHexString } from './_rgbaOrHexString';\nimport type { IRGB, IColor } from './interfaces';\n\n/** Converts an RGBA color to a color object (alpha defaults to 100). */\nexport function getColorFromRGBA(rgba: IRGB): IColor {\n  const { a = MAX_COLOR_ALPHA, b, g, r } = rgba;\n  const { h, s, v } = rgb2hsv(r, g, b);\n  const hex = rgb2hex(r, g, b);\n  const str = _rgbaOrHexString(r, g, b, a, hex);\n  const t = MAX_COLOR_ALPHA - a;\n\n  return { a, b, g, h, hex, r, s, str, v, t };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}