{"ast":null,"code":"import { HighContrastSelector } from '../../Styling';\nexport var getStyles = function (props) {\n  var _a, _b;\n\n  var theme = props.theme,\n      alignContent = props.alignContent,\n      vertical = props.vertical,\n      className = props.className;\n  var alignStart = alignContent === 'start';\n  var alignCenter = alignContent === 'center';\n  var alignEnd = alignContent === 'end';\n  return {\n    root: [theme.fonts.medium, {\n      position: 'relative'\n    }, alignContent && {\n      textAlign: alignContent\n    }, !alignContent && {\n      textAlign: 'center'\n    }, vertical && (alignCenter || !alignContent) && {\n      verticalAlign: 'middle'\n    }, vertical && alignStart && {\n      verticalAlign: 'top'\n    }, vertical && alignEnd && {\n      verticalAlign: 'bottom'\n    }, vertical && {\n      padding: '0 4px',\n      height: 'inherit',\n      display: 'table-cell',\n      zIndex: 1,\n      selectors: {\n        ':after': (_a = {\n          backgroundColor: theme.palette.neutralLighter,\n          width: '1px',\n          content: '\"\"',\n          position: 'absolute',\n          top: '0',\n          bottom: '0',\n          left: '50%',\n          right: '0',\n          zIndex: -1\n        }, _a[HighContrastSelector] = {\n          backgroundColor: 'WindowText'\n        }, _a)\n      }\n    }, !vertical && {\n      padding: '4px 0',\n      selectors: {\n        ':before': (_b = {\n          backgroundColor: theme.palette.neutralLighter,\n          height: '1px',\n          content: '\"\"',\n          display: 'block',\n          position: 'absolute',\n          top: '50%',\n          bottom: '0',\n          left: '0',\n          right: '0'\n        }, _b[HighContrastSelector] = {\n          backgroundColor: 'WindowText'\n        }, _b)\n      }\n    }, className],\n    content: [{\n      position: 'relative',\n      display: 'inline-block',\n      padding: '0 12px',\n      color: theme.semanticColors.bodyText,\n      background: theme.semanticColors.bodyBackground\n    }, vertical && {\n      padding: '12px 0'\n    }]\n  };\n};","map":{"version":3,"sources":["components/Separator/Separator.styles.ts"],"names":[],"mappings":"AAAA,SAAS,oBAAT,QAAqC,eAArC;AAGA,OAAO,IAAM,SAAS,GAAG,UAAC,KAAD,EAA4B;;;EAC3C,IAAA,KAAK,GAAwC,KAAK,CAA7C,KAAL;EAAA,IAAO,YAAY,GAA0B,KAAK,CAA/B,YAAnB;EAAA,IAAqB,QAAQ,GAAgB,KAAK,CAArB,QAA7B;EAAA,IAA+B,SAAS,GAAK,KAAK,CAAV,SAAxC;EAER,IAAM,UAAU,GAAG,YAAY,KAAK,OAApC;EACA,IAAM,WAAW,GAAG,YAAY,KAAK,QAArC;EACA,IAAM,QAAQ,GAAG,YAAY,KAAK,KAAlC;EAEA,OAAO;IACL,IAAI,EAAE,CACJ,KAAK,CAAC,KAAN,CAAY,MADR,EAEJ;MACE,QAAQ,EAAE;IADZ,CAFI,EAKJ,YAAY,IAAI;MACd,SAAS,EAAE;IADG,CALZ,EAQJ,CAAC,YAAD,IAAiB;MACf,SAAS,EAAE;IADI,CARb,EAWJ,QAAQ,KACL,WAAW,IAAI,CAAC,YADX,CAAR,IACoC;MAChC,aAAa,EAAE;IADiB,CAZhC,EAeJ,QAAQ,IACN,UADF,IACgB;MACZ,aAAa,EAAE;IADH,CAhBZ,EAmBJ,QAAQ,IACN,QADF,IACc;MACV,aAAa,EAAE;IADL,CApBV,EAuBJ,QAAQ,IAAI;MACV,OAAO,EAAE,OADC;MAEV,MAAM,EAAE,SAFE;MAGV,OAAO,EAAE,YAHC;MAIV,MAAM,EAAE,CAJE;MAKV,SAAS,EAAE;QACT,WAAQ,EAAA,GAAA;UACN,eAAe,EAAE,KAAK,CAAC,OAAN,CAAc,cADzB;UAEN,KAAK,EAAE,KAFD;UAGN,OAAO,EAAE,IAHH;UAIN,QAAQ,EAAE,UAJJ;UAKN,GAAG,EAAE,GALC;UAMN,MAAM,EAAE,GANF;UAON,IAAI,EAAE,KAPA;UAQN,KAAK,EAAE,GARD;UASN,MAAM,EAAE,CAAC;QATH,CAAA,EAUN,EAAA,CAAC,oBAAD,CAAA,GAAwB;UACtB,eAAe,EAAE;QADK,CAVlB,EAaP,EAbD;MADS;IALD,CAvBR,EA6CJ,CAAC,QAAD,IAAa;MACX,OAAO,EAAE,OADE;MAEX,SAAS,EAAE;QACT,YAAS,EAAA,GAAA;UACP,eAAe,EAAE,KAAK,CAAC,OAAN,CAAc,cADxB;UAEP,MAAM,EAAE,KAFD;UAGP,OAAO,EAAE,IAHF;UAIP,OAAO,EAAE,OAJF;UAKP,QAAQ,EAAE,UALH;UAMP,GAAG,EAAE,KANE;UAOP,MAAM,EAAE,GAPD;UAQP,IAAI,EAAE,GARC;UASP,KAAK,EAAE;QATA,CAAA,EAUP,EAAA,CAAC,oBAAD,CAAA,GAAwB;UACtB,eAAe,EAAE;QADK,CAVjB,EAaR,EAbD;MADS;IAFA,CA7CT,EAgEJ,SAhEI,CADD;IAmEL,OAAO,EAAE,CACP;MACE,QAAQ,EAAE,UADZ;MAEE,OAAO,EAAE,cAFX;MAGE,OAAO,EAAE,QAHX;MAIE,KAAK,EAAE,KAAK,CAAC,cAAN,CAAqB,QAJ9B;MAKE,UAAU,EAAE,KAAK,CAAC,cAAN,CAAqB;IALnC,CADO,EAQP,QAAQ,IAAI;MACV,OAAO,EAAE;IADC,CARL;EAnEJ,CAAP;AAgFD,CAvFM","sourcesContent":["import { HighContrastSelector } from '../../Styling';\nimport type { ISeparatorStyleProps, ISeparatorStyles } from './Separator.types';\n\nexport const getStyles = (props: ISeparatorStyleProps): ISeparatorStyles => {\n  const { theme, alignContent, vertical, className } = props;\n\n  const alignStart = alignContent === 'start';\n  const alignCenter = alignContent === 'center';\n  const alignEnd = alignContent === 'end';\n\n  return {\n    root: [\n      theme.fonts.medium,\n      {\n        position: 'relative',\n      },\n      alignContent && {\n        textAlign: alignContent,\n      },\n      !alignContent && {\n        textAlign: 'center',\n      },\n      vertical &&\n        (alignCenter || !alignContent) && {\n          verticalAlign: 'middle',\n        },\n      vertical &&\n        alignStart && {\n          verticalAlign: 'top',\n        },\n      vertical &&\n        alignEnd && {\n          verticalAlign: 'bottom',\n        },\n      vertical && {\n        padding: '0 4px',\n        height: 'inherit',\n        display: 'table-cell',\n        zIndex: 1,\n        selectors: {\n          ':after': {\n            backgroundColor: theme.palette.neutralLighter,\n            width: '1px',\n            content: '\"\"',\n            position: 'absolute',\n            top: '0',\n            bottom: '0',\n            left: '50%',\n            right: '0',\n            zIndex: -1,\n            [HighContrastSelector]: {\n              backgroundColor: 'WindowText',\n            },\n          },\n        },\n      },\n      !vertical && {\n        padding: '4px 0',\n        selectors: {\n          ':before': {\n            backgroundColor: theme.palette.neutralLighter,\n            height: '1px',\n            content: '\"\"',\n            display: 'block',\n            position: 'absolute',\n            top: '50%',\n            bottom: '0',\n            left: '0',\n            right: '0',\n            [HighContrastSelector]: {\n              backgroundColor: 'WindowText',\n            },\n          },\n        },\n      },\n      className,\n    ],\n    content: [\n      {\n        position: 'relative',\n        display: 'inline-block',\n        padding: '0 12px',\n        color: theme.semanticColors.bodyText,\n        background: theme.semanticColors.bodyBackground,\n      },\n      vertical && {\n        padding: '12px 0',\n      },\n    ],\n  };\n};\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}