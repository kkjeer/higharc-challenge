{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport * as React from 'react';\nimport { classNamesFunction, getNativeProps, divProperties, enableBodyScroll, disableBodyScroll, initializeComponentRef } from '../../Utilities';\nvar getClassNames = classNamesFunction();\n\nvar OverlayBase =\n/** @class */\nfunction (_super) {\n  __extends(OverlayBase, _super);\n\n  function OverlayBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    initializeComponentRef(_this);\n    var _a = _this.props.allowTouchBodyScroll,\n        allowTouchBodyScroll = _a === void 0 ? false : _a;\n    _this._allowTouchBodyScroll = allowTouchBodyScroll;\n    return _this;\n  }\n\n  OverlayBase.prototype.componentDidMount = function () {\n    !this._allowTouchBodyScroll && disableBodyScroll();\n  };\n\n  OverlayBase.prototype.componentWillUnmount = function () {\n    !this._allowTouchBodyScroll && enableBodyScroll();\n  };\n\n  OverlayBase.prototype.render = function () {\n    var _a = this.props,\n        isDark = _a.isDarkThemed,\n        className = _a.className,\n        theme = _a.theme,\n        styles = _a.styles;\n    var divProps = getNativeProps(this.props, divProperties);\n    var classNames = getClassNames(styles, {\n      theme: theme,\n      className: className,\n      isDark: isDark\n    });\n    return React.createElement(\"div\", __assign({}, divProps, {\n      className: classNames.root\n    }));\n  };\n\n  return OverlayBase;\n}(React.Component);\n\nexport { OverlayBase };","map":{"version":3,"sources":["components/Overlay/Overlay.base.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SACE,kBADF,EAEE,cAFF,EAGE,aAHF,EAIE,gBAJF,EAKE,iBALF,EAME,sBANF,QAOO,iBAPP;AAUA,IAAM,aAAa,GAAG,kBAAkB,EAAxC;;AAEA,IAAA,WAAA;AAAA;AAAA,UAAA,MAAA,EAAA;EAAiC,SAAA,CAAA,WAAA,EAAA,MAAA,CAAA;;EAG/B,SAAA,WAAA,CAAY,KAAZ,EAAgC;IAAhC,IAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAN,KAAY,IADd;;IAGE,sBAAsB,CAAC,KAAD,CAAtB;IACQ,IAAA,EAAA,GAAiC,KAAI,CAAC,KAAL,CAAL,oBAA5B;IAAA,IAAA,oBAAoB,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,EAA5B;IACR,KAAI,CAAC,qBAAL,GAA6B,oBAA7B;;EACD;;EAEM,WAAA,CAAA,SAAA,CAAA,iBAAA,GAAP,YAAA;IACE,CAAC,KAAK,qBAAN,IAA+B,iBAAiB,EAAhD;EACD,CAFM;;EAIA,WAAA,CAAA,SAAA,CAAA,oBAAA,GAAP,YAAA;IACE,CAAC,KAAK,qBAAN,IAA+B,gBAAgB,EAA/C;EACD,CAFM;;EAIA,WAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;IACQ,IAAA,EAAA,GAAqD,KAAK,KAA1D;IAAA,IAAgB,MAAM,GAAA,EAAA,CAAA,YAAtB;IAAA,IAAwB,SAAS,GAAA,EAAA,CAAA,SAAjC;IAAA,IAAmC,KAAK,GAAA,EAAA,CAAA,KAAxC;IAAA,IAA0C,MAAM,GAAA,EAAA,CAAA,MAAhD;IAEN,IAAM,QAAQ,GAAG,cAAc,CAAuC,KAAK,KAA5C,EAAmD,aAAnD,CAA/B;IAEA,IAAM,UAAU,GAAG,aAAa,CAAC,MAAD,EAAU;MACxC,KAAK,EAAE,KADiC;MAExC,SAAS,EAAA,SAF+B;MAGxC,MAAM,EAAA;IAHkC,CAAV,CAAhC;IAMA,OAAO,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA,EAAA,EAAS,QAAT,EAAiB;MAAE,SAAS,EAAE,UAAU,CAAC;IAAxB,CAAjB,CAAA,CAAP;EACD,CAZM;;EAaT,OAAA,WAAA;AAAC,CAhCD,CAAiC,KAAK,CAAC,SAAvC,CAAA","sourcesContent":["import * as React from 'react';\nimport {\n  classNamesFunction,\n  getNativeProps,\n  divProperties,\n  enableBodyScroll,\n  disableBodyScroll,\n  initializeComponentRef,\n} from '../../Utilities';\nimport type { IOverlayProps, IOverlayStyleProps, IOverlayStyles } from './Overlay.types';\n\nconst getClassNames = classNamesFunction<IOverlayStyleProps, IOverlayStyles>();\n\nexport class OverlayBase extends React.Component<IOverlayProps, {}> {\n  private _allowTouchBodyScroll: boolean;\n\n  constructor(props: IOverlayProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    const { allowTouchBodyScroll = false } = this.props;\n    this._allowTouchBodyScroll = allowTouchBodyScroll;\n  }\n\n  public componentDidMount(): void {\n    !this._allowTouchBodyScroll && disableBodyScroll();\n  }\n\n  public componentWillUnmount(): void {\n    !this._allowTouchBodyScroll && enableBodyScroll();\n  }\n\n  public render(): JSX.Element {\n    const { isDarkThemed: isDark, className, theme, styles } = this.props;\n\n    const divProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, divProperties);\n\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      isDark,\n    });\n\n    return <div {...divProps} className={classNames.root} />;\n  }\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}