{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { hsv2rgb } from './hsv2rgb';\nimport { rgb2hex } from './rgb2hex';\nimport { _rgbaOrHexString } from './_rgbaOrHexString';\n/**\n * Gets a color with the same hue as `color` and other components updated to match the given\n * saturation and value.\n *\n * Does not modify the original `color` and does not supply a default alpha value.\n */\n\nexport function updateSV(color, s, v) {\n  var _a = hsv2rgb(color.h, s, v),\n      r = _a.r,\n      g = _a.g,\n      b = _a.b;\n\n  var hex = rgb2hex(r, g, b);\n  return __assign(__assign({}, color), {\n    s: s,\n    v: v,\n    r: r,\n    g: g,\n    b: b,\n    hex: hex,\n    str: _rgbaOrHexString(r, g, b, color.a, hex)\n  });\n}","map":{"version":3,"sources":["utilities/color/updateSV.ts"],"names":[],"mappings":";AAAA,SAAS,OAAT,QAAwB,WAAxB;AACA,SAAS,OAAT,QAAwB,WAAxB;AACA,SAAS,gBAAT,QAAiC,oBAAjC;AAGA;;;;;AAKG;;AACH,OAAM,SAAU,QAAV,CAAmB,KAAnB,EAAkC,CAAlC,EAA6C,CAA7C,EAAsD;EACpD,IAAA,EAAA,GAAc,OAAO,CAAC,KAAK,CAAC,CAAP,EAAU,CAAV,EAAa,CAAb,CAArB;EAAA,IAAE,CAAC,GAAA,EAAA,CAAA,CAAH;EAAA,IAAK,CAAC,GAAA,EAAA,CAAA,CAAN;EAAA,IAAQ,CAAC,GAAA,EAAA,CAAA,CAAT;;EACN,IAAM,GAAG,GAAG,OAAO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAnB;EAEA,OAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACK,KADL,CAAA,EACU;IACR,CAAC,EAAA,CADO;IAER,CAAC,EAAA,CAFO;IAGR,CAAC,EAAA,CAHO;IAIR,CAAC,EAAA,CAJO;IAKR,CAAC,EAAA,CALO;IAMR,GAAG,EAAA,GANK;IAOR,GAAG,EAAE,gBAAgB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,KAAK,CAAC,CAAhB,EAAmB,GAAnB;EAPb,CADV,CAAA;AAUD","sourcesContent":["import { hsv2rgb } from './hsv2rgb';\nimport { rgb2hex } from './rgb2hex';\nimport { _rgbaOrHexString } from './_rgbaOrHexString';\nimport type { IColor } from './interfaces';\n\n/**\n * Gets a color with the same hue as `color` and other components updated to match the given\n * saturation and value.\n *\n * Does not modify the original `color` and does not supply a default alpha value.\n */\nexport function updateSV(color: IColor, s: number, v: number): IColor {\n  const { r, g, b } = hsv2rgb(color.h, s, v);\n  const hex = rgb2hex(r, g, b);\n\n  return {\n    ...color,\n    s,\n    v,\n    r,\n    g,\n    b,\n    hex,\n    str: _rgbaOrHexString(r, g, b, color.a, hex),\n  };\n}\n"],"sourceRoot":"../src/"},"metadata":{},"sourceType":"module"}